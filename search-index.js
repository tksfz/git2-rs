var searchIndex = {};
searchIndex['git2_curl'] = {"items":[[0,"","git2_curl","A crate for using libcurl as a backend for HTTP git requests with git2-rs.",null,null],[5,"register","","Register the libcurl backend for HTTP requests made by libgit2.",null,{"inputs":[{"name":"handle"}],"output":null}]],"paths":[]};
searchIndex['git2'] = {"items":[[0,"","git2","# libgit2 bindings for Rust",null,null],[3,"Blame","","Opaque structure to hold blame results.",null,null],[3,"BlameHunk","","Structure that represents a blame hunk.",null,null],[3,"BlameIter","","An iterator over the hunks in a blame.",null,null],[3,"BlameOptions","","Blame options",null,null],[3,"Blob","","A structure to represent a git [blob][1]",null,null],[3,"Branch","","A structure to represent a git [branch][1]",null,null],[3,"Branches","","An iterator over the branches inside of a repository.",null,null],[3,"Buf","","A structure to wrap an intermediate buffer used by libgit2.",null,null],[3,"Commit","","A structure to represent a git [commit][1]",null,null],[3,"Parents","","An iterator over the parent commits of a commit.",null,null],[3,"Config","","A structure representing a git configuration key/value store",null,null],[3,"ConfigEntry","","A struct representing a certain entry owned by a `Config` instance.",null,null],[3,"ConfigEntries","","An iterator over the `ConfigEntry` values of a `Config` structure.",null,null],[3,"Cred","","A structure to represent git credentials in libgit2.",null,null],[3,"CredentialHelper","","Management of the gitcredentials(7) interface.",null,null],[12,"username","","A public field representing the currently discovered username from\nconfiguration.",0,null],[3,"Diff","","The diff object that contains all individual file deltas.",null,null],[3,"DiffDelta","","Description of changes to one entry.",null,null],[3,"DiffFile","","Description of one side of a delta.",null,null],[3,"DiffOptions","","Structure describing options about how the diff should be executed.",null,null],[3,"Deltas","","An iterator over the diffs in a delta",null,null],[3,"DiffLine","","Structure describing a line (or data span) of a diff.",null,null],[3,"DiffHunk","","Structure describing a hunk of a diff.",null,null],[3,"DiffStats","","Structure describing a hunk of a diff.",null,null],[3,"DiffFindOptions","","Control behavior of rename and copy detection",null,null],[3,"Error","","A structure to represent errors coming out of libgit2.",null,null],[3,"Index","","A structure to represent a git [index][1]",null,null],[3,"IndexEntry","","A structure to represent an entry or a file inside of an index.",null,null],[12,"ctime","","",1,null],[12,"mtime","","",1,null],[12,"dev","","",1,null],[12,"ino","","",1,null],[12,"mode","","",1,null],[12,"uid","","",1,null],[12,"gid","","",1,null],[12,"file_size","","",1,null],[12,"id","","",1,null],[12,"flags","","",1,null],[12,"flags_extended","","",1,null],[12,"path","","",1,null],[3,"IndexEntries","","An iterator over the entries in an index",null,null],[3,"Note","","A structure representing a [note][note] in git.",null,null],[3,"Notes","","An iterator over all of the notes within a repository.",null,null],[3,"Object","","A structure to represent a git [object][1]",null,null],[3,"Oid","","Unique identity of any object (commit, tree, blob, tag).",null,null],[3,"Pathspec","","Structure representing a compiled pathspec used for matching against various\nstructures.",null,null],[3,"PathspecMatchList","","List of filenames matching a pathspec.",null,null],[3,"PathspecFailedEntries","","Iterator over the failed list of pathspec items that did not match.",null,null],[3,"PathspecDiffEntries","","Iterator over the matching diff deltas.",null,null],[3,"PathspecEntries","","Iterator over the matched paths in a pathspec.",null,null],[3,"Push","","A structure to represent a pending push operation to a remote.",null,null],[3,"PushStatus","","A status representing the result of updating a remote reference.",null,null],[12,"reference","","The reference that was updated as part of a push.",2,null],[12,"message","","If `None`, the reference was updated successfully, otherwise a message\nexplaining why it could not be updated is provided.",2,null],[3,"Reference","","A structure to represent a git [reference][1].",null,null],[3,"References","","An iterator over the references in a repository.",null,null],[3,"ReferenceNames","","An iterator over the names of references in a repository.",null,null],[3,"Reflog","","A reference log of a git repository.",null,null],[3,"ReflogEntry","","An entry inside the reflog of a repository",null,null],[3,"ReflogIter","","An iterator over the entries inside of a reflog.",null,null],[3,"Refspec","","A structure to represent a git [refspec][1].",null,null],[3,"Remote","","A structure representing a [remote][1] of a git repository.",null,null],[3,"Refspecs","","An iterator over the refspecs that a remote contains.",null,null],[3,"RemoteHead","","Description of a reference advertised bya remote server, given out on calls\nto `list`.",null,null],[3,"RemoteCallbacks","","A structure to contain the callbacks which are invoked when a repository is\nbeing updated or downloaded.",null,null],[3,"Progress","","Struct representing the progress by an in-flight transfer.",null,null],[3,"Repository","","An owned git repository, representing all state associated with the\nunderlying filesystem.",null,null],[3,"RepositoryInitOptions","","Options which can be used to configure how a repository is initialized",null,null],[3,"Revspec","","A revspec represents a range of revisions within a repository.",null,null],[3,"Revwalk","","A revwalk allows traversal of the commit graph defined by including one or\nmore leaves and excluding one or more roots.",null,null],[3,"Signature","","A Signature is used to indicate authorship of various actions throughout the\nlibrary.",null,null],[3,"StatusOptions","","Options that can be provided to `repo.statuses()` to control how the status\ninformation is gathered.",null,null],[3,"Statuses","","A container for a list of status information about a repository.",null,null],[3,"StatusIter","","An iterator over the statuses in a `Statuses` instance.",null,null],[3,"StatusEntry","","A structure representing an entry in the `Statuses` structure.",null,null],[3,"Submodule","","A structure to represent a git [submodule][1]",null,null],[3,"Tag","","A structure to represent a git [tag][1]",null,null],[3,"Time","","Time in a signature",null,null],[3,"IndexTime","","Time structure used in a git index entry.",null,null],[3,"Tree","","A structure to represent a git [tree][1]",null,null],[3,"TreeEntry","","A structure representing an entry inside of a tree. An entry is borrowed\nfrom a tree.",null,null],[3,"TreeIter","","An iterator over the entries in a tree.",null,null],[3,"Sort","","",null,null],[3,"CredentialType","","",null,null],[3,"IndexAddOption","","",null,null],[3,"RevparseMode","","",null,null],[3,"Status","","",null,null],[3,"RepositoryInitMode","","",null,null],[3,"SubmoduleStatus","","",null,null],[3,"PathspecFlags","","",null,null],[3,"DiffStatsFormat","","/// Formatting options for diff stats",null,null],[4,"StatusShow","","Enumeration of possible methods of what can be shown through a status\noperation.",null,null],[13,"Index","","Only gives status based on HEAD to index comparison, not looking at\nworking directory changes.",3,null],[13,"Workdir","","Only gives status based on index to working directory comparison, not\ncomparing the index to the HEAD.",3,null],[13,"IndexAndWorkdir","","The default, this roughly matches `git status --porcelain` regarding\nwhich files are included and in what order.",3,null],[4,"ErrorCode","","An enumeration of possible errors that can happen when working with a git\nrepository.",null,null],[13,"GenericError","","Generic error",4,null],[13,"NotFound","","Requested object could not be found",4,null],[13,"Exists","","Object exists preventing operation",4,null],[13,"Ambiguous","","More than one object matches",4,null],[13,"BufSize","","Output buffer too short to hold data",4,null],[13,"User","","Operation not allowed on bare repository",4,null],[13,"BareRepo","","Operation not allowed on bare repository",4,null],[13,"UnbornBranch","","HEAD refers to branch with no commits",4,null],[13,"Unmerged","","Merge in progress prevented operation",4,null],[13,"NotFastForward","","Reference was not fast-forwardable",4,null],[13,"InvalidSpec","","Name/ref spec was not in a valid format",4,null],[13,"MergeConflict","","Merge conflicts prevented operation",4,null],[13,"Locked","","Lock file prevented operation",4,null],[13,"Modified","","Reference value does not match expected",4,null],[4,"RepositoryState","","A listing of the possible states that a repository can be in.",null,null],[13,"Clean","","",5,null],[13,"Merge","","",5,null],[13,"Revert","","",5,null],[13,"CherryPick","","",5,null],[13,"Bisect","","",5,null],[13,"Rebase","","",5,null],[13,"RebaseInteractive","","",5,null],[13,"RebaseMerge","","",5,null],[13,"ApplyMailbox","","",5,null],[13,"ApplyMailboxOrRebase","","",5,null],[4,"Direction","","An enumeration of the possible directions for a remote.",null,null],[13,"Fetch","","Data will be fetched (read) from this remote.",6,null],[13,"Push","","Data will be pushed (written) to this remote.",6,null],[4,"ResetType","","An enumeration of the operations that can be performed for the `reset`\nmethod on a `Repository`.",null,null],[13,"Soft","","Move the head to the given commit.",7,null],[13,"Mixed","","Soft plus reset the index to the commit.",7,null],[13,"Hard","","Mixed plus changes in the working tree are discarded.",7,null],[4,"ObjectType","","An enumeration all possible kinds objects may have.",null,null],[13,"Any","","An object which corresponds to a any git object",8,null],[13,"Commit","","An object which corresponds to a git commit",8,null],[13,"Tree","","An object which corresponds to a git tree",8,null],[13,"Blob","","An object which corresponds to a git blob",8,null],[13,"Tag","","An object which corresponds to a git tag",8,null],[4,"BranchType","","An enumeration for the possible types of branches",null,null],[13,"Local","","A local branch not on a remote.",9,null],[13,"Remote","","A branch for a remote.",9,null],[4,"ConfigLevel","","An enumeration of the possible priority levels of a config file.",null,null],[13,"System","","System-wide configuration file, e.g. /etc/gitconfig",10,null],[13,"XDG","","XDG-compatible configuration file, e.g. ~/.config/git/config",10,null],[13,"Global","","User-specific configuration, e.g. ~/.gitconfig",10,null],[13,"Local","","Reopsitory specific config, e.g. $PWD/.git/config",10,null],[13,"App","","Application specific configuration file",10,null],[13,"Highest","","Highest level available",10,null],[4,"Delta","","What type of change is described by a `DiffDelta`?",null,null],[13,"Unmodified","","No changes",11,null],[13,"Added","","Entry does not exist in old version",11,null],[13,"Deleted","","Entry does not exist in new version",11,null],[13,"Modified","","Entry content changed between old and new",11,null],[13,"Renamed","","Entry was renamed wbetween old and new",11,null],[13,"Copied","","Entry was copied from another old entry",11,null],[13,"Ignored","","Entry is ignored item in workdir",11,null],[13,"Untracked","","Entry is untracked item in workdir",11,null],[13,"Typechange","","Type of entry changed between old and new",11,null],[13,"Unreadable","","Entry is unreadable",11,null],[4,"DiffFormat","","Possible output formats for diff data",null,null],[13,"Patch","","full git diff",12,null],[13,"PatchHeader","","just the headers of the patch",12,null],[13,"Raw","","like git diff --raw",12,null],[13,"NameOnly","","like git diff --name-only",12,null],[13,"NameStatus","","like git diff --name-status",12,null],[11,"into_c_string","collections::string","",13,{"inputs":[{"name":"string"}],"output":{"name":"result"}}],[11,"into_c_string","std::ffi::c_str","",14,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_c_string","std::path","",15,{"inputs":[{"name":"pathbuf"}],"output":{"name":"result"}}],[11,"into_c_string","std::ffi::os_str","",16,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"into_c_string","collections::vec","",17,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[0,"build","git2","Builder-pattern objects for configuration various git operations.",null,null],[3,"RepoBuilder","git2::build","A builder struct which is used to build configuration for cloning a new git\nrepository.",null,null],[3,"CheckoutBuilder","","A builder struct for configuring checkouts of a repository.",null,null],[6,"Progress","","Checkout progress notification callback.",null,null],[11,"new","","Creates a new repository builder with all of the default configuration.",18,{"inputs":[{"name":"repobuilder"}],"output":{"name":"repobuilder"}}],[11,"bare","","Indicate whether the repository will be cloned as a bare repository or\nnot.",18,{"inputs":[{"name":"repobuilder"},{"name":"bool"}],"output":{"name":"repobuilder"}}],[11,"branch","","Specify the name of the branch to check out after the clone.",18,{"inputs":[{"name":"repobuilder"},{"name":"str"}],"output":{"name":"repobuilder"}}],[11,"local","","Set the flag for bypassing the git aware transport mechanism for local\npaths.",18,{"inputs":[{"name":"repobuilder"},{"name":"bool"}],"output":{"name":"repobuilder"}}],[11,"hardlinks","","Set the flag for whether hardlinks are used when using a local git-aware\ntransport mechanism.",18,{"inputs":[{"name":"repobuilder"},{"name":"bool"}],"output":{"name":"repobuilder"}}],[11,"with_checkout","","Configure the checkout which will be performed by consuming a checkout\nbuilder.",18,{"inputs":[{"name":"repobuilder"},{"name":"checkoutbuilder"}],"output":{"name":"repobuilder"}}],[11,"remote_callbacks","","Set the callbacks which will be used to monitor the download progress.",18,{"inputs":[{"name":"repobuilder"},{"name":"remotecallbacks"}],"output":{"name":"repobuilder"}}],[11,"clone","","Clone a remote repository.",18,{"inputs":[{"name":"repobuilder"},{"name":"str"},{"name":"path"}],"output":{"name":"result"}}],[11,"new","","Creates a new builder for checkouts with all of its default\nconfiguration.",19,{"inputs":[{"name":"checkoutbuilder"}],"output":{"name":"checkoutbuilder"}}],[11,"dry_run","","Indicate that this checkout should perform a dry run by checking for\nconflicts but not make any actual changes.",19,{"inputs":[{"name":"checkoutbuilder"}],"output":{"name":"checkoutbuilder"}}],[11,"force","","Take any action necessary to get the working directory to match the\ntarget including potentially discarding modified files.",19,{"inputs":[{"name":"checkoutbuilder"}],"output":{"name":"checkoutbuilder"}}],[11,"safe","","Indicate that the checkout should be performed safely, allowing new\nfiles to be created but not overwriting extisting files or changes.",19,{"inputs":[{"name":"checkoutbuilder"}],"output":{"name":"checkoutbuilder"}}],[11,"allow_conflicts","","In safe mode, apply safe file updates even when there are conflicts\ninstead of canceling the checkout.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"remove_untracked","","Remove untracked files from the working dir.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"remove_ignored","","Remove ignored files from the working dir.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"update_only","","Only update the contents of files that already exist.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"update_index","","Prevents checkout from writing the updated files' information to the\nindex.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"refresh","","Indicate whether the index and git attributes should be refreshed from\ndisk before any operations.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"skip_unmerged","","Skip files with unmerged index entries.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"use_ours","","Indicate whether the checkout should proceed on conflicts by using the\nstage 2 version of the file (\"ours\").",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"use_theirs","","Indicate whether the checkout should proceed on conflicts by using the\nstage 3 version of the file (\"theirs\").",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"overwrite_ignored","","Indicate whether ignored files should be overwritten during the checkout.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"conflict_style_merge","","Indicate whether a normal merge file should be written for conflicts.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"conflict_style_diff3","","Indicates whether to include common ancestor data in diff3 format files\nfor conflicts.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"disable_filters","","Indicate whether to apply filters like CRLF conversion.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"bool"}],"output":{"name":"checkoutbuilder"}}],[11,"dir_perm","","Set the mode with which new directories are created.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"i32"}],"output":{"name":"checkoutbuilder"}}],[11,"file_perm","","Set the mode with which new files are created.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"i32"}],"output":{"name":"checkoutbuilder"}}],[11,"path","","Add a path to be checked out.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"t"}],"output":{"name":"checkoutbuilder"}}],[11,"target_dir","","Set the directory to check out to",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"path"}],"output":{"name":"checkoutbuilder"}}],[11,"ancestor_label","","The name of the common ancestor side of conflicts",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"str"}],"output":{"name":"checkoutbuilder"}}],[11,"our_label","","The name of the common our side of conflicts",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"str"}],"output":{"name":"checkoutbuilder"}}],[11,"their_label","","The name of the common their side of conflicts",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"str"}],"output":{"name":"checkoutbuilder"}}],[11,"progress","","Set a callback to receive notifications of checkout progress.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"f"}],"output":{"name":"checkoutbuilder"}}],[11,"configure","","Configure a raw checkout options based on this configuration.",19,{"inputs":[{"name":"checkoutbuilder"},{"name":"git_checkout_options"}],"output":null}],[0,"cert","git2","Certificate types which are passed to `CertificateCheck` in\n`RemoteCallbacks`.",null,null],[3,"Cert","git2::cert","A certificate for a remote connection, viewable as one of `CertHostkey` or\n`CertX509` currently.",null,null],[3,"CertHostkey","","Hostkey information taken from libssh2",null,null],[3,"CertX509","","X.509 certificate information",null,null],[11,"as_hostkey","","Attempt to view this certificate as an SSH hostkey.",20,{"inputs":[{"name":"cert"}],"output":{"name":"option"}}],[11,"as_x509","","Attempt to view this certificate as an X.509 certificate.",20,{"inputs":[{"name":"cert"}],"output":{"name":"option"}}],[11,"hash_md5","","Returns the md5 hash of the hostkey, if available.",21,{"inputs":[{"name":"certhostkey"}],"output":{"name":"option"}}],[11,"hash_sha1","","Returns the SHA-1 hash of the hostkey, if available.",21,{"inputs":[{"name":"certhostkey"}],"output":{"name":"option"}}],[11,"data","","Return the X.509 certificate data as a byte slice",22,null],[0,"string_array","git2","Bindings to libgit2's raw git_strarray type",null,null],[3,"StringArray","git2::string_array","A string array structure used by libgit2",null,null],[3,"Iter","","A forward iterator over the strings of an array, casted to `&str`.",null,null],[3,"IterBytes","","A forward iterator over the strings of an array, casted to `&[u8]`.",null,null],[11,"get","","Returns None if the i'th string is not utf8 or if i is out of bounds.",23,{"inputs":[{"name":"stringarray"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_bytes","","Returns None if `i` is out of bounds.",23,{"inputs":[{"name":"stringarray"},{"name":"usize"}],"output":{"name":"option"}}],[11,"iter","","Returns an iterator over the strings contained within this array.",23,{"inputs":[{"name":"stringarray"}],"output":{"name":"iter"}}],[11,"iter_bytes","","Returns an iterator over the strings contained within this array,\nyielding byte slices.",23,{"inputs":[{"name":"stringarray"}],"output":{"name":"iterbytes"}}],[11,"len","","Returns the number of strings in this array.",23,{"inputs":[{"name":"stringarray"}],"output":{"name":"usize"}}],[11,"next","","",24,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",24,null],[11,"next_back","","",24,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",25,{"inputs":[{"name":"iterbytes"}],"output":{"name":"option"}}],[11,"size_hint","","",25,null],[11,"next_back","","",25,{"inputs":[{"name":"iterbytes"}],"output":{"name":"option"}}],[11,"drop","","",23,{"inputs":[{"name":"stringarray"}],"output":null}],[0,"transport","git2","Interfaces for adding custom transports to libgit2",null,null],[3,"Transport","git2::transport","A transport is a structure which knows how to transfer data to and from a\nremote.",null,null],[4,"Service","","Actions that a smart transport can ask a subtransport to perform",null,null],[13,"UploadPackLs","","",26,null],[13,"UploadPack","","",26,null],[13,"ReceivePackLs","","",26,null],[13,"ReceivePack","","",26,null],[5,"register","","Add a custom transport definition, to be used in addition to the built-in\nset of transports that come with libgit2.",null,{"inputs":[{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[8,"SmartSubtransport","","Interfaced used by smart transports.",null,null],[10,"action","","Indicates that this subtransport will be performing the specified action\non the specified URL.",27,{"inputs":[{"name":"smartsubtransport"},{"name":"str"},{"name":"service"}],"output":{"name":"result"}}],[10,"close","","Terminates a connection with the remote.",27,{"inputs":[{"name":"smartsubtransport"}],"output":{"name":"result"}}],[8,"SmartSubtransportStream","","An instance of a stream over which a smart transport will communicate with a\nremote.",null,null],[11,"clone","","",26,{"inputs":[{"name":"service"}],"output":{"name":"service"}}],[11,"smart","","Creates a new transport which will use the \"smart\" transport protocol\nfor transferring data.",28,{"inputs":[{"name":"transport"},{"name":"remote"},{"name":"bool"},{"name":"s"}],"output":{"name":"result"}}],[11,"drop","","",28,{"inputs":[{"name":"transport"}],"output":null}],[11,"len","git2","Gets the number of hunks that exist in the blame structure.",29,{"inputs":[{"name":"blame"}],"output":{"name":"usize"}}],[11,"get_index","","Gets the blame hunk at the given index.",29,{"inputs":[{"name":"blame"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_line","","Gets the hunk that relates to the given line number in the newest\ncommit.",29,{"inputs":[{"name":"blame"},{"name":"usize"}],"output":{"name":"option"}}],[11,"iter","","Returns an iterator over the hunks in this blame.",29,{"inputs":[{"name":"blame"}],"output":{"name":"blameiter"}}],[11,"final_commit_id","","Returns OID of the commit where this line was last changed",30,{"inputs":[{"name":"blamehunk"}],"output":{"name":"oid"}}],[11,"final_signature","","Returns signature of the commit.",30,{"inputs":[{"name":"blamehunk"}],"output":{"name":"signature"}}],[11,"final_start_line","","Returns line number where this hunk begins.",30,{"inputs":[{"name":"blamehunk"}],"output":{"name":"usize"}}],[11,"orig_commit_id","","Returns the OID of the commit where this hunk was found.",30,{"inputs":[{"name":"blamehunk"}],"output":{"name":"oid"}}],[11,"orig_signature","","Returns signature of the commit.",30,{"inputs":[{"name":"blamehunk"}],"output":{"name":"signature"}}],[11,"orig_start_line","","Returns line number where this hunk begins.",30,{"inputs":[{"name":"blamehunk"}],"output":{"name":"usize"}}],[11,"path","","Returns path to the file where this hunk originated.",30,{"inputs":[{"name":"blamehunk"}],"output":{"name":"option"}}],[11,"is_boundary","","Tests whether this hunk has been tracked to a boundary commit\n(the root, or the commit specified in git_blame_options.oldest_commit).",30,{"inputs":[{"name":"blamehunk"}],"output":{"name":"bool"}}],[11,"lines_in_hunk","","Returns number of lines in this hunk.",30,{"inputs":[{"name":"blamehunk"}],"output":{"name":"usize"}}],[11,"new","","Initialize options",31,{"inputs":[{"name":"blameoptions"}],"output":{"name":"blameoptions"}}],[11,"track_copies_same_file","","Track lines that have moved within a file.",31,{"inputs":[{"name":"blameoptions"},{"name":"bool"}],"output":{"name":"blameoptions"}}],[11,"track_copies_same_commit_moves","","Track lines that have moved across files in the same commit.",31,{"inputs":[{"name":"blameoptions"},{"name":"bool"}],"output":{"name":"blameoptions"}}],[11,"track_copies_same_commit_copies","","Track lines that have been copied from another file that exists\nin the same commit.",31,{"inputs":[{"name":"blameoptions"},{"name":"bool"}],"output":{"name":"blameoptions"}}],[11,"track_copies_any_commit_copies","","Track lines that have been copied from another file that exists\nin any commit.",31,{"inputs":[{"name":"blameoptions"},{"name":"bool"}],"output":{"name":"blameoptions"}}],[11,"first_parent","","Restrict the search of commits to those reachable following only\nthe first parents.",31,{"inputs":[{"name":"blameoptions"},{"name":"bool"}],"output":{"name":"blameoptions"}}],[11,"newest_commit","","Setter for the id of the newest commit to consider.",31,{"inputs":[{"name":"blameoptions"},{"name":"oid"}],"output":{"name":"blameoptions"}}],[11,"oldest_commit","","Setter for the id of the oldest commit to consider.",31,{"inputs":[{"name":"blameoptions"},{"name":"oid"}],"output":{"name":"blameoptions"}}],[11,"drop","","",29,{"inputs":[{"name":"blame"}],"output":null}],[11,"next","","",32,{"inputs":[{"name":"blameiter"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"next_back","","",32,{"inputs":[{"name":"blameiter"}],"output":{"name":"option"}}],[11,"id","","Get the id (SHA1) of a repository blob",33,{"inputs":[{"name":"blob"}],"output":{"name":"oid"}}],[11,"is_binary","","Determine if the blob content is most certainly binary or not.",33,{"inputs":[{"name":"blob"}],"output":{"name":"bool"}}],[11,"content","","Get the content of this blob.",33,null],[11,"drop","","",33,{"inputs":[{"name":"blob"}],"output":null}],[11,"wrap","","Creates a new branch from a reference",34,{"inputs":[{"name":"branch"},{"name":"reference"}],"output":{"name":"branch"}}],[11,"get","","Gain access to the reference that is this branch",34,{"inputs":[{"name":"branch"}],"output":{"name":"reference"}}],[11,"into_reference","","Take ownership of the underlying reference.",34,{"inputs":[{"name":"branch"}],"output":{"name":"reference"}}],[11,"delete","","Delete an existing branch reference.",34,{"inputs":[{"name":"branch"}],"output":{"name":"result"}}],[11,"is_head","","Determine if the current local branch is pointed at by HEAD.",34,{"inputs":[{"name":"branch"}],"output":{"name":"bool"}}],[11,"rename","","Move/rename an existing local branch reference.",34,{"inputs":[{"name":"branch"},{"name":"str"},{"name":"bool"}],"output":{"name":"result"}}],[11,"name","","Return the name of the given local or remote branch.",34,{"inputs":[{"name":"branch"}],"output":{"name":"result"}}],[11,"name_bytes","","Return the name of the given local or remote branch.",34,{"inputs":[{"name":"branch"}],"output":{"name":"result"}}],[11,"upstream","","Return the reference supporting the remote tracking branch, given a\nlocal branch reference.",34,{"inputs":[{"name":"branch"}],"output":{"name":"result"}}],[11,"set_upstream","","Set the upstream configuration for a given local branch.",34,{"inputs":[{"name":"branch"},{"name":"option"}],"output":{"name":"result"}}],[11,"from_raw","","Creates a new iterator from the raw pointer given.",35,null],[11,"next","","",35,{"inputs":[{"name":"branches"}],"output":{"name":"option"}}],[11,"drop","","",35,{"inputs":[{"name":"branches"}],"output":null}],[11,"new","","Creates a new empty buffer.",36,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"as_str","","Attempt to view this buffer as a string slice.",36,{"inputs":[{"name":"buf"}],"output":{"name":"option"}}],[11,"deref","","",36,null],[11,"deref_mut","","",36,null],[11,"drop","","",36,{"inputs":[{"name":"buf"}],"output":null}],[11,"id","","Get the id (SHA1) of a repository commit",37,{"inputs":[{"name":"commit"}],"output":{"name":"oid"}}],[11,"tree_id","","Get the id of the tree pointed to by this commit.",37,{"inputs":[{"name":"commit"}],"output":{"name":"oid"}}],[11,"tree","","Get the tree pointed to by a commit.",37,{"inputs":[{"name":"commit"}],"output":{"name":"result"}}],[11,"raw","","Get access to the underlying raw pointer.",37,null],[11,"message","","Get the full message of a commit.",37,{"inputs":[{"name":"commit"}],"output":{"name":"option"}}],[11,"message_bytes","","Get the full message of a commit as a byte slice.",37,null],[11,"message_encoding","","Get the encoding for the message of a commit, as a string representing a\nstandard encoding name.",37,{"inputs":[{"name":"commit"}],"output":{"name":"option"}}],[11,"message_raw","","Get the full raw message of a commit.",37,{"inputs":[{"name":"commit"}],"output":{"name":"option"}}],[11,"message_raw_bytes","","Get the full raw message of a commit.",37,null],[11,"raw_header","","Get the full raw text of the commit header.",37,{"inputs":[{"name":"commit"}],"output":{"name":"option"}}],[11,"raw_header_bytes","","Get the full raw text of the commit header.",37,null],[11,"summary","","Get the short \"summary\" of the git commit message.",37,{"inputs":[{"name":"commit"}],"output":{"name":"option"}}],[11,"summary_bytes","","Get the short \"summary\" of the git commit message.",37,{"inputs":[{"name":"commit"}],"output":{"name":"option"}}],[11,"time","","Get the commit time (i.e. committer time) of a commit.",37,{"inputs":[{"name":"commit"}],"output":{"name":"time"}}],[11,"parents","","Creates a new iterator over the parents of this commit.",37,{"inputs":[{"name":"commit"}],"output":{"name":"parents"}}],[11,"parent_ids","","Creates a new iterator over the parents of this commit.",37,{"inputs":[{"name":"commit"}],"output":{"name":"parentids"}}],[11,"author","","Get the author of this commit.",37,{"inputs":[{"name":"commit"}],"output":{"name":"signature"}}],[11,"committer","","Get the committer of this commit.",37,{"inputs":[{"name":"commit"}],"output":{"name":"signature"}}],[11,"amend","","Amend this existing commit with all non-`None` values",37,{"inputs":[{"name":"commit"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"parent","","Get the specified parent of the commit.",37,{"inputs":[{"name":"commit"},{"name":"usize"}],"output":{"name":"result"}}],[11,"parent_id","","Get the specified parent id of the commit.",37,{"inputs":[{"name":"commit"},{"name":"usize"}],"output":{"name":"result"}}],[11,"next","","",38,{"inputs":[{"name":"parents"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"next_back","","",38,{"inputs":[{"name":"parents"}],"output":{"name":"option"}}],[11,"drop","","",37,{"inputs":[{"name":"commit"}],"output":null}],[11,"new","","Allocate a new configuration object",39,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[11,"open","","Create a new config instance containing a single on-disk file",39,{"inputs":[{"name":"config"},{"name":"path"}],"output":{"name":"result"}}],[11,"open_default","","Open the global, XDG and system configuration files",39,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[11,"find_global","","Locate the path to the global configuration file",39,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[11,"find_system","","Locate the path to the system configuration file",39,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[11,"find_xdg","","Locate the path to the global xdg compatible configuration file",39,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[11,"add_file","","Add an on-disk config file instance to an existing config",39,{"inputs":[{"name":"config"},{"name":"path"},{"name":"configlevel"},{"name":"bool"}],"output":{"name":"result"}}],[11,"remove","","Delete a config variable from the config file with the highest level\n(usually the local one).",39,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_bool","","Get the value of a boolean config variable.",39,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_i32","","Get the value of an integer config variable.",39,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_i64","","Get the value of an integer config variable.",39,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_str","","Get the value of a string config variable.",39,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_bytes","","Get the value of a string config variable as a byte slice.",39,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_string","","Get the value of a string config variable as an owned string.",39,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_path","","Get the value of a path config variable as an owned .",39,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_entry","","Get the ConfigEntry for a config variable.",39,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"entries","","Iterate over all the config variables",39,{"inputs":[{"name":"config"},{"name":"option"}],"output":{"name":"result"}}],[11,"open_global","","Open the global/XDG configuration file according to git's rules",39,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[11,"open_level","","Build a single-level focused config object from a multi-level one.",39,{"inputs":[{"name":"config"},{"name":"configlevel"}],"output":{"name":"result"}}],[11,"set_bool","","Set the value of a boolean config variable in the config file with the\nhighest level (usually the local one).",39,{"inputs":[{"name":"config"},{"name":"str"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_i32","","Set the value of an integer config variable in the config file with the\nhighest level (usually the local one).",39,{"inputs":[{"name":"config"},{"name":"str"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_i64","","Set the value of an integer config variable in the config file with the\nhighest level (usually the local one).",39,{"inputs":[{"name":"config"},{"name":"str"},{"name":"i64"}],"output":{"name":"result"}}],[11,"set_str","","Set the value of a string config variable in the config file with the\nhighest level (usually the local one).",39,{"inputs":[{"name":"config"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"snapshot","","Create a snapshot of the configuration",39,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[11,"drop","","",39,{"inputs":[{"name":"config"}],"output":null}],[11,"name","","Gets the name of this entry.",40,{"inputs":[{"name":"configentry"}],"output":{"name":"option"}}],[11,"name_bytes","","Gets the name of this entry as a byte slice.",40,null],[11,"value","","Gets the value of this entry.",40,{"inputs":[{"name":"configentry"}],"output":{"name":"option"}}],[11,"value_bytes","","Gets the value of this entry as a byte slice.",40,null],[11,"level","","Gets the configuration level of this entry.",40,{"inputs":[{"name":"configentry"}],"output":{"name":"configlevel"}}],[11,"drop","","",41,{"inputs":[{"name":"configentries"}],"output":null}],[11,"drop","","",40,{"inputs":[{"name":"configentry"}],"output":null}],[11,"default","","Create a \"default\" credential usable for Negotiate mechanisms like NTLM\nor Kerberos authentication.",42,{"inputs":[{"name":"cred"}],"output":{"name":"result"}}],[11,"ssh_key_from_agent","","Create a new ssh key credential object used for querying an ssh-agent.",42,{"inputs":[{"name":"cred"},{"name":"str"}],"output":{"name":"result"}}],[11,"ssh_key","","Create a new passphrase-protected ssh key credential object.",42,{"inputs":[{"name":"cred"},{"name":"str"},{"name":"option"},{"name":"path"},{"name":"option"}],"output":{"name":"result"}}],[11,"userpass_plaintext","","Create a new plain-text username and password credential object.",42,{"inputs":[{"name":"cred"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"credential_helper","","Attempt to read `credential.helper` according to gitcredentials(7) [1]",42,{"inputs":[{"name":"cred"},{"name":"config"},{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[11,"username","","Create a credential to specify a username.",42,{"inputs":[{"name":"cred"},{"name":"str"}],"output":{"name":"result"}}],[11,"has_username","","Check whether a credential object contains username information.",42,{"inputs":[{"name":"cred"}],"output":{"name":"bool"}}],[11,"credtype","","Return the type of credentials that this object represents.",42,{"inputs":[{"name":"cred"}],"output":{"name":"git_credtype_t"}}],[11,"unwrap","","Unwrap access to the underlying raw pointer, canceling the destructor",42,null],[11,"drop","","",42,{"inputs":[{"name":"cred"}],"output":null}],[11,"new","","Create a new credential helper object which will be used to probe git's\nlocal credential configuration.",0,{"inputs":[{"name":"credentialhelper"},{"name":"str"}],"output":{"name":"credentialhelper"}}],[11,"username","","Set the username that this credential helper will query with.",0,{"inputs":[{"name":"credentialhelper"},{"name":"option"}],"output":{"name":"credentialhelper"}}],[11,"config","","Query the specified configuration object to discover commands to\nexecute, usernames to query, etc.",0,{"inputs":[{"name":"credentialhelper"},{"name":"config"}],"output":{"name":"credentialhelper"}}],[11,"execute","","Execute this helper, attempting to discover a username/password pair.",0,{"inputs":[{"name":"credentialhelper"}],"output":{"name":"option"}}],[11,"tree_to_tree","","Create a diff with the difference between two tree objects.",43,{"inputs":[{"name":"diff"},{"name":"repository"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"tree_to_index","","Create a diff between a tree and repository index.",43,{"inputs":[{"name":"diff"},{"name":"repository"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"index_to_workdir","","Create a diff between the repository index and the workdir directory.",43,{"inputs":[{"name":"diff"},{"name":"repository"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"tree_to_workdir","","Create a diff between a tree and the working directory.",43,{"inputs":[{"name":"diff"},{"name":"repository"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"tree_to_workdir_with_index","","Create a diff between a tree and the working directory using index data\nto account for staged deletes, tracked files, etc.",43,{"inputs":[{"name":"diff"},{"name":"repository"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"merge","","Merge one diff into another.",43,{"inputs":[{"name":"diff"},{"name":"diff"}],"output":{"name":"result"}}],[11,"deltas","","Returns an iterator over the deltas in this diff.",43,{"inputs":[{"name":"diff"}],"output":{"name":"deltas"}}],[11,"get_delta","","Return the diff delta for an entry in the diff list.",43,{"inputs":[{"name":"diff"},{"name":"usize"}],"output":{"name":"option"}}],[11,"is_sorted_icase","","Check if deltas are sorted case sensitively or insensitively.",43,{"inputs":[{"name":"diff"}],"output":{"name":"bool"}}],[11,"print","","Iterate over a diff generating formatted text output.",43,{"inputs":[{"name":"diff"},{"name":"diffformat"},{"name":"f"}],"output":{"name":"result"}}],[11,"stats","","Accumulate diff statistics for all patches.",43,{"inputs":[{"name":"diff"}],"output":{"name":"result"}}],[11,"find_similar","","Transform a diff marking file renames, copies, etc.",43,{"inputs":[{"name":"diff"},{"name":"option"}],"output":{"name":"result"}}],[11,"drop","","",43,{"inputs":[{"name":"diff"}],"output":null}],[11,"nfiles","","Returns the number of files in this delta.",44,{"inputs":[{"name":"diffdelta"}],"output":{"name":"u16"}}],[11,"status","","Returns the status of this entry",44,{"inputs":[{"name":"diffdelta"}],"output":{"name":"delta"}}],[11,"old_file","","Return the file which represents the \"from\" side of the diff.",44,{"inputs":[{"name":"diffdelta"}],"output":{"name":"difffile"}}],[11,"new_file","","Return the file which represents the \"to\" side of the diff.",44,{"inputs":[{"name":"diffdelta"}],"output":{"name":"difffile"}}],[11,"id","","Returns the Oid of this item.",45,{"inputs":[{"name":"difffile"}],"output":{"name":"oid"}}],[11,"path_bytes","","Returns the path, in bytes, of the entry relative to the working\ndirectory of the repository.",45,{"inputs":[{"name":"difffile"}],"output":{"name":"option"}}],[11,"path","","Returns the path of the entry relative to the working directory of the\nrepository.",45,{"inputs":[{"name":"difffile"}],"output":{"name":"option"}}],[11,"size","","Returns the size of this entry, in bytes",45,{"inputs":[{"name":"difffile"}],"output":{"name":"u64"}}],[11,"new","","Creates a new set of empty diff options.",46,{"inputs":[{"name":"diffoptions"}],"output":{"name":"diffoptions"}}],[11,"reverse","","Flag indicating whether the sides of the diff will be reversed.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"include_ignored","","Flag indicating whether ignored files are included.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"recurse_ignored_dirs","","Flag indicating whether ignored directories are traversed deeply or not.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"include_untracked","","Flag indicating whether untracked files are in the diff",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"recurse_untracked_dirs","","Flag indicating whether untracked directories are deeply traversed or\nnot.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"include_unmodified","","Flag indicating whether unmodified files are in the diff.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"include_typechange","","If entrabled, then Typechange delta records are generated.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"include_typechange_trees","","Event with `include_typechange`, the tree treturned generally shows a\ndeleted blow. This flag correctly labels the tree transitions as a\ntypechange record with the `new_file`'s mode set to tree.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"ignore_filemode","","Flag indicating whether file mode changes are ignored.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"ignore_submodules","","Flag indicating whether all submodules should be treated as unmodified.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"ignore_case","","Flag indicating whether case insensitive filenames should be used.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"disable_pathspec_match","","If pathspecs are specified, this flag means that they should be applied\nas an exact match instead of a fnmatch pattern.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"skip_binary_check","","Disable updating the `binary` flag in delta records. This is useful when\niterating over a diff if you don't need hunk and data callbacks and want\nto avoid having to load a file completely.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"enable_fast_untracked_dirs","","When diff finds an untracked directory, to match the behavior of core\nGit, it scans the contents for ignored and untracked files. If all\ncontents are ignored, then the directory is ignored; if any contents are\nnot ignored, then the directory is untracked. This is extra work that\nmay not matter in many cases.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"update_index","","When diff finds a file in the working directory with stat information\ndifferent from the index, but the OID ends up being the same, write the\ncorrect stat information into the index. Note: without this flag, diff\nwill always leave the index untouched.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"include_unreadable","","Include unreadable files in the diff",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"include_unreadable_as_untracked","","Include unreadable files in the diff",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"force_text","","Treat all files as text, disabling binary attributes and detection.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"force_binary","","Treat all files as binary, disabling text diffs",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"ignore_whitespace","","Ignore all whitespace",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"ignore_whitespace_change","","Ignore changes in the amount of whitespace",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"ignore_whitespace_eol","","Ignore whitespace at tend of line",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"show_untracked_content","","When generating patch text, include the content of untracked files.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"show_unmodified","","When generating output, include the names of unmodified files if they\nare included in the `Diff`. Normally these are skipped in the formats\nthat list files (e.g. name-only, name-status, raw). Even with this these\nwill not be included in the patch format.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"patience","","Use the \"patience diff\" algorithm",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"minimal","","Take extra time to find the minimal diff",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"show_binary","","Include the necessary deflate/delta information so that `git-apply` can\napply given diff information to binary files.",46,{"inputs":[{"name":"diffoptions"},{"name":"bool"}],"output":{"name":"diffoptions"}}],[11,"context_lines","","Set the number of unchanged lines that define the boundary of a hunk\n(and to display before and after).",46,{"inputs":[{"name":"diffoptions"},{"name":"u32"}],"output":{"name":"diffoptions"}}],[11,"interhunk_lines","","Set the maximum number of unchanged lines between hunk boundaries before\nthe hunks will be merged into one.",46,{"inputs":[{"name":"diffoptions"},{"name":"u32"}],"output":{"name":"diffoptions"}}],[11,"id_abbrev","","The default value for this is `core.abbrev` or 7 if unset.",46,{"inputs":[{"name":"diffoptions"},{"name":"u16"}],"output":{"name":"diffoptions"}}],[11,"max_size","","Maximum size (in bytes) above which a blob will be marked as binary\nautomatically.",46,{"inputs":[{"name":"diffoptions"},{"name":"i64"}],"output":{"name":"diffoptions"}}],[11,"old_prefix","","The virtual \"directory\" to prefix old file names with in hunk headers.",46,{"inputs":[{"name":"diffoptions"},{"name":"t"}],"output":{"name":"diffoptions"}}],[11,"new_prefix","","The virtual \"directory\" to prefix new file names with in hunk headers.",46,{"inputs":[{"name":"diffoptions"},{"name":"t"}],"output":{"name":"diffoptions"}}],[11,"pathspec","","Add to the array of paths/fnmatch patterns to constrain the diff.",46,{"inputs":[{"name":"diffoptions"},{"name":"t"}],"output":{"name":"diffoptions"}}],[11,"raw","","Acquire a pointer to the underlying raw options.",46,null],[11,"next","","",47,{"inputs":[{"name":"deltas"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"next_back","","",47,{"inputs":[{"name":"deltas"}],"output":{"name":"option"}}],[11,"old_lineno","","Line number in old file or `None` for added line",48,{"inputs":[{"name":"diffline"}],"output":{"name":"option"}}],[11,"new_lineno","","Line number in new file or `None` for deleted line",48,{"inputs":[{"name":"diffline"}],"output":{"name":"option"}}],[11,"num_lines","","Number of newline characters in content",48,{"inputs":[{"name":"diffline"}],"output":{"name":"u32"}}],[11,"content_offset","","Offset in the original file to the content",48,{"inputs":[{"name":"diffline"}],"output":{"name":"i64"}}],[11,"content","","Content of this line as bytes.",48,null],[11,"origin","","Sigil showing the origin of this `DiffLine`.",48,{"inputs":[{"name":"diffline"}],"output":{"name":"char"}}],[11,"old_start","","Starting line number in old_file",49,{"inputs":[{"name":"diffhunk"}],"output":{"name":"u32"}}],[11,"old_lines","","Number of lines in old_file",49,{"inputs":[{"name":"diffhunk"}],"output":{"name":"u32"}}],[11,"new_start","","Starting line number in new_file",49,{"inputs":[{"name":"diffhunk"}],"output":{"name":"u32"}}],[11,"new_lines","","Number of lines in new_file",49,{"inputs":[{"name":"diffhunk"}],"output":{"name":"u32"}}],[11,"header","","Header text",49,null],[11,"files_changed","","Get the total number of files chaned in a diff.",50,{"inputs":[{"name":"diffstats"}],"output":{"name":"usize"}}],[11,"insertions","","Get the total number of insertions in a diff",50,{"inputs":[{"name":"diffstats"}],"output":{"name":"usize"}}],[11,"deletions","","Get the total number of deletions in a diff",50,{"inputs":[{"name":"diffstats"}],"output":{"name":"usize"}}],[11,"to_buf","","Print diff statistics to a Buf",50,{"inputs":[{"name":"diffstats"},{"name":"diffstatsformat"},{"name":"usize"}],"output":{"name":"result"}}],[11,"drop","","",50,{"inputs":[{"name":"diffstats"}],"output":null}],[11,"new","","Creates a new set of empty diff find options.",51,{"inputs":[{"name":"difffindoptions"}],"output":{"name":"difffindoptions"}}],[11,"by_config","","Reset all flags back to their unset state, indicating that\n`diff.renames` should be used instead. This is overridden once any flag\nis set.",51,{"inputs":[{"name":"difffindoptions"}],"output":{"name":"difffindoptions"}}],[11,"renames","","Look for renames?",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"renames_from_rewrites","","Consider old side of modified for renames?",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"copies","","Look for copies?",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"copies_from_unmodified","","Consider unmodified as copy sources?",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"rewrites","","Mark significant rewrites for split.",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"break_rewries","","Actually split large rewrites into delete/add pairs",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"for_untracked","","Find renames/copies for untracked items in working directory.",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"all","","Turn on all finding features.",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"ignore_leading_whitespace","","Measure similarity ignoring leading whitespace (default)",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"ignore_whitespace","","Measure similarity ignoring all whitespace",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"dont_ignore_whitespace","","Measure similarity including all data",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"exact_match_only","","Measure similarity only by comparing SHAs (fast and cheap)",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"break_rewrites_for_renames_only","","Do not break rewrites unless they contribute to a rename.",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"remove_unmodified","","Remove any unmodified deltas after find_similar is done.",51,{"inputs":[{"name":"difffindoptions"},{"name":"bool"}],"output":{"name":"difffindoptions"}}],[11,"rename_threshold","","Similarity to consider a file renamed (default 50)",51,{"inputs":[{"name":"difffindoptions"},{"name":"u16"}],"output":{"name":"difffindoptions"}}],[11,"rename_from_rewrite_threshold","","Similarity of modified to be glegible rename source (default 50)",51,{"inputs":[{"name":"difffindoptions"},{"name":"u16"}],"output":{"name":"difffindoptions"}}],[11,"copy_threshold","","Similarity to consider a file copy (default 50)",51,{"inputs":[{"name":"difffindoptions"},{"name":"u16"}],"output":{"name":"difffindoptions"}}],[11,"break_rewrite_threshold","","Similarity to split modify into delete/add pair (default 60)",51,{"inputs":[{"name":"difffindoptions"},{"name":"u16"}],"output":{"name":"difffindoptions"}}],[11,"rename_limit","","Maximum similarity sources to examine for a file (somewhat like\ngit-diff's `-l` option or `diff.renameLimit` config)",51,{"inputs":[{"name":"difffindoptions"},{"name":"usize"}],"output":{"name":"difffindoptions"}}],[11,"fmt","","",52,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"last_error","","Returns the last error, or `None` if one is not available.",52,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"from_str","","Creates a new error from the given string as the error.",52,{"inputs":[{"name":"error"},{"name":"str"}],"output":{"name":"error"}}],[11,"code","","Return the error code associated with this error.",52,{"inputs":[{"name":"error"}],"output":{"name":"errorcode"}}],[11,"raw_code","","Return the raw error code associated with this error.",52,{"inputs":[{"name":"error"}],"output":{"name":"git_error_code"}}],[11,"message","","Return the message associated with this error",52,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"description","","",52,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"fmt","","",52,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",52,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"new","","Creates a new in-memory index.",53,{"inputs":[{"name":"index"}],"output":{"name":"result"}}],[11,"open","","Create a new bare Git index object as a memory representation of the Git\nindex file in 'index_path', without a repository to back it.",53,{"inputs":[{"name":"index"},{"name":"path"}],"output":{"name":"result"}}],[11,"add","","Add or update an index entry from an in-memory struct",53,{"inputs":[{"name":"index"},{"name":"indexentry"}],"output":{"name":"result"}}],[11,"add_path","","Add or update an index entry from a file on disk",53,{"inputs":[{"name":"index"},{"name":"path"}],"output":{"name":"result"}}],[11,"add_all","","Add or update index entries matching files in the working directory.",53,{"inputs":[{"name":"index"},{"name":"i"},{"name":"indexaddoption"},{"name":"option"}],"output":{"name":"result"}}],[11,"clear","","Clear the contents (all the entries) of an index object.",53,{"inputs":[{"name":"index"}],"output":{"name":"result"}}],[11,"len","","Get the count of entries currently in the index",53,{"inputs":[{"name":"index"}],"output":{"name":"usize"}}],[11,"get","","Get one of the entries in the index by its position.",53,{"inputs":[{"name":"index"},{"name":"usize"}],"output":{"name":"option"}}],[11,"iter","","Get an iterator over the entries in this index.",53,{"inputs":[{"name":"index"}],"output":{"name":"indexentries"}}],[11,"get_path","","Get one of the entries in the index by its path.",53,{"inputs":[{"name":"index"},{"name":"path"},{"name":"i32"}],"output":{"name":"option"}}],[11,"path","","Get the full path to the index file on disk.",53,{"inputs":[{"name":"index"}],"output":{"name":"option"}}],[11,"read","","Update the contents of an existing index object in memory by reading\nfrom the hard disk.",53,{"inputs":[{"name":"index"},{"name":"bool"}],"output":{"name":"result"}}],[11,"read_tree","","Read a tree into the index file with stats",53,{"inputs":[{"name":"index"},{"name":"tree"}],"output":{"name":"result"}}],[11,"remove","","Remove an entry from the index",53,{"inputs":[{"name":"index"},{"name":"path"},{"name":"i32"}],"output":{"name":"result"}}],[11,"remove_path","","Remove an index entry corresponding to a file on disk.",53,{"inputs":[{"name":"index"},{"name":"path"}],"output":{"name":"result"}}],[11,"remove_dir","","Remove all entries from the index under a given directory.",53,{"inputs":[{"name":"index"},{"name":"path"},{"name":"i32"}],"output":{"name":"result"}}],[11,"remove_all","","Remove all matching index entries.",53,{"inputs":[{"name":"index"},{"name":"i"},{"name":"option"}],"output":{"name":"result"}}],[11,"update_all","","Update all index entries to match the working directory",53,{"inputs":[{"name":"index"},{"name":"i"},{"name":"option"}],"output":{"name":"result"}}],[11,"write","","Write an existing index object from memory back to disk using an atomic\nfile lock.",53,{"inputs":[{"name":"index"}],"output":{"name":"result"}}],[11,"write_tree","","Write the index as a tree.",53,{"inputs":[{"name":"index"}],"output":{"name":"result"}}],[11,"write_tree_to","","Write the index as a tree to the given repository",53,{"inputs":[{"name":"index"},{"name":"repository"}],"output":{"name":"result"}}],[11,"drop","","",53,{"inputs":[{"name":"index"}],"output":null}],[11,"next","","",54,{"inputs":[{"name":"indexentries"}],"output":{"name":"option"}}],[11,"author","","Get the note author",55,{"inputs":[{"name":"note"}],"output":{"name":"signature"}}],[11,"committer","","Get the note committer",55,{"inputs":[{"name":"note"}],"output":{"name":"signature"}}],[11,"message_bytes","","Get the note message, in bytes.",55,null],[11,"message","","Get the note message as a string, returning `None` if it is not UTF-8.",55,{"inputs":[{"name":"note"}],"output":{"name":"option"}}],[11,"id","","Get the note object's id",55,{"inputs":[{"name":"note"}],"output":{"name":"oid"}}],[11,"drop","","",55,{"inputs":[{"name":"note"}],"output":null}],[11,"next","","",56,{"inputs":[{"name":"notes"}],"output":{"name":"option"}}],[11,"drop","","",56,{"inputs":[{"name":"notes"}],"output":null}],[11,"id","","Get the id (SHA1) of a repository object",57,{"inputs":[{"name":"object"}],"output":{"name":"oid"}}],[11,"kind","","Get the object type of an object.",57,{"inputs":[{"name":"object"}],"output":{"name":"option"}}],[11,"peel","","Recursively peel an object until an object of the specified type is met.",57,{"inputs":[{"name":"object"},{"name":"objecttype"}],"output":{"name":"result"}}],[11,"short_id","","Get a short abbreviated OID string for the object",57,{"inputs":[{"name":"object"}],"output":{"name":"result"}}],[11,"as_commit","","Attempt to view this object as a commit.",57,{"inputs":[{"name":"object"}],"output":{"name":"option"}}],[11,"as_tag","","Attempt to view this object as a tag.",57,{"inputs":[{"name":"object"}],"output":{"name":"option"}}],[11,"as_tree","","Attempt to view this object as a tree.",57,{"inputs":[{"name":"object"}],"output":{"name":"option"}}],[11,"as_blob","","Attempt to view this object as a blob.",57,{"inputs":[{"name":"object"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"object"}],"output":{"name":"object"}}],[11,"drop","","",57,{"inputs":[{"name":"object"}],"output":null}],[11,"from_str","","Parse a hex-formatted object id into an Oid structure.",58,{"inputs":[{"name":"oid"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_bytes","","Parse a raw object id into an Oid structure.",58,null],[11,"as_bytes","","View this OID as a byte-slice 20 bytes in length.",58,null],[11,"is_zero","","Test if this OID is all zeros.",58,{"inputs":[{"name":"oid"}],"output":{"name":"bool"}}],[11,"fmt","","",58,{"inputs":[{"name":"oid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Hex-encode this Oid into a formatter.",58,{"inputs":[{"name":"oid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"oid"},{"name":"oid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"oid"},{"name":"oid"}],"output":{"name":"option"}}],[11,"cmp","","",58,{"inputs":[{"name":"oid"},{"name":"oid"}],"output":{"name":"ordering"}}],[11,"clone","","",58,{"inputs":[{"name":"oid"}],"output":{"name":"oid"}}],[11,"hash","","",58,{"inputs":[{"name":"oid"},{"name":"h"}],"output":null}],[11,"new","","Creates a new pathspec from a list of specs to match against.",59,{"inputs":[{"name":"pathspec"},{"name":"i"}],"output":{"name":"result"}}],[11,"match_tree","","Match a pathspec against files in a tree.",59,{"inputs":[{"name":"pathspec"},{"name":"tree"},{"name":"pathspecflags"}],"output":{"name":"result"}}],[11,"match_index","","This matches the pathspec against the files in the repository index.",59,{"inputs":[{"name":"pathspec"},{"name":"index"},{"name":"pathspecflags"}],"output":{"name":"result"}}],[11,"match_workdir","","Match a pathspec against the working directory of a repository.",59,{"inputs":[{"name":"pathspec"},{"name":"repository"},{"name":"pathspecflags"}],"output":{"name":"result"}}],[11,"matches_path","","Try to match a path against a pathspec",59,{"inputs":[{"name":"pathspec"},{"name":"path"},{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"drop","","",59,{"inputs":[{"name":"pathspec"}],"output":null}],[11,"entries","","Returns an iterator over the matching filenames in this list.",60,{"inputs":[{"name":"pathspecmatchlist"}],"output":{"name":"pathspecentries"}}],[11,"entry","","Get a matching filename by position.",60,{"inputs":[{"name":"pathspecmatchlist"},{"name":"usize"}],"output":{"name":"option"}}],[11,"diff_entries","","Returns an iterator over the matching diff entries in this list.",60,{"inputs":[{"name":"pathspecmatchlist"}],"output":{"name":"pathspecdiffentries"}}],[11,"diff_entry","","Get a matching diff delta by position.",60,{"inputs":[{"name":"pathspecmatchlist"},{"name":"usize"}],"output":{"name":"option"}}],[11,"failed_entries","","Returns an iterator over the non-matching entries in this list.",60,{"inputs":[{"name":"pathspecmatchlist"}],"output":{"name":"pathspecfailedentries"}}],[11,"failed_entry","","Get an original pathspec string that had no matches.",60,{"inputs":[{"name":"pathspecmatchlist"},{"name":"usize"}],"output":{"name":"option"}}],[11,"drop","","",60,{"inputs":[{"name":"pathspecmatchlist"}],"output":null}],[11,"next","","",61,{"inputs":[{"name":"pathspecentries"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"pathspecentries"}],"output":{"name":"option"}}],[11,"next","","",62,{"inputs":[{"name":"pathspecdiffentries"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"pathspecdiffentries"}],"output":{"name":"option"}}],[11,"next","","",63,{"inputs":[{"name":"pathspecfailedentries"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"pathspecfailedentries"}],"output":{"name":"option"}}],[11,"add_refspec","","Add a refspec to be pushed",64,{"inputs":[{"name":"push"},{"name":"str"}],"output":{"name":"result"}}],[11,"finish","","Actually push all given refspecs",64,{"inputs":[{"name":"push"}],"output":{"name":"result"}}],[11,"update_tips","","Update remote tips after a push",64,{"inputs":[{"name":"push"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"statuses","","Return each status entry",64,{"inputs":[{"name":"push"}],"output":{"name":"result"}}],[11,"drop","","",64,{"inputs":[{"name":"push"}],"output":null}],[11,"is_valid_name","","Ensure the reference name is well-formed.",65,{"inputs":[{"name":"reference"},{"name":"str"}],"output":{"name":"bool"}}],[11,"raw","","Get access to the underlying raw pointer.",65,null],[11,"delete","","Delete an existing reference.",65,{"inputs":[{"name":"reference"}],"output":{"name":"result"}}],[11,"is_branch","","Check if a reference is a local branch.",65,{"inputs":[{"name":"reference"}],"output":{"name":"bool"}}],[11,"is_note","","Check if a reference is a note.",65,{"inputs":[{"name":"reference"}],"output":{"name":"bool"}}],[11,"is_remote","","Check if a reference is a remote tracking branch",65,{"inputs":[{"name":"reference"}],"output":{"name":"bool"}}],[11,"is_tag","","Check if a reference is a tag",65,{"inputs":[{"name":"reference"}],"output":{"name":"bool"}}],[11,"name","","Get the full name of a reference.",65,{"inputs":[{"name":"reference"}],"output":{"name":"option"}}],[11,"name_bytes","","Get the full name of a reference.",65,null],[11,"shorthand","","Get the full shorthand of a reference.",65,{"inputs":[{"name":"reference"}],"output":{"name":"option"}}],[11,"shorthand_bytes","","Get the full shorthand of a reference.",65,null],[11,"target","","Get the OID pointed to by a direct reference.",65,{"inputs":[{"name":"reference"}],"output":{"name":"option"}}],[11,"target_peel","","Return the peeled OID target of this reference.",65,{"inputs":[{"name":"reference"}],"output":{"name":"option"}}],[11,"symbolic_target","","Get full name to the reference pointed to by a symbolic reference.",65,{"inputs":[{"name":"reference"}],"output":{"name":"option"}}],[11,"symbolic_target_bytes","","Get full name to the reference pointed to by a symbolic reference.",65,{"inputs":[{"name":"reference"}],"output":{"name":"option"}}],[11,"resolve","","Resolve a symbolic reference to a direct reference.",65,{"inputs":[{"name":"reference"}],"output":{"name":"result"}}],[11,"peel","","Peel a reference to an object",65,{"inputs":[{"name":"reference"},{"name":"objecttype"}],"output":{"name":"result"}}],[11,"rename","","Rename an existing reference.",65,{"inputs":[{"name":"reference"},{"name":"str"},{"name":"bool"},{"name":"str"}],"output":{"name":"result"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"reference"},{"name":"reference"}],"output":{"name":"option"}}],[11,"cmp","","",65,{"inputs":[{"name":"reference"},{"name":"reference"}],"output":{"name":"ordering"}}],[11,"eq","","",65,{"inputs":[{"name":"reference"},{"name":"reference"}],"output":{"name":"bool"}}],[11,"drop","","",65,{"inputs":[{"name":"reference"}],"output":null}],[11,"names","","Consumes a `References` iterator to create an iterator over just the\nname of some references.",66,{"inputs":[{"name":"references"}],"output":{"name":"referencenames"}}],[11,"next","","",66,{"inputs":[{"name":"references"}],"output":{"name":"option"}}],[11,"drop","","",66,{"inputs":[{"name":"references"}],"output":null}],[11,"next","","",67,{"inputs":[{"name":"referencenames"}],"output":{"name":"option"}}],[11,"append","","Add a new entry to the in-memory reflog.",68,{"inputs":[{"name":"reflog"},{"name":"oid"},{"name":"signature"},{"name":"option"}],"output":{"name":"result"}}],[11,"remove","","Remove an entry from the reflog by its index",68,{"inputs":[{"name":"reflog"},{"name":"usize"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","Lookup an entry by its index",68,{"inputs":[{"name":"reflog"},{"name":"usize"}],"output":{"name":"option"}}],[11,"len","","Get the number of log entries in a reflog",68,{"inputs":[{"name":"reflog"}],"output":{"name":"usize"}}],[11,"iter","","Get an iterator to all entries inside of this reflog",68,{"inputs":[{"name":"reflog"}],"output":{"name":"reflogiter"}}],[11,"write","","Write an existing in-memory reflog object back to disk using an atomic\nfile lock.",68,{"inputs":[{"name":"reflog"}],"output":{"name":"result"}}],[11,"drop","","",68,{"inputs":[{"name":"reflog"}],"output":null}],[11,"committer","","Get the committer of this entry",69,{"inputs":[{"name":"reflogentry"}],"output":{"name":"signature"}}],[11,"id_new","","Get the new oid",69,{"inputs":[{"name":"reflogentry"}],"output":{"name":"oid"}}],[11,"id_old","","Get the old oid",69,{"inputs":[{"name":"reflogentry"}],"output":{"name":"oid"}}],[11,"message","","Get the log message, returning `None` on invalid UTF-8.",69,{"inputs":[{"name":"reflogentry"}],"output":{"name":"option"}}],[11,"message_bytes","","Get the log message as a byte array.",69,{"inputs":[{"name":"reflogentry"}],"output":{"name":"option"}}],[11,"next","","",70,{"inputs":[{"name":"reflogiter"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"reflogiter"}],"output":{"name":"option"}}],[11,"direction","","Get the refspec's direction.",71,{"inputs":[{"name":"refspec"}],"output":{"name":"direction"}}],[11,"dst","","Get the destination specifier.",71,{"inputs":[{"name":"refspec"}],"output":{"name":"option"}}],[11,"dst_bytes","","Get the destination specifier, in bytes.",71,null],[11,"dst_matches","","Check if a refspec's destination descriptor matches a reference",71,{"inputs":[{"name":"refspec"},{"name":"str"}],"output":{"name":"bool"}}],[11,"src","","Get the source specifier.",71,{"inputs":[{"name":"refspec"}],"output":{"name":"option"}}],[11,"src_bytes","","Get the source specifier, in bytes.",71,null],[11,"src_matches","","Check if a refspec's source descriptor matches a reference",71,{"inputs":[{"name":"refspec"},{"name":"str"}],"output":{"name":"bool"}}],[11,"is_force","","Get the force update setting.",71,{"inputs":[{"name":"refspec"}],"output":{"name":"bool"}}],[11,"str","","Get the refspec's string.",71,{"inputs":[{"name":"refspec"}],"output":{"name":"option"}}],[11,"bytes","","Get the refspec's string as a byte array",71,null],[11,"is_valid_name","","Ensure the remote name is well-formed.",72,{"inputs":[{"name":"remote"},{"name":"str"}],"output":{"name":"bool"}}],[11,"name","","Get the remote's name.",72,{"inputs":[{"name":"remote"}],"output":{"name":"option"}}],[11,"name_bytes","","Get the remote's name, in bytes.",72,{"inputs":[{"name":"remote"}],"output":{"name":"option"}}],[11,"url","","Get the remote's url.",72,{"inputs":[{"name":"remote"}],"output":{"name":"option"}}],[11,"url_bytes","","Get the remote's url as a byte array.",72,null],[11,"pushurl","","Get the remote's pushurl.",72,{"inputs":[{"name":"remote"}],"output":{"name":"option"}}],[11,"pushurl_bytes","","Get the remote's pushurl as a byte array.",72,{"inputs":[{"name":"remote"}],"output":{"name":"option"}}],[11,"connect","","Open a connection to a remote.",72,{"inputs":[{"name":"remote"},{"name":"direction"}],"output":{"name":"result"}}],[11,"connected","","Check whether the remote is connected",72,{"inputs":[{"name":"remote"}],"output":{"name":"bool"}}],[11,"disconnect","","Disconnect from the remote",72,{"inputs":[{"name":"remote"}],"output":null}],[11,"save","","Save a remote to its repository's configuration",72,{"inputs":[{"name":"remote"}],"output":{"name":"result"}}],[11,"add_fetch","","Add a fetch refspec to the remote",72,{"inputs":[{"name":"remote"},{"name":"str"}],"output":{"name":"result"}}],[11,"add_push","","Add a push refspec to the remote",72,{"inputs":[{"name":"remote"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_url","","Set the remote's url",72,{"inputs":[{"name":"remote"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_pushurl","","Set the remote's pushurl.",72,{"inputs":[{"name":"remote"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_update_fetchhead","","Sets the update FETCH_HEAD setting. By default, FETCH_HEAD will be\nupdated on every fetch.",72,{"inputs":[{"name":"remote"},{"name":"bool"}],"output":null}],[11,"set_fetch_refspecs","","Set the remote's list of fetch refspecs",72,{"inputs":[{"name":"remote"},{"name":"i"}],"output":{"name":"result"}}],[11,"set_push_refspecs","","Set the remote's list of push refspecs",72,{"inputs":[{"name":"remote"},{"name":"i"}],"output":{"name":"result"}}],[11,"clear_refspecs","","Clear the refspecs",72,{"inputs":[{"name":"remote"}],"output":null}],[11,"download","","Download and index the packfile",72,null],[11,"refspecs","","Get the number of refspecs for a remote",72,{"inputs":[{"name":"remote"}],"output":{"name":"refspecs"}}],[11,"get_refspec","","Get the `nth` refspec from this remote.",72,{"inputs":[{"name":"remote"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fetch","","Download new data and update tips",72,null],[11,"update_tips","","Update the tips to the new state",72,{"inputs":[{"name":"remote"},{"name":"option"}],"output":{"name":"result"}}],[11,"update_fetchhead","","Retrieve the update FETCH_HEAD setting.",72,{"inputs":[{"name":"remote"}],"output":{"name":"result"}}],[11,"push","","Create a new push object",72,{"inputs":[{"name":"remote"}],"output":{"name":"result"}}],[11,"set_callbacks","","Set the callbacks to be invoked when the transfer is in-progress.",72,{"inputs":[{"name":"remote"},{"name":"remotecallbacks"}],"output":null}],[11,"stats","","Get the statistics structure that is filled in by the fetch operation.",72,{"inputs":[{"name":"remote"}],"output":{"name":"progress"}}],[11,"list","","Get the remote repository's reference advertisement list.",72,{"inputs":[{"name":"remote"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"remote"}],"output":{"name":"remote"}}],[11,"drop","","",72,{"inputs":[{"name":"remote"}],"output":null}],[11,"next","","",73,{"inputs":[{"name":"refspecs"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"refspecs"}],"output":{"name":"option"}}],[11,"is_local","","Flag if this is available locally.",74,{"inputs":[{"name":"remotehead"}],"output":{"name":"bool"}}],[11,"oid","","",74,{"inputs":[{"name":"remotehead"}],"output":{"name":"oid"}}],[11,"loid","","",74,{"inputs":[{"name":"remotehead"}],"output":{"name":"oid"}}],[11,"name","","",74,{"inputs":[{"name":"remotehead"}],"output":{"name":"str"}}],[11,"symref_target","","",74,{"inputs":[{"name":"remotehead"}],"output":{"name":"option"}}],[11,"new","","Creates a new set of empty callbacks",75,{"inputs":[{"name":"remotecallbacks"}],"output":{"name":"remotecallbacks"}}],[11,"credentials","","The callback through which to fetch credentials if required.",75,{"inputs":[{"name":"remotecallbacks"},{"name":"f"}],"output":{"name":"remotecallbacks"}}],[11,"transfer_progress","","The callback through which progress is monitored.",75,{"inputs":[{"name":"remotecallbacks"},{"name":"f"}],"output":{"name":"remotecallbacks"}}],[11,"sideband_progress","","Textual progress from the remote.",75,{"inputs":[{"name":"remotecallbacks"},{"name":"f"}],"output":{"name":"remotecallbacks"}}],[11,"update_tips","","Each time a reference is updated locally, the callback will be called\nwith information about it.",75,{"inputs":[{"name":"remotecallbacks"},{"name":"f"}],"output":{"name":"remotecallbacks"}}],[11,"certificate_check","","If certificate verification fails, then this callback will be invoked to\nlet the caller make the final decision of whether to allow the\nconnection to proceed.",75,{"inputs":[{"name":"remotecallbacks"},{"name":"f"}],"output":{"name":"remotecallbacks"}}],[11,"total_objects","","Number of objects in the packfile being downloaded",76,{"inputs":[{"name":"progress"}],"output":{"name":"usize"}}],[11,"indexed_objects","","Received objects that have been hashed",76,{"inputs":[{"name":"progress"}],"output":{"name":"usize"}}],[11,"received_objects","","Objects which have been downloaded",76,{"inputs":[{"name":"progress"}],"output":{"name":"usize"}}],[11,"local_objects","","Locally-available objects that have been injected in order to fix a thin\npack.",76,{"inputs":[{"name":"progress"}],"output":{"name":"usize"}}],[11,"total_deltas","","Number of deltas in the packfile being downloaded",76,{"inputs":[{"name":"progress"}],"output":{"name":"usize"}}],[11,"indexed_deltas","","Received deltas that have been hashed.",76,{"inputs":[{"name":"progress"}],"output":{"name":"usize"}}],[11,"received_bytes","","Size of the packfile received up to now",76,{"inputs":[{"name":"progress"}],"output":{"name":"usize"}}],[11,"to_owned","","Convert this to an owned version of `Progress`.",76,{"inputs":[{"name":"progress"}],"output":{"name":"progress"}}],[11,"open","","Attempt to open an already-existing repository at `path`.",77,{"inputs":[{"name":"repository"},{"name":"p"}],"output":{"name":"result"}}],[11,"discover","","Attempt to open an already-existing repository at or above `path`",77,{"inputs":[{"name":"repository"},{"name":"p"}],"output":{"name":"result"}}],[11,"init","","Creates a new repository in the specified folder.",77,{"inputs":[{"name":"repository"},{"name":"p"}],"output":{"name":"result"}}],[11,"init_bare","","Creates a new `--bare` repository in the specified folder.",77,{"inputs":[{"name":"repository"},{"name":"p"}],"output":{"name":"result"}}],[11,"init_opts","","Creates a new `--bare` repository in the specified folder.",77,{"inputs":[{"name":"repository"},{"name":"p"},{"name":"repositoryinitoptions"}],"output":{"name":"result"}}],[11,"clone","","Clone a remote repository.",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[11,"revparse","","Execute a rev-parse operation against the `spec` listed.",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"revparse_single","","Find a single object, as specified by a revision string.",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"revparse_ext","","Find a single object and intermediate reference by a revision string.",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_bare","","Tests whether this repository is a bare repository or not.",77,{"inputs":[{"name":"repository"}],"output":{"name":"bool"}}],[11,"is_shallow","","Tests whether this repository is a shallow clone.",77,{"inputs":[{"name":"repository"}],"output":{"name":"bool"}}],[11,"is_empty","","Tests whether this repository is empty.",77,{"inputs":[{"name":"repository"}],"output":{"name":"result"}}],[11,"path","","Returns the path to the `.git` folder for normal repositories or the\nrepository itself for bare repositories.",77,{"inputs":[{"name":"repository"}],"output":{"name":"path"}}],[11,"state","","Returns the current state of this repository",77,{"inputs":[{"name":"repository"}],"output":{"name":"repositorystate"}}],[11,"workdir","","Get the path of the working directory for this repository.",77,{"inputs":[{"name":"repository"}],"output":{"name":"option"}}],[11,"namespace","","Get the currently active namespace for this repository.",77,{"inputs":[{"name":"repository"}],"output":{"name":"option"}}],[11,"namespace_bytes","","Get the currently active namespace for this repository as a byte array.",77,{"inputs":[{"name":"repository"}],"output":{"name":"option"}}],[11,"remotes","","List all remotes for a given repository",77,{"inputs":[{"name":"repository"}],"output":{"name":"result"}}],[11,"find_remote","","Get the information for a particular remote",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"remote","","Add a remote with the default fetch refspec to the repository's\nconfiguration.",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"remote_anonymous","","Create an anonymous remote",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[11,"remote_rename","","Give a remote a new name",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"remote_delete","","Delete an existing persisted remote.",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"reset","","Sets the current head to the specified object and optionally resets\nthe index and working tree to match.",77,{"inputs":[{"name":"repository"},{"name":"object"},{"name":"resettype"},{"name":"option"}],"output":{"name":"result"}}],[11,"reset_default","","Updates some entries in the index from the target commit tree.",77,{"inputs":[{"name":"repository"},{"name":"option"},{"name":"i"}],"output":{"name":"result"}}],[11,"head","","Retrieve and resolve the reference pointed at by HEAD.",77,{"inputs":[{"name":"repository"}],"output":{"name":"result"}}],[11,"set_head","","Make the repository HEAD point to the specified reference.",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_head_detached","","Make the repository HEAD directly point to the commit.",77,{"inputs":[{"name":"repository"},{"name":"oid"}],"output":{"name":"result"}}],[11,"references","","Create an iterator for the repo's references",77,{"inputs":[{"name":"repository"}],"output":{"name":"result"}}],[11,"references_glob","","Create an iterator for the repo's references that match the specified\nglob",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"submodules","","Load all submodules for this repository and return them.",77,{"inputs":[{"name":"repository"}],"output":{"name":"result"}}],[11,"statuses","","Gather file status information and populate the returned structure.",77,{"inputs":[{"name":"repository"},{"name":"option"}],"output":{"name":"result"}}],[11,"status_should_ignore","","Test if the ignore rules apply to a given file.",77,{"inputs":[{"name":"repository"},{"name":"path"}],"output":{"name":"result"}}],[11,"status_file","","Get file status for a single file.",77,{"inputs":[{"name":"repository"},{"name":"path"}],"output":{"name":"result"}}],[11,"branches","","Create an iterator which loops over the requested branches.",77,{"inputs":[{"name":"repository"},{"name":"option"}],"output":{"name":"result"}}],[11,"index","","Get the Index file for this repository.",77,{"inputs":[{"name":"repository"}],"output":{"name":"result"}}],[11,"config","","Get the configuration file for this repository.",77,{"inputs":[{"name":"repository"}],"output":{"name":"result"}}],[11,"blob","","Write an in-memory buffer to the ODB as a blob.",77,null],[11,"blob_path","","Read a file from the filesystem and write its content to the Object\nDatabase as a loose blob",77,{"inputs":[{"name":"repository"},{"name":"path"}],"output":{"name":"result"}}],[11,"find_blob","","Lookup a reference to one of the objects in a repository.",77,{"inputs":[{"name":"repository"},{"name":"oid"}],"output":{"name":"result"}}],[11,"branch","","Create a new branch pointing at a target commit",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"commit"},{"name":"bool"}],"output":{"name":"result"}}],[11,"find_branch","","Lookup a branch by its name in a repository.",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"branchtype"}],"output":{"name":"result"}}],[11,"commit","","Create new commit in the repository",77,null],[11,"find_commit","","Lookup a reference to one of the commits in a repository.",77,{"inputs":[{"name":"repository"},{"name":"oid"}],"output":{"name":"result"}}],[11,"find_object","","Lookup a reference to one of the objects in a repository.",77,{"inputs":[{"name":"repository"},{"name":"oid"},{"name":"option"}],"output":{"name":"result"}}],[11,"reference","","Create a new direct reference.",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"oid"},{"name":"bool"},{"name":"str"}],"output":{"name":"result"}}],[11,"reference_symbolic","","Create a new symbolic reference.",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"str"},{"name":"bool"},{"name":"str"}],"output":{"name":"result"}}],[11,"find_reference","","Lookup a reference to one of the objects in a repository.",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"refname_to_id","","Lookup a reference by name and resolve immediately to OID.",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"signature","","Create a new action signature with default user and now timestamp.",77,{"inputs":[{"name":"repository"}],"output":{"name":"result"}}],[11,"submodule","","Set up a new git submodule for checkout.",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"path"},{"name":"bool"}],"output":{"name":"result"}}],[11,"find_submodule","","Lookup submodule information by name or path.",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"find_tree","","Lookup a reference to one of the objects in a repository.",77,{"inputs":[{"name":"repository"},{"name":"oid"}],"output":{"name":"result"}}],[11,"tag","","Create a new tag in the repository from an object",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"object"},{"name":"signature"},{"name":"str"},{"name":"bool"}],"output":{"name":"result"}}],[11,"tag_lightweight","","Create a new lightweight tag pointing at a target object",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"object"},{"name":"bool"}],"output":{"name":"result"}}],[11,"find_tag","","Lookup a tag object from the repository.",77,{"inputs":[{"name":"repository"},{"name":"oid"}],"output":{"name":"result"}}],[11,"tag_delete","","Delete an existing tag reference.",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"tag_names","","Get a list with all the tags in the repository.",77,{"inputs":[{"name":"repository"},{"name":"option"}],"output":{"name":"result"}}],[11,"checkout_head","","Updates files in the index and the working tree to match the content of\nthe commit pointed at by HEAD.",77,{"inputs":[{"name":"repository"},{"name":"option"}],"output":{"name":"result"}}],[11,"checkout_index","","Updates files in the working tree to match the content of the index.",77,{"inputs":[{"name":"repository"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"checkout_tree","","Updates files in the index and working tree to match the content of the\ntree pointed at by the treeish.",77,{"inputs":[{"name":"repository"},{"name":"object"},{"name":"option"}],"output":{"name":"result"}}],[11,"note","","Add a note for an object",77,{"inputs":[{"name":"repository"},{"name":"signature"},{"name":"signature"},{"name":"option"},{"name":"oid"},{"name":"str"},{"name":"bool"}],"output":{"name":"result"}}],[11,"note_default_ref","","Get the default notes reference for this repository",77,{"inputs":[{"name":"repository"}],"output":{"name":"result"}}],[11,"notes","","Creates a new iterator for notes in this repository.",77,{"inputs":[{"name":"repository"},{"name":"option"}],"output":{"name":"result"}}],[11,"find_note","","Read the note for an object.",77,{"inputs":[{"name":"repository"},{"name":"option"},{"name":"oid"}],"output":{"name":"result"}}],[11,"note_delete","","Remove the note for an object.",77,{"inputs":[{"name":"repository"},{"name":"oid"},{"name":"option"},{"name":"signature"},{"name":"signature"}],"output":{"name":"result"}}],[11,"revwalk","","Create a revwalk that can be used to traverse the commit graph.",77,{"inputs":[{"name":"repository"}],"output":{"name":"result"}}],[11,"blame_file","","Get the blame for a single file.",77,{"inputs":[{"name":"repository"},{"name":"path"},{"name":"option"}],"output":{"name":"result"}}],[11,"merge_base","","Find a merge base between two commits",77,{"inputs":[{"name":"repository"},{"name":"oid"},{"name":"oid"}],"output":{"name":"result"}}],[11,"graph_ahead_behind","","Count the number of unique commits between two commit objects",77,{"inputs":[{"name":"repository"},{"name":"oid"},{"name":"oid"}],"output":{"name":"result"}}],[11,"graph_descendant_of","","Determine if a commit is the descendant of another commit",77,{"inputs":[{"name":"repository"},{"name":"oid"},{"name":"oid"}],"output":{"name":"result"}}],[11,"reflog","","Read the reflog for the given reference",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"reflog_delete","","Delete the reflog for the given reference",77,{"inputs":[{"name":"repository"},{"name":"str"}],"output":{"name":"result"}}],[11,"reflog_rename","","Rename a reflog",77,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"drop","","",77,{"inputs":[{"name":"repository"}],"output":null}],[11,"new","","Creates a default set of initialization options.",78,{"inputs":[{"name":"repositoryinitoptions"}],"output":{"name":"repositoryinitoptions"}}],[11,"bare","","Create a bare repository with no working directory.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"bool"}],"output":{"name":"repositoryinitoptions"}}],[11,"no_reinit","","Return an error if the repository path appears to already be a git\nrepository.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"bool"}],"output":{"name":"repositoryinitoptions"}}],[11,"no_dotgit_dir","","Normally a '/.git/' will be appended to the repo apth for non-bare repos\n(if it is not already there), but passing this flag prevents that\nbehavior.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"bool"}],"output":{"name":"repositoryinitoptions"}}],[11,"mkdir","","Make the repo path (and workdir path) as needed. The \".git\" directory\nwill always be created regardless of this flag.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"bool"}],"output":{"name":"repositoryinitoptions"}}],[11,"mkpath","","Recursively make all components of the repo and workdir path sas\nnecessary.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"bool"}],"output":{"name":"repositoryinitoptions"}}],[11,"mode","","Set to one of the `RepositoryInit` constants, or a custom value.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"repositoryinitmode"}],"output":{"name":"repositoryinitoptions"}}],[11,"external_template","","Enable or disable using external templates.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"bool"}],"output":{"name":"repositoryinitoptions"}}],[11,"workdir_path","","The path do the working directory.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"path"}],"output":{"name":"repositoryinitoptions"}}],[11,"description","","If set, this will be used to initialize the \"description\" file in the\nrepository instead of using the template content.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"str"}],"output":{"name":"repositoryinitoptions"}}],[11,"template_path","","When the `external_template` option is set, this is the first location\nto check for the template directory.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"path"}],"output":{"name":"repositoryinitoptions"}}],[11,"initial_head","","The name of the head to point HEAD at.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"str"}],"output":{"name":"repositoryinitoptions"}}],[11,"origin_url","","If set, then after the rest of the repository initialization is\ncompleted an `origin` remote will be added pointing to this URL.",78,{"inputs":[{"name":"repositoryinitoptions"},{"name":"str"}],"output":{"name":"repositoryinitoptions"}}],[11,"raw","","Creates a set of raw init options to be used with\n`git_repository_init_ext`.",78,{"inputs":[{"name":"repositoryinitoptions"}],"output":{"name":"git_repository_init_options"}}],[11,"from_objects","","Assembles a new revspec from the from/to components.",79,{"inputs":[{"name":"revspec"},{"name":"option"},{"name":"option"},{"name":"revparsemode"}],"output":{"name":"revspec"}}],[11,"from","","Access the `from` range of this revspec.",79,{"inputs":[{"name":"revspec"}],"output":{"name":"option"}}],[11,"to","","Access the `to` range of this revspec.",79,{"inputs":[{"name":"revspec"}],"output":{"name":"option"}}],[11,"mode","","Returns the intent of the revspec.",79,{"inputs":[{"name":"revspec"}],"output":{"name":"revparsemode"}}],[11,"reset","","Reset a revwalk to allow re-configuring it.",80,{"inputs":[{"name":"revwalk"}],"output":null}],[11,"set_sorting","","Set the order in which commits are visited.",80,{"inputs":[{"name":"revwalk"},{"name":"sort"}],"output":null}],[11,"simplify_first_parent","","Simplify the history by first-parent",80,{"inputs":[{"name":"revwalk"}],"output":null}],[11,"push","","Mark a commit to start traversal from.",80,{"inputs":[{"name":"revwalk"},{"name":"oid"}],"output":{"name":"result"}}],[11,"push_head","","Push the repository's HEAD",80,{"inputs":[{"name":"revwalk"}],"output":{"name":"result"}}],[11,"push_glob","","Push matching references",80,{"inputs":[{"name":"revwalk"},{"name":"str"}],"output":{"name":"result"}}],[11,"push_range","","Push and hide the respective endpoints of the given range.",80,{"inputs":[{"name":"revwalk"},{"name":"str"}],"output":{"name":"result"}}],[11,"push_ref","","Push the OID pointed to by a reference",80,{"inputs":[{"name":"revwalk"},{"name":"str"}],"output":{"name":"result"}}],[11,"hide","","Mark a commit as not of interest to this revwalk.",80,{"inputs":[{"name":"revwalk"},{"name":"oid"}],"output":{"name":"result"}}],[11,"hide_head","","Hide the repository's HEAD",80,{"inputs":[{"name":"revwalk"}],"output":{"name":"result"}}],[11,"hide_glob","","Hide matching references.",80,{"inputs":[{"name":"revwalk"},{"name":"str"}],"output":{"name":"result"}}],[11,"hide_ref","","Hide the OID pointed to by a reference.",80,{"inputs":[{"name":"revwalk"},{"name":"str"}],"output":{"name":"result"}}],[11,"drop","","",80,{"inputs":[{"name":"revwalk"}],"output":null}],[11,"next","","",80,{"inputs":[{"name":"revwalk"}],"output":{"name":"option"}}],[11,"now","","Create a new action signature with a timestamp of 'now'.",81,{"inputs":[{"name":"signature"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Create a new action signature.",81,{"inputs":[{"name":"signature"},{"name":"str"},{"name":"str"},{"name":"time"}],"output":{"name":"result"}}],[11,"name","","Gets the name on the signature.",81,{"inputs":[{"name":"signature"}],"output":{"name":"option"}}],[11,"name_bytes","","Gets the name on the signature as a byte slice.",81,null],[11,"email","","Gets the email on the signature.",81,{"inputs":[{"name":"signature"}],"output":{"name":"option"}}],[11,"email_bytes","","Gets the email on the signature as a byte slice.",81,null],[11,"when","","Get the `when` of this signature.",81,{"inputs":[{"name":"signature"}],"output":{"name":"time"}}],[11,"to_owned","","Convert a signature of any lifetime into an owned signature with a\nstatic lifetime.",81,{"inputs":[{"name":"signature"}],"output":{"name":"signature"}}],[11,"clone","","",81,{"inputs":[{"name":"signature"}],"output":{"name":"signature"}}],[11,"drop","","",81,{"inputs":[{"name":"signature"}],"output":null}],[11,"fmt","","",81,{"inputs":[{"name":"signature"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"statusshow"}],"output":{"name":"statusshow"}}],[11,"new","","Creates a new blank set of status options.",82,{"inputs":[{"name":"statusoptions"}],"output":{"name":"statusoptions"}}],[11,"show","","Select the files on which to report status.",82,{"inputs":[{"name":"statusoptions"},{"name":"statusshow"}],"output":{"name":"statusoptions"}}],[11,"pathspec","","Add a path pattern to match (using fnmatch-style matching).",82,{"inputs":[{"name":"statusoptions"},{"name":"t"}],"output":{"name":"statusoptions"}}],[11,"include_untracked","","Flag whether untracked files will be included.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"include_ignored","","Flag whether ignored files will be included.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"include_unmodified","","Flag to include unmodified files.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"exclude_submodules","","Flag that submodules should be skipped.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"recurse_untracked_dirs","","Flag that all files in untracked directories should be included.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"disable_pathspec_match","","Indicates that the given paths should be treated as literals paths, note\npatterns.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"recurse_ignored_dirs","","Indicates that the contents of ignored directories should be included in\nthe status.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"renames_head_to_index","","Indicates that rename detection should be processed between the head.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"renames_index_to_workdir","","Indicates that rename detection should be run between the index and the\nworking directory.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"sort_case_sensitively","","Override the native case sensitivity for the file system and force the\noutput to be in case sensitive order.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"sort_case_insensitively","","Override the native case sensitivity for the file system and force the\noutput to be in case-insensitive order.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"renames_from_rewrites","","Indicates that rename detection should include rewritten files.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"no_refresh","","Bypasses the default status behavior of doing a \"soft\" index reload.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"update_index","","Refresh the stat cache in the index for files are unchanged but have\nout of date stat information in the index.",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"include_unreadable","","",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"include_unreadable_as_untracked","","",82,{"inputs":[{"name":"statusoptions"},{"name":"bool"}],"output":{"name":"statusoptions"}}],[11,"raw","","Get a pointer to the inner list of status options.",82,null],[11,"get","","Gets a status entry from this list at the specified index.",83,{"inputs":[{"name":"statuses"},{"name":"usize"}],"output":{"name":"option"}}],[11,"len","","Gets the count of status entries in this list.",83,{"inputs":[{"name":"statuses"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over the statuses in this list.",83,{"inputs":[{"name":"statuses"}],"output":{"name":"statusiter"}}],[11,"drop","","",83,{"inputs":[{"name":"statuses"}],"output":null}],[11,"next","","",84,{"inputs":[{"name":"statusiter"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next_back","","",84,{"inputs":[{"name":"statusiter"}],"output":{"name":"option"}}],[11,"path_bytes","","Access the bytes for this entry's corresponding pathname",85,null],[11,"path","","Access this entry's path name as a string.",85,{"inputs":[{"name":"statusentry"}],"output":{"name":"option"}}],[11,"status","","Access the status flags for this file",85,{"inputs":[{"name":"statusentry"}],"output":{"name":"status"}}],[11,"head_to_index","","Access detailed information about the differences between the file in\nHEAD and the file in the index.",85,{"inputs":[{"name":"statusentry"}],"output":{"name":"option"}}],[11,"index_to_workdir","","Access detailed information about the differences between the file in\nthe index and the file in the working directory.",85,{"inputs":[{"name":"statusentry"}],"output":{"name":"option"}}],[11,"branch","","Get the submodule's branch.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"option"}}],[11,"branch_bytes","","Get the branch for the submodule.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"option"}}],[11,"url","","Get the submodule's url.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"option"}}],[11,"url_bytes","","Get the url for the submodule.",86,null],[11,"name","","Get the submodule's name.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"option"}}],[11,"name_bytes","","Get the name for the submodule.",86,null],[11,"path","","Get the path for the submodule.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"path"}}],[11,"head_id","","Get the OID for the submodule in the current HEAD tree.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"option"}}],[11,"index_id","","Get the OID for the submodule in the index.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"option"}}],[11,"workdir_id","","Get the OID for the submodule in the current working directory.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"option"}}],[11,"init","","Copy submodule info into \".git/config\" file.",86,{"inputs":[{"name":"submodule"},{"name":"bool"}],"output":{"name":"result"}}],[11,"open","","Open the repository for a submodule.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"result"}}],[11,"reload","","Reread submodule info from config, index, and HEAD.",86,{"inputs":[{"name":"submodule"},{"name":"bool"}],"output":{"name":"result"}}],[11,"save","","Write submodule settings to .gitmodules file.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"result"}}],[11,"sync","","Copy submodule remote info into submodule repo.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"result"}}],[11,"add_to_index","","Add current submodule HEAD commit to index of superproject.",86,{"inputs":[{"name":"submodule"},{"name":"bool"}],"output":{"name":"result"}}],[11,"add_finalize","","Resolve the setup of a new git submodule.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"result"}}],[11,"status","","Get the status for a submodule.",86,{"inputs":[{"name":"submodule"}],"output":{"name":"result"}}],[11,"drop","","",86,{"inputs":[{"name":"submodule"}],"output":null}],[11,"id","","Get the id (SHA1) of a repository tag",87,{"inputs":[{"name":"tag"}],"output":{"name":"oid"}}],[11,"message","","Get the message of a tag",87,{"inputs":[{"name":"tag"}],"output":{"name":"option"}}],[11,"message_bytes","","Get the message of a tag",87,{"inputs":[{"name":"tag"}],"output":{"name":"option"}}],[11,"name","","Get the name of a tag",87,{"inputs":[{"name":"tag"}],"output":{"name":"option"}}],[11,"name_bytes","","Get the name of a tag",87,null],[11,"peel","","Recursively peel a tag until a non tag git_object is found",87,{"inputs":[{"name":"tag"}],"output":{"name":"result"}}],[11,"tagger","","Get the tagger (author) of a tag",87,{"inputs":[{"name":"tag"}],"output":{"name":"option"}}],[11,"target","","Get the tagged object of a tag",87,{"inputs":[{"name":"tag"}],"output":{"name":"result"}}],[11,"target_id","","Get the OID of the tagged object of a tag",87,{"inputs":[{"name":"tag"}],"output":{"name":"oid"}}],[11,"target_type","","Get the OID of the tagged object of a tag",87,{"inputs":[{"name":"tag"}],"output":{"name":"option"}}],[11,"drop","","",87,{"inputs":[{"name":"tag"}],"output":null}],[11,"eq","","",88,{"inputs":[{"name":"time"},{"name":"time"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"time"},{"name":"time"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"time"}],"output":{"name":"time"}}],[11,"eq","","",89,{"inputs":[{"name":"indextime"},{"name":"indextime"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"indextime"},{"name":"indextime"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"indextime"}],"output":{"name":"indextime"}}],[11,"new","","Creates a new time structure from its components.",88,{"inputs":[{"name":"time"},{"name":"i64"},{"name":"i32"}],"output":{"name":"time"}}],[11,"seconds","","Return the time, in seconds, from epoch",88,{"inputs":[{"name":"time"}],"output":{"name":"i64"}}],[11,"offset_minutes","","Return the timezone offset, in minutes",88,{"inputs":[{"name":"time"}],"output":{"name":"i32"}}],[11,"new","","Creates a new time structure from its components.",89,{"inputs":[{"name":"indextime"},{"name":"i64"},{"name":"u32"}],"output":{"name":"indextime"}}],[11,"seconds","","Returns the number of seconds in the second component of this time.",89,{"inputs":[{"name":"indextime"}],"output":{"name":"i64"}}],[11,"nanoseconds","","Returns the nanosecond component of this time.",89,{"inputs":[{"name":"indextime"}],"output":{"name":"u32"}}],[11,"id","","Get the id (SHA1) of a repository object",90,{"inputs":[{"name":"tree"}],"output":{"name":"oid"}}],[11,"len","","Get the number of entries listed in this tree.",90,{"inputs":[{"name":"tree"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over the entries in this tree.",90,{"inputs":[{"name":"tree"}],"output":{"name":"treeiter"}}],[11,"get_id","","Lookup a tree entry by SHA value.",90,{"inputs":[{"name":"tree"},{"name":"oid"}],"output":{"name":"option"}}],[11,"get","","Lookup a tree entry by its position in the tree",90,{"inputs":[{"name":"tree"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_name","","Lookup a tree entry by its filename",90,{"inputs":[{"name":"tree"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_path","","Retrieve a tree entry contained in a tree or in any of its subtrees,\ngiven its relative path.",90,{"inputs":[{"name":"tree"},{"name":"path"}],"output":{"name":"result"}}],[11,"drop","","",90,{"inputs":[{"name":"tree"}],"output":null}],[11,"id","","Get the id of the object pointed by the entry",91,{"inputs":[{"name":"treeentry"}],"output":{"name":"oid"}}],[11,"name","","Get the filename of a tree entry",91,{"inputs":[{"name":"treeentry"}],"output":{"name":"option"}}],[11,"name_bytes","","Get the filename of a tree entry",91,null],[11,"to_object","","Convert a tree entry to the object it points to.",91,{"inputs":[{"name":"treeentry"},{"name":"repository"}],"output":{"name":"result"}}],[11,"kind","","Get the type of the object pointed by the entry",91,{"inputs":[{"name":"treeentry"}],"output":{"name":"option"}}],[11,"filemode","","Get the UNIX file attributes of a tree entry",91,{"inputs":[{"name":"treeentry"}],"output":{"name":"i32"}}],[11,"filemode_raw","","Get the raw UNIX file attributes of a tree entry",91,{"inputs":[{"name":"treeentry"}],"output":{"name":"i32"}}],[11,"clone","","",91,{"inputs":[{"name":"treeentry"}],"output":{"name":"treeentry"}}],[11,"partial_cmp","","",91,{"inputs":[{"name":"treeentry"},{"name":"treeentry"}],"output":{"name":"option"}}],[11,"cmp","","",91,{"inputs":[{"name":"treeentry"},{"name":"treeentry"}],"output":{"name":"ordering"}}],[11,"eq","","",91,{"inputs":[{"name":"treeentry"},{"name":"treeentry"}],"output":{"name":"bool"}}],[11,"drop","","",91,{"inputs":[{"name":"treeentry"}],"output":null}],[11,"next","","",92,{"inputs":[{"name":"treeiter"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next_back","","",92,{"inputs":[{"name":"treeiter"}],"output":{"name":"option"}}],[6,"IndexMatchedPath","","A callback function to filter index matches.",null,null],[6,"Credentials","","Callback used to acquire credentials for when a remote is fetched.",null,null],[6,"TransferProgress","","Callback to be invoked while a transfer is in progress.",null,null],[6,"TransportMessage","","Callback for receiving messages delivered by the transport.",null,null],[6,"UpdateTips","","Callback for whenever a reference is updated locally.",null,null],[17,"SORT_NONE","","",null,null],[17,"SORT_TOPOLOGICAL","","",null,null],[17,"SORT_TIME","","",null,null],[17,"SORT_REVERSE","","",null,null],[17,"USER_PASS_PLAINTEXT","","",null,null],[17,"SSH_KEY","","",null,null],[17,"SSH_CUSTOM","","",null,null],[17,"DEFAULT","","",null,null],[17,"SSH_INTERACTIVE","","",null,null],[17,"USERNAME","","",null,null],[17,"ADD_DEFAULT","","",null,null],[17,"ADD_FORCE","","",null,null],[17,"ADD_DISABLE_PATHSPEC_MATCH","","",null,null],[17,"ADD_CHECK_PATHSPEC","","",null,null],[17,"REVPARSE_SINGLE","","",null,null],[17,"REVPARSE_RANGE","","",null,null],[17,"REVPARSE_MERGE_BASE","","",null,null],[17,"STATUS_CURRENT","","",null,null],[17,"STATUS_INDEX_NEW","","",null,null],[17,"STATUS_INDEX_MODIFIED","","",null,null],[17,"STATUS_INDEX_DELETED","","",null,null],[17,"STATUS_INDEX_RENAMED","","",null,null],[17,"STATUS_INDEX_TYPECHANGE","","",null,null],[17,"STATUS_WT_NEW","","",null,null],[17,"STATUS_WT_MODIFIED","","",null,null],[17,"STATUS_WT_DELETED","","",null,null],[17,"STATUS_WT_TYPECHANGE","","",null,null],[17,"STATUS_WT_RENAMED","","",null,null],[17,"STATUS_IGNORED","","",null,null],[17,"REPOSITORY_INIT_SHARED_UMASK","","Use permissions configured by umask - the default",null,null],[17,"REPOSITORY_INIT_SHARED_GROUP","","Use `--shared=group` behavior, chmod'ing the new repo to be group writable and \"g+sx\" for sticky group assignment",null,null],[17,"REPOSITORY_INIT_SHARED_ALL","","Use `--shared=all` behavior, adding world readability.",null,null],[17,"SUBMODULE_STATUS_IN_HEAD","","",null,null],[17,"SUBMODULE_STATUS_IN_INDEX","","",null,null],[17,"SUBMODULE_STATUS_IN_CONFIG","","",null,null],[17,"SUBMODULE_STATUS_IN_WD","","",null,null],[17,"SUBMODULE_STATUS_INDEX_ADDED","","",null,null],[17,"SUBMODULE_STATUS_INDEX_DELETED","","",null,null],[17,"SUBMODULE_STATUS_INDEX_MODIFIED","","",null,null],[17,"SUBMODULE_STATUS_WD_UNINITIALIZED","","",null,null],[17,"SUBMODULE_STATUS_WD_ADDED","","",null,null],[17,"SUBMODULE_STATUS_WD_DELETED","","",null,null],[17,"SUBMODULE_STATUS_WD_MODIFIED","","",null,null],[17,"SUBMODULE_STATUS_WD_INDEX_MODIFIED","","",null,null],[17,"SUBMODULE_STATUS_WD_WD_MODIFIED","","",null,null],[17,"SUBMODULE_STATUS_WD_UNTRACKED","","",null,null],[17,"PATHSPEC_DEFAULT","","",null,null],[17,"PATHSPEC_IGNORE_CASE","","",null,null],[17,"PATHSPEC_USE_CASE","","",null,null],[17,"PATHSPEC_NO_GLOB","","",null,null],[17,"PATHSPEC_NO_MATCH_ERROR","","",null,null],[17,"PATHSPEC_FIND_FAILURES","","",null,null],[17,"PATHSPEC_FAILURES_ONLY","","",null,null],[17,"DIFF_STATS_NONE","","",null,null],[17,"DIFF_STATS_FULL","","",null,null],[17,"DIFF_STATS_SHORT","","",null,null],[17,"DIFF_STATS_NUMBER","","",null,null],[17,"DIFF_STATS_INCLUDE_SUMMARY","","",null,null],[8,"IntoCString","","A class of types that can be converted to C strings.",null,null],[10,"into_c_string","","Consume this container, converting it into a CString",93,{"inputs":[{"name":"intocstring"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"eq","","",4,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"repositorystate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"repositorystate"}],"output":{"name":"repositorystate"}}],[11,"eq","","",5,{"inputs":[{"name":"repositorystate"},{"name":"repositorystate"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"repositorystate"},{"name":"repositorystate"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"clone","","",7,{"inputs":[{"name":"resettype"}],"output":{"name":"resettype"}}],[11,"fmt","","",8,{"inputs":[{"name":"objecttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"objecttype"}],"output":{"name":"objecttype"}}],[11,"eq","","",8,{"inputs":[{"name":"objecttype"},{"name":"objecttype"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"objecttype"},{"name":"objecttype"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"branchtype"}],"output":{"name":"branchtype"}}],[11,"fmt","","",9,{"inputs":[{"name":"branchtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"branchtype"},{"name":"branchtype"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"branchtype"},{"name":"branchtype"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"configlevel"}],"output":{"name":"configlevel"}}],[11,"fmt","","",10,{"inputs":[{"name":"configlevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"configlevel"},{"name":"configlevel"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"configlevel"},{"name":"configlevel"}],"output":{"name":"bool"}}],[11,"hash","","",94,null],[11,"cmp","","",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"option"}}],[11,"lt","","",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"bool"}}],[11,"le","","",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"bool"}}],[11,"gt","","",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"bool"}}],[11,"ge","","",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"sort"}],"output":{"name":"sort"}}],[11,"eq","","",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",94,{"inputs":[{"name":"sort"}],"output":{"name":"sort"}}],[11,"all","","Returns the set containing all flags.",94,{"inputs":[{"name":"sort"}],"output":{"name":"sort"}}],[11,"bits","","Returns the raw value of the flags currently stored.",94,{"inputs":[{"name":"sort"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",94,{"inputs":[{"name":"sort"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",94,{"inputs":[{"name":"sort"},{"name":"u32"}],"output":{"name":"sort"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",94,{"inputs":[{"name":"sort"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",94,{"inputs":[{"name":"sort"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"sort"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"sort"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"sort"}}],[11,"sub","","Returns the set difference of the two sets of flags.",94,{"inputs":[{"name":"sort"},{"name":"sort"}],"output":{"name":"sort"}}],[11,"not","","Returns the complement of this set of flags.",94,{"inputs":[{"name":"sort"}],"output":{"name":"sort"}}],[11,"hash","","",95,null],[11,"cmp","","",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"option"}}],[11,"lt","","",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"bool"}}],[11,"le","","",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"bool"}}],[11,"gt","","",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"bool"}}],[11,"ge","","",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"credentialtype"}],"output":{"name":"credentialtype"}}],[11,"eq","","",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",95,{"inputs":[{"name":"credentialtype"}],"output":{"name":"credentialtype"}}],[11,"all","","Returns the set containing all flags.",95,{"inputs":[{"name":"credentialtype"}],"output":{"name":"credentialtype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",95,{"inputs":[{"name":"credentialtype"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",95,{"inputs":[{"name":"credentialtype"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",95,{"inputs":[{"name":"credentialtype"},{"name":"u32"}],"output":{"name":"credentialtype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",95,{"inputs":[{"name":"credentialtype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",95,{"inputs":[{"name":"credentialtype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"credentialtype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"credentialtype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"credentialtype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",95,{"inputs":[{"name":"credentialtype"},{"name":"credentialtype"}],"output":{"name":"credentialtype"}}],[11,"not","","Returns the complement of this set of flags.",95,{"inputs":[{"name":"credentialtype"}],"output":{"name":"credentialtype"}}],[11,"hash","","",96,null],[11,"cmp","","",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"option"}}],[11,"lt","","",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"bool"}}],[11,"le","","",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"bool"}}],[11,"gt","","",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"bool"}}],[11,"ge","","",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"indexaddoption"}],"output":{"name":"indexaddoption"}}],[11,"eq","","",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",96,{"inputs":[{"name":"indexaddoption"}],"output":{"name":"indexaddoption"}}],[11,"all","","Returns the set containing all flags.",96,{"inputs":[{"name":"indexaddoption"}],"output":{"name":"indexaddoption"}}],[11,"bits","","Returns the raw value of the flags currently stored.",96,{"inputs":[{"name":"indexaddoption"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",96,{"inputs":[{"name":"indexaddoption"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",96,{"inputs":[{"name":"indexaddoption"},{"name":"u32"}],"output":{"name":"indexaddoption"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",96,{"inputs":[{"name":"indexaddoption"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",96,{"inputs":[{"name":"indexaddoption"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"indexaddoption"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"indexaddoption"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"indexaddoption"}}],[11,"sub","","Returns the set difference of the two sets of flags.",96,{"inputs":[{"name":"indexaddoption"},{"name":"indexaddoption"}],"output":{"name":"indexaddoption"}}],[11,"not","","Returns the complement of this set of flags.",96,{"inputs":[{"name":"indexaddoption"}],"output":{"name":"indexaddoption"}}],[11,"hash","","",97,null],[11,"cmp","","",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"option"}}],[11,"lt","","",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"bool"}}],[11,"le","","",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"bool"}}],[11,"gt","","",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"bool"}}],[11,"ge","","",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"revparsemode"}],"output":{"name":"revparsemode"}}],[11,"eq","","",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",97,{"inputs":[{"name":"revparsemode"}],"output":{"name":"revparsemode"}}],[11,"all","","Returns the set containing all flags.",97,{"inputs":[{"name":"revparsemode"}],"output":{"name":"revparsemode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",97,{"inputs":[{"name":"revparsemode"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",97,{"inputs":[{"name":"revparsemode"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",97,{"inputs":[{"name":"revparsemode"},{"name":"u32"}],"output":{"name":"revparsemode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",97,{"inputs":[{"name":"revparsemode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",97,{"inputs":[{"name":"revparsemode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"revparsemode"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"revparsemode"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"revparsemode"}}],[11,"sub","","Returns the set difference of the two sets of flags.",97,{"inputs":[{"name":"revparsemode"},{"name":"revparsemode"}],"output":{"name":"revparsemode"}}],[11,"not","","Returns the complement of this set of flags.",97,{"inputs":[{"name":"revparsemode"}],"output":{"name":"revparsemode"}}],[11,"str","","Convert an object type to its string representation.",8,{"inputs":[{"name":"objecttype"}],"output":{"name":"str"}}],[11,"is_loose","","Determine if the given git_otype is a valid loose object type.",8,{"inputs":[{"name":"objecttype"}],"output":{"name":"bool"}}],[11,"from_raw","","Convert a raw git_otype to an ObjectType",8,{"inputs":[{"name":"objecttype"},{"name":"git_otype"}],"output":{"name":"option"}}],[11,"raw","","Convert this kind into its raw representation",8,{"inputs":[{"name":"objecttype"}],"output":{"name":"git_otype"}}],[11,"from_str","","Convert a string object type representation to its object type.",8,{"inputs":[{"name":"objecttype"},{"name":"str"}],"output":{"name":"option"}}],[11,"fmt","","",8,{"inputs":[{"name":"objecttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_raw","","Converts a raw configuration level to a ConfigLevel",10,{"inputs":[{"name":"configlevel"},{"name":"git_config_level_t"}],"output":{"name":"configlevel"}}],[11,"hash","","",98,null],[11,"cmp","","",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"option"}}],[11,"lt","","",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"le","","",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"gt","","",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"ge","","",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"status"}],"output":{"name":"status"}}],[11,"eq","","",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",98,{"inputs":[{"name":"status"}],"output":{"name":"status"}}],[11,"all","","Returns the set containing all flags.",98,{"inputs":[{"name":"status"}],"output":{"name":"status"}}],[11,"bits","","Returns the raw value of the flags currently stored.",98,{"inputs":[{"name":"status"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",98,{"inputs":[{"name":"status"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",98,{"inputs":[{"name":"status"},{"name":"u32"}],"output":{"name":"status"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",98,{"inputs":[{"name":"status"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",98,{"inputs":[{"name":"status"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"status"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"status"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"status"}}],[11,"sub","","Returns the set difference of the two sets of flags.",98,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"status"}}],[11,"not","","Returns the complement of this set of flags.",98,{"inputs":[{"name":"status"}],"output":{"name":"status"}}],[11,"hash","","",99,null],[11,"cmp","","",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"option"}}],[11,"lt","","",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"bool"}}],[11,"le","","",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"bool"}}],[11,"gt","","",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"bool"}}],[11,"ge","","",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"repositoryinitmode"}],"output":{"name":"repositoryinitmode"}}],[11,"eq","","",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",99,{"inputs":[{"name":"repositoryinitmode"}],"output":{"name":"repositoryinitmode"}}],[11,"all","","Returns the set containing all flags.",99,{"inputs":[{"name":"repositoryinitmode"}],"output":{"name":"repositoryinitmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",99,{"inputs":[{"name":"repositoryinitmode"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"u32"}],"output":{"name":"repositoryinitmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",99,{"inputs":[{"name":"repositoryinitmode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",99,{"inputs":[{"name":"repositoryinitmode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"repositoryinitmode"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"repositoryinitmode"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"repositoryinitmode"}}],[11,"sub","","Returns the set difference of the two sets of flags.",99,{"inputs":[{"name":"repositoryinitmode"},{"name":"repositoryinitmode"}],"output":{"name":"repositoryinitmode"}}],[11,"not","","Returns the complement of this set of flags.",99,{"inputs":[{"name":"repositoryinitmode"}],"output":{"name":"repositoryinitmode"}}],[11,"fmt","","",11,{"inputs":[{"name":"delta"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"delta"}],"output":{"name":"delta"}}],[11,"hash","","",100,null],[11,"cmp","","",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"option"}}],[11,"lt","","",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"bool"}}],[11,"le","","",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"bool"}}],[11,"gt","","",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"bool"}}],[11,"ge","","",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"submodulestatus"}],"output":{"name":"submodulestatus"}}],[11,"eq","","",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",100,{"inputs":[{"name":"submodulestatus"}],"output":{"name":"submodulestatus"}}],[11,"all","","Returns the set containing all flags.",100,{"inputs":[{"name":"submodulestatus"}],"output":{"name":"submodulestatus"}}],[11,"bits","","Returns the raw value of the flags currently stored.",100,{"inputs":[{"name":"submodulestatus"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",100,{"inputs":[{"name":"submodulestatus"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",100,{"inputs":[{"name":"submodulestatus"},{"name":"u32"}],"output":{"name":"submodulestatus"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",100,{"inputs":[{"name":"submodulestatus"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",100,{"inputs":[{"name":"submodulestatus"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"submodulestatus"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"submodulestatus"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"submodulestatus"}}],[11,"sub","","Returns the set difference of the two sets of flags.",100,{"inputs":[{"name":"submodulestatus"},{"name":"submodulestatus"}],"output":{"name":"submodulestatus"}}],[11,"not","","Returns the complement of this set of flags.",100,{"inputs":[{"name":"submodulestatus"}],"output":{"name":"submodulestatus"}}],[11,"hash","","",101,null],[11,"cmp","","",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"option"}}],[11,"lt","","",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"le","","",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"gt","","",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"ge","","",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"pathspecflags"}],"output":{"name":"pathspecflags"}}],[11,"eq","","",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",101,{"inputs":[{"name":"pathspecflags"}],"output":{"name":"pathspecflags"}}],[11,"all","","Returns the set containing all flags.",101,{"inputs":[{"name":"pathspecflags"}],"output":{"name":"pathspecflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",101,{"inputs":[{"name":"pathspecflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",101,{"inputs":[{"name":"pathspecflags"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",101,{"inputs":[{"name":"pathspecflags"},{"name":"u32"}],"output":{"name":"pathspecflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,{"inputs":[{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",101,{"inputs":[{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"pathspecflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"pathspecflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"pathspecflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",101,{"inputs":[{"name":"pathspecflags"},{"name":"pathspecflags"}],"output":{"name":"pathspecflags"}}],[11,"not","","Returns the complement of this set of flags.",101,{"inputs":[{"name":"pathspecflags"}],"output":{"name":"pathspecflags"}}],[11,"clone","","",12,{"inputs":[{"name":"diffformat"}],"output":{"name":"diffformat"}}],[11,"hash","","",102,null],[11,"cmp","","",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"option"}}],[11,"lt","","",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"bool"}}],[11,"le","","",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"bool"}}],[11,"gt","","",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"bool"}}],[11,"ge","","",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"diffstatsformat"}],"output":{"name":"diffstatsformat"}}],[11,"eq","","",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",102,{"inputs":[{"name":"diffstatsformat"}],"output":{"name":"diffstatsformat"}}],[11,"all","","Returns the set containing all flags.",102,{"inputs":[{"name":"diffstatsformat"}],"output":{"name":"diffstatsformat"}}],[11,"bits","","Returns the raw value of the flags currently stored.",102,{"inputs":[{"name":"diffstatsformat"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"u32"}],"output":{"name":"diffstatsformat"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",102,{"inputs":[{"name":"diffstatsformat"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",102,{"inputs":[{"name":"diffstatsformat"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"diffstatsformat"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"diffstatsformat"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"diffstatsformat"}}],[11,"sub","","Returns the set difference of the two sets of flags.",102,{"inputs":[{"name":"diffstatsformat"},{"name":"diffstatsformat"}],"output":{"name":"diffstatsformat"}}],[11,"not","","Returns the complement of this set of flags.",102,{"inputs":[{"name":"diffstatsformat"}],"output":{"name":"diffstatsformat"}}]],"paths":[[3,"CredentialHelper"],[3,"IndexEntry"],[3,"PushStatus"],[4,"StatusShow"],[4,"ErrorCode"],[4,"RepositoryState"],[4,"Direction"],[4,"ResetType"],[4,"ObjectType"],[4,"BranchType"],[4,"ConfigLevel"],[4,"Delta"],[4,"DiffFormat"],[3,"String"],[3,"CString"],[3,"PathBuf"],[3,"OsString"],[3,"Vec"],[3,"RepoBuilder"],[3,"CheckoutBuilder"],[3,"Cert"],[3,"CertHostkey"],[3,"CertX509"],[3,"StringArray"],[3,"Iter"],[3,"IterBytes"],[4,"Service"],[8,"SmartSubtransport"],[3,"Transport"],[3,"Blame"],[3,"BlameHunk"],[3,"BlameOptions"],[3,"BlameIter"],[3,"Blob"],[3,"Branch"],[3,"Branches"],[3,"Buf"],[3,"Commit"],[3,"Parents"],[3,"Config"],[3,"ConfigEntry"],[3,"ConfigEntries"],[3,"Cred"],[3,"Diff"],[3,"DiffDelta"],[3,"DiffFile"],[3,"DiffOptions"],[3,"Deltas"],[3,"DiffLine"],[3,"DiffHunk"],[3,"DiffStats"],[3,"DiffFindOptions"],[3,"Error"],[3,"Index"],[3,"IndexEntries"],[3,"Note"],[3,"Notes"],[3,"Object"],[3,"Oid"],[3,"Pathspec"],[3,"PathspecMatchList"],[3,"PathspecEntries"],[3,"PathspecDiffEntries"],[3,"PathspecFailedEntries"],[3,"Push"],[3,"Reference"],[3,"References"],[3,"ReferenceNames"],[3,"Reflog"],[3,"ReflogEntry"],[3,"ReflogIter"],[3,"Refspec"],[3,"Remote"],[3,"Refspecs"],[3,"RemoteHead"],[3,"RemoteCallbacks"],[3,"Progress"],[3,"Repository"],[3,"RepositoryInitOptions"],[3,"Revspec"],[3,"Revwalk"],[3,"Signature"],[3,"StatusOptions"],[3,"Statuses"],[3,"StatusIter"],[3,"StatusEntry"],[3,"Submodule"],[3,"Tag"],[3,"Time"],[3,"IndexTime"],[3,"Tree"],[3,"TreeEntry"],[3,"TreeIter"],[8,"IntoCString"],[3,"Sort"],[3,"CredentialType"],[3,"IndexAddOption"],[3,"RevparseMode"],[3,"Status"],[3,"RepositoryInitMode"],[3,"SubmoduleStatus"],[3,"PathspecFlags"],[3,"DiffStatsFormat"]]};
searchIndex['curl'] = {"items":[[0,"","curl","",null,null],[3,"ErrCode","","",null,null],[3,"Version","","",null,null],[3,"Protocols","","",null,null],[5,"version","","",null,{"inputs":[],"output":{"name":"str"}}],[5,"version_info","","",null,{"inputs":[],"output":{"name":"version"}}],[11,"clone","","",0,{"inputs":[{"name":"errcode"}],"output":{"name":"errcode"}}],[11,"is_success","","",0,{"inputs":[{"name":"errcode"}],"output":{"name":"bool"}}],[11,"code","","",0,{"inputs":[{"name":"errcode"}],"output":{"name":"curlcode"}}],[11,"fmt","","",0,{"inputs":[{"name":"errcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"errcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"errcode"}],"output":{"name":"str"}}],[11,"version_str","","",1,{"inputs":[{"name":"version"}],"output":{"name":"str"}}],[11,"version_major","","",1,{"inputs":[{"name":"version"}],"output":{"name":"u32"}}],[11,"version_minor","","",1,{"inputs":[{"name":"version"}],"output":{"name":"u32"}}],[11,"version_patch","","",1,{"inputs":[{"name":"version"}],"output":{"name":"u32"}}],[11,"host","","",1,{"inputs":[{"name":"version"}],"output":{"name":"str"}}],[11,"is_ipv6_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_kerbos4_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_ssl_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_libz_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_ntlm_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_gss_negotiate_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_debug_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_async_dns_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_spengo_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_large_file_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_idn_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_sspi_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_conv_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_curl_debug_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_tls_auth_srp_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_ntlm_wb_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"is_http2_enabled","","",1,{"inputs":[{"name":"version"}],"output":{"name":"bool"}}],[11,"ssl_version","","",1,{"inputs":[{"name":"version"}],"output":{"name":"option"}}],[11,"libz_version","","",1,{"inputs":[{"name":"version"}],"output":{"name":"option"}}],[11,"protocols","","",1,{"inputs":[{"name":"version"}],"output":{"name":"protocols"}}],[11,"ares_version","","",1,{"inputs":[{"name":"version"}],"output":{"name":"option"}}],[11,"ares_version_num","","",1,{"inputs":[{"name":"version"}],"output":{"name":"option"}}],[11,"idn_version","","",1,{"inputs":[{"name":"version"}],"output":{"name":"option"}}],[11,"iconv_version","","",1,{"inputs":[{"name":"version"}],"output":{"name":"option"}}],[11,"ssh_version","","",1,{"inputs":[{"name":"version"}],"output":{"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"protocols"}],"output":{"name":"protocols"}}],[11,"next","","",2,{"inputs":[{"name":"protocols"}],"output":{"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"protocols"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"http","","",null,null],[3,"Response","curl::http","",null,null],[5,"handle","","",null,{"inputs":[],"output":{"name":"handle"}}],[0,"body","","",null,null],[4,"Body","curl::http::body","",null,null],[13,"FixedBody","","",3,null],[13,"ChunkedBody","","",3,null],[8,"ToBody","","",null,null],[10,"to_body","","",4,{"inputs":[{"name":"tobody"}],"output":{"name":"body"}}],[11,"get_size","","",3,{"inputs":[{"name":"body"}],"output":{"name":"option"}}],[11,"read","","",3,null],[0,"handle","curl::http","",null,null],[3,"Handle","curl::http::handle","",null,null],[3,"Request","","",null,null],[4,"Method","","",null,null],[13,"Options","","",5,null],[13,"Get","","",5,null],[13,"Head","","",5,null],[13,"Post","","",5,null],[13,"Put","","",5,null],[13,"Patch","","",5,null],[13,"Delete","","",5,null],[13,"Trace","","",5,null],[13,"Connect","","",5,null],[8,"ToUrl","","",null,null],[10,"with_url_str","","",6,{"inputs":[{"name":"tourl"},{"name":"f"}],"output":null}],[11,"new","","",7,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"timeout","","",7,{"inputs":[{"name":"handle"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"connect_timeout","","",7,{"inputs":[{"name":"handle"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"low_speed_timeout","","Set the time in seconds that the transfer speed should be below\nthe `low_speed_limit` rate of bytes per second for the library to\nconsider it too slow and abort.",7,{"inputs":[{"name":"handle"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"low_speed_limit","","Set the average transfer speed in bytes per second that the\ntransfer should be below during `low_speed_timeout` seconds for\nlibcurl to consider it to be too slow and abort.",7,{"inputs":[{"name":"handle"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"verbose","","",7,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"proxy","","",7,{"inputs":[{"name":"handle"},{"name":"u"}],"output":{"name":"handle"}}],[11,"ssl_ca_path","","",7,{"inputs":[{"name":"handle"},{"name":"path"}],"output":{"name":"handle"}}],[11,"ssl_ca_info","","",7,{"inputs":[{"name":"handle"},{"name":"path"}],"output":{"name":"handle"}}],[11,"cookie_jar","","",7,{"inputs":[{"name":"handle"},{"name":"path"}],"output":{"name":"handle"}}],[11,"cookie_file","","",7,{"inputs":[{"name":"handle"},{"name":"path"}],"output":{"name":"handle"}}],[11,"cookies","","",7,{"inputs":[{"name":"handle"},{"name":"path"}],"output":{"name":"handle"}}],[11,"get","","",7,{"inputs":[{"name":"handle"},{"name":"u"}],"output":{"name":"request"}}],[11,"head","","",7,{"inputs":[{"name":"handle"},{"name":"u"}],"output":{"name":"request"}}],[11,"post","","",7,{"inputs":[{"name":"handle"},{"name":"u"},{"name":"b"}],"output":{"name":"request"}}],[11,"put","","",7,{"inputs":[{"name":"handle"},{"name":"u"},{"name":"b"}],"output":{"name":"request"}}],[11,"patch","","",7,{"inputs":[{"name":"handle"},{"name":"u"},{"name":"b"}],"output":{"name":"request"}}],[11,"delete","","",7,{"inputs":[{"name":"handle"},{"name":"u"}],"output":{"name":"request"}}],[11,"clone","","",5,{"inputs":[{"name":"method"}],"output":{"name":"method"}}],[11,"new","","",8,{"inputs":[{"name":"request"},{"name":"handle"},{"name":"method"}],"output":{"name":"request"}}],[11,"uri","","",8,{"inputs":[{"name":"request"},{"name":"u"}],"output":{"name":"request"}}],[11,"body","","",8,{"inputs":[{"name":"request"},{"name":"b"}],"output":{"name":"request"}}],[11,"content_type","","",8,{"inputs":[{"name":"request"},{"name":"str"}],"output":{"name":"request"}}],[11,"content_length","","",8,{"inputs":[{"name":"request"},{"name":"usize"}],"output":{"name":"request"}}],[11,"chunked","","",8,{"inputs":[{"name":"request"}],"output":{"name":"request"}}],[11,"expect_continue","","",8,{"inputs":[{"name":"request"}],"output":{"name":"request"}}],[11,"header","","",8,{"inputs":[{"name":"request"},{"name":"str"},{"name":"str"}],"output":{"name":"request"}}],[11,"get_header","","",8,{"inputs":[{"name":"request"},{"name":"str"}],"output":{"name":"option"}}],[11,"headers","","",8,{"inputs":[{"name":"request"},{"name":"i"}],"output":{"name":"request"}}],[11,"progress","","",8,{"inputs":[{"name":"request"},{"name":"f"}],"output":{"name":"request"}}],[11,"follow_redirects","","",8,{"inputs":[{"name":"request"},{"name":"bool"}],"output":{"name":"request"}}],[11,"exec","","",8,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"with_url_str","collections::string","",9,{"inputs":[{"name":"string"},{"name":"f"}],"output":null}],[0,"header","curl::http","",null,null],[5,"parse","curl::http::header","Simple header parser extracts the header name and value, stripping out\nstarting and trailing white space. It does not, however, normalize header\nvalue whitespace",null,null],[11,"new","curl::http","",10,{"inputs":[{"name":"response"},{"name":"u32"},{"name":"headers"},{"name":"vec"}],"output":{"name":"response"}}],[11,"get_code","","",10,{"inputs":[{"name":"response"}],"output":{"name":"u32"}}],[11,"get_headers","","",10,{"inputs":[{"name":"response"}],"output":{"name":"headers"}}],[11,"get_header","","",10,null],[11,"get_body","","",10,null],[11,"move_body","","",10,{"inputs":[{"name":"response"}],"output":{"name":"vec"}}],[11,"fmt","","",10,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Headers","","",null,null],[6,"ProgressCb","curl","",null,null]],"paths":[[3,"ErrCode"],[3,"Version"],[3,"Protocols"],[4,"Body"],[8,"ToBody"],[4,"Method"],[8,"ToUrl"],[3,"Handle"],[3,"Request"],[3,"String"],[3,"Response"]]};
searchIndex['url'] = {"items":[[0,"","url","<a href=\"https://github.com/servo/rust-url\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"../github.png\" alt=\"Fork me on GitHub\"></a>\n<style>.sidebar { margin-top: 53px }</style>",null,null],[3,"Ipv6Address","","A 128 bit IPv6 address",null,null],[12,"pieces","","",0,null],[3,"Url","","The parsed representation of an absolute URL.",null,null],[12,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",1,null],[12,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",1,null],[12,"query","","The query string of the URL.",1,null],[12,"fragment","","The fragment identifier of the URL.",1,null],[3,"RelativeSchemeData","","Components for URLs in a *relative* scheme such as HTTP.",null,null],[12,"username","","The username of the URL, as a possibly empty, percent-encoded string.",2,null],[12,"password","","The password of the URL.",2,null],[12,"host","","The host of the URL, either a domain name or an IPv4 address",2,null],[12,"port","","The port number of the URL.\n`None` for file-like schemes, or to indicate the default port number.",2,null],[12,"default_port","","The default port number for the URL’s scheme.\n`None` for file-like schemes.",2,null],[12,"path","","The path of the URL, as vector of percent-encoded strings.",2,null],[3,"UrlParser","","A set of optional parameters for URL parsing.",null,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A (DNS) domain name or an IPv4 address.",3,null],[13,"Ipv6","","An IPv6 address, represented inside `[...]` square brackets\nso that `:` colon characters in the address are not ambiguous\nwith the port number delimiter.",3,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"InvalidScheme","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"InvalidCharacter","","",4,null],[13,"InvalidBackslash","","",4,null],[13,"InvalidPercentEncoded","","",4,null],[13,"InvalidAtSymbolInUser","","",4,null],[13,"ExpectedTwoSlashes","","",4,null],[13,"ExpectedInitialSlash","","",4,null],[13,"NonUrlCodePoint","","",4,null],[13,"RelativeUrlWithScheme","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithNonRelativeBase","","",4,null],[13,"NonAsciiDomainsNotSupportedYet","","",4,null],[13,"CannotSetJavascriptFragment","","",4,null],[13,"CannotSetPortWithFileLikeScheme","","",4,null],[13,"CannotSetUsernameWithNonRelativeScheme","","",4,null],[13,"CannotSetPasswordWithNonRelativeScheme","","",4,null],[13,"CannotSetHostPortWithNonRelativeScheme","","",4,null],[13,"CannotSetHostWithNonRelativeScheme","","",4,null],[13,"CannotSetPortWithNonRelativeScheme","","",4,null],[13,"CannotSetPathWithNonRelativeScheme","","",4,null],[4,"SchemeData","","The components of the URL whose representation depends on where the scheme is *relative*.",null,null],[13,"Relative","","Components for URLs in a *relative* scheme such as HTTP.",5,null],[13,"NonRelative","","No further structure is assumed for *non-relative* schemes such as `data` and `mailto`.",5,null],[4,"SchemeType","","Determines the behavior of the URL parser for a given scheme.",null,null],[13,"NonRelative","","Indicate that the scheme is *non-relative*.",6,null],[13,"Relative","","Indicate that the scheme is *relative*, and what the default port number is.",6,null],[13,"FileLike","","Indicate a *relative* scheme similar to the *file* scheme.",6,null],[5,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"whatwg_scheme_type_mapper","","http://url.spec.whatwg.org/#relative-scheme",null,{"inputs":[{"name":"str"}],"output":{"name":"schemetype"}}],[11,"cmp","","",3,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"host"}],"output":{"name":"host"}}],[11,"eq","","",3,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"ipv6address"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"ipv6address"}],"output":{"name":"ipv6address"}}],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",3,{"inputs":[{"name":"host"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"serialize","","Serialize the host as a string.",3,{"inputs":[{"name":"host"}],"output":{"name":"string"}}],[11,"fmt","","",3,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"parse","","Parse an IPv6 address, without the [] square brackets.",0,{"inputs":[{"name":"ipv6address"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"serialize","","Serialize the IPv6 address to a string.",0,{"inputs":[{"name":"ipv6address"}],"output":{"name":"string"}}],[11,"fmt","","",0,{"inputs":[{"name":"ipv6address"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"eq","","",4,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"description","","",4,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"fmt","","",4,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"urlutils","","These methods are not meant for use in Rust code,\nonly to help implement the JavaScript URLUtils API: http://url.spec.whatwg.org/#urlutils",null,null],[3,"UrlUtilsWrapper","url::urlutils","",null,null],[12,"url","","",7,null],[12,"parser","","",7,null],[0,"percent_encoding","url","",null,null],[3,"EncodeSet","url::percent_encoding","Represents a set of characters / bytes that should be percent-encoded.",null,null],[5,"percent_encode_to","","Percent-encode the given bytes, and push the result to `output`.",null,null],[5,"percent_encode","","Percent-encode the given bytes.",null,null],[5,"utf8_percent_encode_to","","Percent-encode the UTF-8 encoding of the given string, and push the result to `output`.",null,{"inputs":[{"name":"str"},{"name":"encodeset"},{"name":"string"}],"output":null}],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"inputs":[{"name":"str"},{"name":"encodeset"}],"output":{"name":"string"}}],[5,"percent_decode_to","","Percent-decode the given bytes, and push the result to `output`.",null,null],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[5,"lossy_utf8_percent_decode","","Percent-decode the given bytes, and decode the result as UTF-8.",null,null],[5,"from_hex","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[7,"SIMPLE_ENCODE_SET","","This encode set is used for fragment identifier and non-relative scheme data.",null,null],[7,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[7,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[7,"USERINFO_ENCODE_SET","","This encode set is used in the URL parser for usernames and passwords.",null,null],[7,"PASSWORD_ENCODE_SET","","This encode set should be used when setting the password field of a parsed URL.",null,null],[7,"USERNAME_ENCODE_SET","","This encode set should be used when setting the username field of a parsed URL.",null,null],[7,"FORM_URLENCODED_ENCODE_SET","","This encode set is used in `application/x-www-form-urlencoded` serialization.",null,null],[11,"clone","","",8,{"inputs":[{"name":"encodeset"}],"output":{"name":"encodeset"}}],[0,"form_urlencoded","url","Parser and serializer for the [`application/x-www-form-urlencoded` format](\nhttp://url.spec.whatwg.org/#application/x-www-form-urlencoded),\nas used by HTML forms.",null,null],[5,"parse","url::form_urlencoded","Convert a byte string in the `application/x-www-form-urlencoded` format\ninto a vector of (name, value) pairs.",null,null],[5,"serialize","","Convert an iterator of (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format.",null,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[0,"punycode","url","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.",null,null],[5,"decode_to_string","url::punycode","Convert Punycode to an Unicode `String`.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"format","url","Formatting utilities for URLs.",null,null],[3,"PathFormatter","url::format","Formatter and serializer for URL path data.",null,null],[12,"path","","The path as a slice of string-like objects (String or &str).",9,null],[3,"UserInfoFormatter","","Formatter and serializer for URL username and password data.",null,null],[12,"username","","URL username as a string slice.",10,null],[12,"password","","URL password as an optional string slice.",10,null],[3,"UrlNoFragmentFormatter","","Formatter for URLs which ignores the fragment field.",null,null],[12,"url","","",11,null],[11,"fmt","","",9,{"inputs":[{"name":"pathformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"userinfoformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"urlnofragmentformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"ErrorHandler","url","This is called on non-fatal parse errors.",null,null],[6,"ParseResult","","",null,null],[11,"cmp","","",1,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"url"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"url"}],"output":{"name":"url"}}],[11,"eq","","",1,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"schemedata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"schemedata"}],"output":{"name":"schemedata"}}],[11,"eq","","",5,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"relativeschemedata"}}],[11,"eq","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"bool"}}],[11,"from_str","","",1,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"new","","Return a new UrlParser with default parameters.",12,{"inputs":[{"name":"urlparser"}],"output":{"name":"urlparser"}}],[11,"base_url","","Set the base URL used for resolving relative URL references, and return the `UrlParser`.\nThe default is no base URL, so that relative URLs references fail to parse.",12,{"inputs":[{"name":"urlparser"},{"name":"url"}],"output":{"name":"urlparser"}}],[11,"error_handler","","Set an error handler for non-fatal parse errors, and return the `UrlParser`.",12,{"inputs":[{"name":"urlparser"},{"name":"errorhandler"}],"output":{"name":"urlparser"}}],[11,"scheme_type_mapper","","Set a *scheme type mapper*, and return the `UrlParser`.",12,null],[11,"parse","","Parse `input` as an URL, with all the parameters previously set in the `UrlParser`.",12,{"inputs":[{"name":"urlparser"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",12,{"inputs":[{"name":"urlparser"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"cmp","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"clone","","",6,{"inputs":[{"name":"schemetype"}],"output":{"name":"schemetype"}}],[11,"fmt","","",6,{"inputs":[{"name":"schemetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"default_port","","",6,{"inputs":[{"name":"schemetype"}],"output":{"name":"option"}}],[11,"same_as","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"parse","","Parse an URL with the default `UrlParser` parameters.",1,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",1,{"inputs":[{"name":"url"},{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",1,{"inputs":[{"name":"url"},{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",1,{"inputs":[{"name":"url"}],"output":{"name":"result"}}],[11,"serialize","","Return the serialization of this URL as a string.",1,{"inputs":[{"name":"url"}],"output":{"name":"string"}}],[11,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",1,{"inputs":[{"name":"url"}],"output":{"name":"string"}}],[11,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"username","","If the URL is in a *relative scheme*, return its username.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"password","","If the URL is in a *relative scheme*, return its password, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"serialize_userinfo","","Serialize the URL's username and password, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"host","","If the URL is in a *relative scheme*, return its structured host.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"port","","If the URL is in a *relative scheme* and has a port number, return it.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"path","","If the URL is in a *relative scheme*, return its path components.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",1,{"inputs":[{"name":"url"},{"name":"i"}],"output":null}],[11,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"encode","","",1,{"inputs":[{"name":"url"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"url"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"url"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"schemedata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"string"}}],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"result"}}],[11,"domain","","If the host is a domain, return the domain as a string.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"domain_mut","","If the host is a domain, return a mutable reference to the domain string.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"port_or_default","","Return the port number of the URL, even if it is the default.\nReturn `None` for file-like URLs.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"serialize_path","","Serialize the path as a string.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"string"}}],[11,"serialize_userinfo","","Serialize the userinfo as a string.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"string"}}],[11,"fmt","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Ipv6Address"],[3,"Url"],[3,"RelativeSchemeData"],[4,"Host"],[4,"ParseError"],[4,"SchemeData"],[4,"SchemeType"],[3,"UrlUtilsWrapper"],[3,"EncodeSet"],[3,"PathFormatter"],[3,"UserInfoFormatter"],[3,"UrlNoFragmentFormatter"],[3,"UrlParser"]]};
searchIndex['rustc_serialize'] = {"items":[[0,"","rustc_serialize","Support code for encoding and decoding types.",null,null],[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,{"inputs":[{"name":"cow"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"cow"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"phantomdata"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"cell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"refcell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"linkedlist"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"vecdeque"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",17,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"clone","","",20,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"clone","","",18,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"decodererror"},{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",29,{"inputs":[{"name":"parsererror"},{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"name":"encodererror"},{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",35,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",35,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",35,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",35,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",35,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",35,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",35,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",35,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",35,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",35,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",35,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",35,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",35,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",27,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",27,{"inputs":[{"name":"json"},{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",32,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",36,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"next","","",37,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"parser"},{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"decoder"},{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",39,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",4,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",14,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",5,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",42,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",42,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",43,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",44,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",44,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",44,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",44,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",44,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",44,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",44,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",44,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",44,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",44,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",44,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",44,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",44,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",44,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"decodable"},{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['libgit2_sys'] = {"items":[[0,"","libgit2_sys","",null,null],[3,"git_revspec","","",null,null],[12,"from","","",0,null],[12,"to","","",0,null],[12,"flags","","",0,null],[3,"git_error","","",null,null],[12,"message","","",1,null],[12,"klass","","",1,null],[3,"git_oid","","",null,null],[12,"id","","",2,null],[3,"git_strarray","","",null,null],[12,"strings","","",3,null],[12,"count","","",3,null],[3,"git_signature","","",null,null],[12,"name","","",4,null],[12,"email","","",4,null],[12,"when","","",4,null],[3,"git_time","","",null,null],[12,"time","","",5,null],[12,"offset","","",5,null],[3,"git_clone_options","","",null,null],[12,"version","","",6,null],[12,"checkout_opts","","",6,null],[12,"remote_callbacks","","",6,null],[12,"bare","","",6,null],[12,"local","","",6,null],[12,"checkout_branch","","",6,null],[12,"repository_cb","","",6,null],[12,"repository_cb_payload","","",6,null],[12,"remote_cb","","",6,null],[12,"remote_cb_payload","","",6,null],[3,"git_checkout_options","","",null,null],[12,"version","","",7,null],[12,"checkout_strategy","","",7,null],[12,"disable_filters","","",7,null],[12,"dir_mode","","",7,null],[12,"file_mode","","",7,null],[12,"file_open_flags","","",7,null],[12,"notify_flags","","",7,null],[12,"notify_cb","","",7,null],[12,"notify_payload","","",7,null],[12,"progress_cb","","",7,null],[12,"progress_payload","","",7,null],[12,"paths","","",7,null],[12,"baseline","","",7,null],[12,"target_directory","","",7,null],[12,"ancestor_label","","",7,null],[12,"our_label","","",7,null],[12,"their_label","","",7,null],[12,"perfdata_cb","","",7,null],[12,"perdata_payload","","",7,null],[3,"git_checkout_perfdata","","",null,null],[12,"mkdir_calls","","",8,null],[12,"stat_calls","","",8,null],[12,"chmod_calls","","",8,null],[3,"git_remote_callbacks","","",null,null],[12,"version","","",9,null],[12,"sideband_progress","","",9,null],[12,"completion","","",9,null],[12,"credentials","","",9,null],[12,"certificate_check","","",9,null],[12,"transfer_progress","","",9,null],[12,"update_tips","","",9,null],[12,"pack_progress","","",9,null],[12,"push_transfer_progress","","",9,null],[12,"push_update_reference","","",9,null],[12,"payload","","",9,null],[3,"git_cert","","",null,null],[12,"cert_type","","",10,null],[3,"git_cert_hostkey","","",null,null],[12,"cert_type","","",11,null],[12,"kind","","",11,null],[12,"hash_md5","","",11,null],[12,"hash_sha1","","",11,null],[3,"git_cert_x509","","",null,null],[12,"cert_type","","",12,null],[12,"data","","",12,null],[12,"len","","",12,null],[3,"git_transfer_progress","","",null,null],[12,"total_objects","","",13,null],[12,"indexed_objects","","",13,null],[12,"received_objects","","",13,null],[12,"local_objects","","",13,null],[12,"total_deltas","","",13,null],[12,"indexed_deltas","","",13,null],[12,"received_bytes","","",13,null],[3,"git_diff_file","","",null,null],[12,"id","","",14,null],[12,"path","","",14,null],[12,"size","","",14,null],[12,"flags","","",14,null],[12,"mode","","",14,null],[3,"git_status_options","","",null,null],[12,"version","","",15,null],[12,"show","","",15,null],[12,"flags","","",15,null],[12,"pathspec","","",15,null],[3,"git_diff_delta","","",null,null],[12,"status","","",16,null],[12,"flags","","",16,null],[12,"similarity","","",16,null],[12,"nfiles","","",16,null],[12,"old_file","","",16,null],[12,"new_file","","",16,null],[3,"git_status_entry","","",null,null],[12,"status","","",17,null],[12,"head_to_index","","",17,null],[12,"index_to_workdir","","",17,null],[3,"git_buf","","",null,null],[12,"ptr","","",18,null],[12,"asize","","",18,null],[12,"size","","",18,null],[3,"git_blame_options","","",null,null],[12,"version","","",19,null],[12,"flags","","",19,null],[12,"min_match_characters","","",19,null],[12,"newest_commit","","",19,null],[12,"oldest_commit","","",19,null],[12,"min_line","","",19,null],[12,"max_line","","",19,null],[3,"git_blame_hunk","","",null,null],[12,"lines_in_hunk","","",20,null],[12,"final_commit_id","","",20,null],[12,"final_start_line_number","","",20,null],[12,"final_signature","","",20,null],[12,"orig_commit_id","","",20,null],[12,"orig_path","","",20,null],[12,"orig_start_line_number","","",20,null],[12,"orig_signature","","",20,null],[12,"boundary","","",20,null],[3,"git_index_entry","","",null,null],[12,"ctime","","",21,null],[12,"mtime","","",21,null],[12,"dev","","",21,null],[12,"ino","","",21,null],[12,"mode","","",21,null],[12,"uid","","",21,null],[12,"gid","","",21,null],[12,"file_size","","",21,null],[12,"id","","",21,null],[12,"flags","","",21,null],[12,"flags_extended","","",21,null],[12,"path","","",21,null],[3,"git_index_time","","",null,null],[12,"seconds","","",22,null],[12,"nanoseconds","","",22,null],[3,"git_config_entry","","",null,null],[12,"name","","",23,null],[12,"value","","",23,null],[12,"level","","",23,null],[3,"git_cred","","",null,null],[12,"credtype","","",24,null],[12,"free","","",24,null],[3,"git_push_options","","",null,null],[12,"version","","",25,null],[12,"pb_parallelism","","",25,null],[3,"git_repository_init_options","","",null,null],[12,"version","","",26,null],[12,"flags","","",26,null],[12,"mode","","",26,null],[12,"workdir_path","","",26,null],[12,"description","","",26,null],[12,"template_path","","",26,null],[12,"initial_head","","",26,null],[12,"origin_url","","",26,null],[3,"git_remote_head","","",null,null],[12,"local","","",27,null],[12,"oid","","",27,null],[12,"loid","","",27,null],[12,"name","","",27,null],[12,"symref_target","","",27,null],[3,"git_diff_hunk","","",null,null],[12,"old_start","","",28,null],[12,"old_lines","","",28,null],[12,"new_start","","",28,null],[12,"new_lines","","",28,null],[12,"header_len","","",28,null],[12,"header","","",28,null],[3,"git_diff_line","","",null,null],[12,"origin","","",29,null],[12,"old_lineno","","",29,null],[12,"new_lineno","","",29,null],[12,"num_lines","","",29,null],[12,"content_len","","",29,null],[12,"content_offset","","",29,null],[12,"content","","",29,null],[3,"git_diff_options","","",null,null],[12,"version","","",30,null],[12,"flags","","",30,null],[12,"ignore_submodules","","",30,null],[12,"pathspec","","",30,null],[12,"notify_cb","","",30,null],[12,"notify_payload","","",30,null],[12,"context_lines","","",30,null],[12,"interhunk_lines","","",30,null],[12,"id_abbrev","","",30,null],[12,"max_size","","",30,null],[12,"old_prefix","","",30,null],[12,"new_prefix","","",30,null],[3,"git_diff_find_options","","",null,null],[12,"version","","",31,null],[12,"flags","","",31,null],[12,"rename_threshold","","",31,null],[12,"rename_from_rewrite_threshold","","",31,null],[12,"copy_threshold","","",31,null],[12,"break_rewrite_threshold","","",31,null],[12,"rename_limit","","",31,null],[12,"metric","","",31,null],[3,"git_diff_similarity_metric","","",null,null],[12,"file_signature","","",32,null],[12,"buffer_signature","","",32,null],[12,"free_signature","","",32,null],[12,"similarity","","",32,null],[12,"payload","","",32,null],[3,"git_transport","","",null,null],[12,"version","","",33,null],[12,"set_callbacks","","",33,null],[12,"connect","","",33,null],[12,"ls","","",33,null],[12,"push","","",33,null],[12,"negotiate_fetch","","",33,null],[12,"download_pack","","",33,null],[12,"is_connected","","",33,null],[12,"read_flags","","",33,null],[12,"cancel","","",33,null],[12,"close","","",33,null],[12,"free","","",33,null],[3,"git_smart_subtransport_stream","","",null,null],[12,"subtransport","","",34,null],[12,"read","","",34,null],[12,"write","","",34,null],[12,"free","","",34,null],[3,"git_smart_subtransport","","",null,null],[12,"action","","",35,null],[12,"close","","",35,null],[12,"free","","",35,null],[3,"git_smart_subtransport_definition","","",null,null],[12,"callback","","",36,null],[12,"rpc","","",36,null],[12,"param","","",36,null],[4,"git_blob","","",null,null],[4,"git_branch_iterator","","",null,null],[4,"git_blame","","",null,null],[4,"git_commit","","",null,null],[4,"git_config","","",null,null],[4,"git_config_iterator","","",null,null],[4,"git_index","","",null,null],[4,"git_object","","",null,null],[4,"git_reference","","",null,null],[4,"git_reference_iterator","","",null,null],[4,"git_refspec","","",null,null],[4,"git_remote","","",null,null],[4,"git_repository","","",null,null],[4,"git_revwalk","","",null,null],[4,"git_submodule","","",null,null],[4,"git_tag","","",null,null],[4,"git_tree","","",null,null],[4,"git_tree_entry","","",null,null],[4,"git_push","","",null,null],[4,"git_note","","",null,null],[4,"git_note_iterator","","",null,null],[4,"git_status_list","","",null,null],[4,"git_pathspec","","",null,null],[4,"git_pathspec_match_list","","",null,null],[4,"git_diff","","",null,null],[4,"git_diff_stats","","",null,null],[4,"git_reflog","","",null,null],[4,"git_reflog_entry","","",null,null],[4,"git_error_code","","",null,null],[13,"GIT_OK","","",37,null],[13,"GIT_ERROR","","",37,null],[13,"GIT_ENOTFOUND","","",37,null],[13,"GIT_EEXISTS","","",37,null],[13,"GIT_EAMBIGUOUS","","",37,null],[13,"GIT_EBUFS","","",37,null],[13,"GIT_EUSER","","",37,null],[13,"GIT_EBAREREPO","","",37,null],[13,"GIT_EUNBORNBRANCH","","",37,null],[13,"GIT_EUNMERGED","","",37,null],[13,"GIT_ENONFASTFORWARD","","",37,null],[13,"GIT_EINVALIDSPEC","","",37,null],[13,"GIT_EMERGECONFLICT","","",37,null],[13,"GIT_ELOCKED","","",37,null],[13,"GIT_EMODIFIED","","",37,null],[13,"GIT_PASSTHROUGH","","",37,null],[13,"GIT_ITEROVER","","",37,null],[4,"git_error_t","","",null,null],[13,"GITERR_NONE","","",38,null],[13,"GITERR_NOMEMORY","","",38,null],[13,"GITERR_OS","","",38,null],[13,"GITERR_INVALID","","",38,null],[13,"GITERR_REFERENCE","","",38,null],[13,"GITERR_ZLIB","","",38,null],[13,"GITERR_REPOSITORY","","",38,null],[13,"GITERR_CONFIG","","",38,null],[13,"GITERR_REGEX","","",38,null],[13,"GITERR_ODB","","",38,null],[13,"GITERR_INDEX","","",38,null],[13,"GITERR_OBJECT","","",38,null],[13,"GITERR_NET","","",38,null],[13,"GITERR_TAG","","",38,null],[13,"GITERR_TREE","","",38,null],[13,"GITERR_INDEXER","","",38,null],[13,"GITERR_SSL","","",38,null],[13,"GITERR_SUBMODULE","","",38,null],[13,"GITERR_THREAD","","",38,null],[13,"GITERR_STASH","","",38,null],[13,"GITERR_CHECKOUT","","",38,null],[13,"GITERR_FETCHHEAD","","",38,null],[13,"GITERR_MERGE","","",38,null],[13,"GITERR_SSH","","",38,null],[13,"GITERR_FILTER","","",38,null],[13,"GITERR_REVERT","","",38,null],[13,"GITERR_CALLBACK","","",38,null],[13,"GITERR_CHERRYPICK","","",38,null],[13,"GITERR_DESCRIBE","","",38,null],[13,"GITERR_REBASE","","",38,null],[4,"git_repository_state_t","","",null,null],[13,"GIT_REPOSITORY_STATE_NONE","","",39,null],[13,"GIT_REPOSITORY_STATE_MERGE","","",39,null],[13,"GIT_REPOSITORY_STATE_REVERT","","",39,null],[13,"GIT_REPOSITORY_STATE_CHERRYPICK","","",39,null],[13,"GIT_REPOSITORY_STATE_BISECT","","",39,null],[13,"GIT_REPOSITORY_STATE_REBASE","","",39,null],[13,"GIT_REPOSITORY_STATE_REBASE_INTERACTIVE","","",39,null],[13,"GIT_REPOSITORY_STATE_REBASE_MERGE","","",39,null],[13,"GIT_REPOSITORY_STATE_APPLY_MAILBOX","","",39,null],[13,"GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE","","",39,null],[4,"git_direction","","",null,null],[13,"GIT_DIRECTION_FETCH","","",40,null],[13,"GIT_DIRECTION_PUSH","","",40,null],[4,"git_clone_local_t","","",null,null],[13,"GIT_CLONE_LOCAL_AUTO","","",41,null],[13,"GIT_CLONE_LOCAL","","",41,null],[13,"GIT_CLONE_NO_LOCAL","","",41,null],[13,"GIT_CLONE_LOCAL_NO_LINKS","","",41,null],[4,"git_remote_completion_type","","",null,null],[13,"GIT_REMOTE_COMPLETION_DOWNLOAD","","",42,null],[13,"GIT_REMOTE_COMPLETION_INDEXING","","",42,null],[13,"GIT_REMOTE_COMPLETION_ERROR","","",42,null],[4,"git_cert_t","","",null,null],[13,"GIT_CERT_X509","","",43,null],[13,"GIT_CERT_HOSTKEY_LIBSSH2","","",43,null],[4,"git_cert_ssh_t","","",null,null],[13,"GIT_CERT_SSH_MD5","","",44,null],[13,"GIT_CERT_SSH_SHA1","","",44,null],[4,"git_checkout_notify_t","","",null,null],[13,"GIT_CHECKOUT_NOTIFY_NONE","","",45,null],[13,"GIT_CHECKOUT_NOTIFY_CONFLICT","","",45,null],[13,"GIT_CHECKOUT_NOTIFY_DIRTY","","",45,null],[13,"GIT_CHECKOUT_NOTIFY_UPDATED","","",45,null],[13,"GIT_CHECKOUT_NOTIFY_UNTRACKED","","",45,null],[13,"GIT_CHECKOUT_NOTIFY_IGNORED","","",45,null],[13,"GIT_CHECKOUT_NOTIFY_ALL","","",45,null],[4,"git_status_t","","",null,null],[13,"GIT_STATUS_CURRENT","","",46,null],[13,"GIT_STATUS_INDEX_NEW","","",46,null],[13,"GIT_STATUS_INDEX_MODIFIED","","",46,null],[13,"GIT_STATUS_INDEX_DELETED","","",46,null],[13,"GIT_STATUS_INDEX_RENAMED","","",46,null],[13,"GIT_STATUS_INDEX_TYPECHANGE","","",46,null],[13,"GIT_STATUS_WT_NEW","","",46,null],[13,"GIT_STATUS_WT_MODIFIED","","",46,null],[13,"GIT_STATUS_WT_DELETED","","",46,null],[13,"GIT_STATUS_WT_TYPECHANGE","","",46,null],[13,"GIT_STATUS_WT_RENAMED","","",46,null],[13,"GIT_STATUS_WT_UNREADABLE","","",46,null],[13,"GIT_STATUS_IGNORED","","",46,null],[4,"git_status_opt_t","","",null,null],[13,"GIT_STATUS_OPT_INCLUDE_UNTRACKED","","",47,null],[13,"GIT_STATUS_OPT_INCLUDE_IGNORED","","",47,null],[13,"GIT_STATUS_OPT_INCLUDE_UNMODIFIED","","",47,null],[13,"GIT_STATUS_OPT_EXCLUDE_SUBMODULES","","",47,null],[13,"GIT_STATUS_OPT_RECURSE_UNTRACKED_DIRS","","",47,null],[13,"GIT_STATUS_OPT_DISABLE_PATHSPEC_MATCH","","",47,null],[13,"GIT_STATUS_OPT_RECURSE_IGNORED_DIRS","","",47,null],[13,"GIT_STATUS_OPT_RENAMES_HEAD_TO_INDEX","","",47,null],[13,"GIT_STATUS_OPT_RENAMES_INDEX_TO_WORKDIR","","",47,null],[13,"GIT_STATUS_OPT_SORT_CASE_SENSITIVELY","","",47,null],[13,"GIT_STATUS_OPT_SORT_CASE_INSENSITIVELY","","",47,null],[13,"GIT_STATUS_OPT_RENAMES_FROM_REWRITES","","",47,null],[13,"GIT_STATUS_OPT_NO_REFRESH","","",47,null],[13,"GIT_STATUS_OPT_UPDATE_INDEX","","",47,null],[13,"GIT_STATUS_OPT_INCLUDE_UNREADABLE","","",47,null],[13,"GIT_STATUS_OPT_INCLUDE_UNREADABLE_AS_UNTRACKED","","",47,null],[4,"git_status_show_t","","",null,null],[13,"GIT_STATUS_SHOW_INDEX_AND_WORKDIR","","",48,null],[13,"GIT_STATUS_SHOW_INDEX_ONLY","","",48,null],[13,"GIT_STATUS_SHOW_WORKDIR_ONLY","","",48,null],[4,"git_delta_t","","",null,null],[13,"GIT_DELTA_UNMODIFIED","","",49,null],[13,"GIT_DELTA_ADDED","","",49,null],[13,"GIT_DELTA_DELETED","","",49,null],[13,"GIT_DELTA_MODIFIED","","",49,null],[13,"GIT_DELTA_RENAMED","","",49,null],[13,"GIT_DELTA_COPIED","","",49,null],[13,"GIT_DELTA_IGNORED","","",49,null],[13,"GIT_DELTA_UNTRACKED","","",49,null],[13,"GIT_DELTA_TYPECHANGE","","",49,null],[13,"GIT_DELTA_UNREADABLE","","",49,null],[4,"git_checkout_strategy_t","","",null,null],[13,"GIT_CHECKOUT_NONE","","",50,null],[13,"GIT_CHECKOUT_SAFE","","",50,null],[13,"GIT_CHECKOUT_FORCE","","",50,null],[13,"GIT_CHECKOUT_ALLOW_CONFLICTS","","",50,null],[13,"GIT_CHECKOUT_REMOVE_UNTRACKED","","",50,null],[13,"GIT_CHECKOUT_REMOVE_IGNORED","","",50,null],[13,"GIT_CHECKOUT_UPDATE_ONLY","","",50,null],[13,"GIT_CHECKOUT_DONT_UPDATE_INDEX","","",50,null],[13,"GIT_CHECKOUT_NO_REFRESH","","",50,null],[13,"GIT_CHECKOUT_SKIP_UNMERGED","","",50,null],[13,"GIT_CHECKOUT_USE_OURS","","",50,null],[13,"GIT_CHECKOUT_USE_THEIRS","","",50,null],[13,"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH","","",50,null],[13,"GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES","","",50,null],[13,"GIT_CHECKOUT_DONT_OVERWRITE_IGNORED","","",50,null],[13,"GIT_CHECKOUT_CONFLICT_STYLE_MERGE","","",50,null],[13,"GIT_CHECKOUT_CONFLICT_STYLE_DIFF3","","",50,null],[13,"GIT_CHECKOUT_UPDATE_SUBMODULES","","",50,null],[13,"GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED","","",50,null],[4,"git_reset_t","","",null,null],[13,"GIT_RESET_SOFT","","",51,null],[13,"GIT_RESET_MIXED","","",51,null],[13,"GIT_RESET_HARD","","",51,null],[4,"git_otype","","",null,null],[13,"GIT_OBJ_ANY","","",52,null],[13,"GIT_OBJ_BAD","","",52,null],[13,"GIT_OBJ__EXT1","","",52,null],[13,"GIT_OBJ_COMMIT","","",52,null],[13,"GIT_OBJ_TREE","","",52,null],[13,"GIT_OBJ_BLOB","","",52,null],[13,"GIT_OBJ_TAG","","",52,null],[13,"GIT_OBJ__EXT2","","",52,null],[13,"GIT_OBJ_OFS_DELTA","","",52,null],[13,"GIT_OBJ_REF_DELTA","","",52,null],[4,"git_ref_t","","",null,null],[13,"GIT_REF_INVALID","","",53,null],[13,"GIT_REF_OID","","",53,null],[13,"GIT_REF_SYMBOLIC","","",53,null],[13,"GIT_REF_LISTALL","","",53,null],[4,"git_filemode_t","","",null,null],[13,"GIT_FILEMODE_UNREADABLE","","",54,null],[13,"GIT_FILEMODE_TREE","","",54,null],[13,"GIT_FILEMODE_BLOB","","",54,null],[13,"GIT_FILEMODE_BLOB_EXECUTABLE","","",54,null],[13,"GIT_FILEMODE_LINK","","",54,null],[13,"GIT_FILEMODE_COMMIT","","",54,null],[4,"git_treewalk_mode","","",null,null],[13,"GIT_TREEWALK_PRE","","",55,null],[13,"GIT_TREEWALK_POST","","",55,null],[4,"git_branch_t","","",null,null],[13,"GIT_BRANCH_LOCAL","","",56,null],[13,"GIT_BRANCH_REMOTE","","",56,null],[13,"GIT_BRANCH_ALL","","",56,null],[4,"git_config_level_t","","",null,null],[13,"GIT_CONFIG_LEVEL_SYSTEM","","",57,null],[13,"GIT_CONFIG_LEVEL_XDG","","",57,null],[13,"GIT_CONFIG_LEVEL_GLOBAL","","",57,null],[13,"GIT_CONFIG_LEVEL_LOCAL","","",57,null],[13,"GIT_CONFIG_LEVEL_APP","","",57,null],[13,"GIT_CONFIG_HIGHEST_LEVEL","","",57,null],[4,"git_submodule_update_t","","",null,null],[13,"GIT_SUBMODULE_UPDATE_RESET","","",58,null],[13,"GIT_SUBMODULE_UPDATE_CHECKOUT","","",58,null],[13,"GIT_SUBMODULE_UPDATE_REBASE","","",58,null],[13,"GIT_SUBMODULE_UPDATE_MERGE","","",58,null],[13,"GIT_SUBMODULE_UPDATE_NONE","","",58,null],[13,"GIT_SUBMODULE_UPDATE_DEFAULT","","",58,null],[4,"git_submodule_ignore_t","","",null,null],[13,"GIT_SUBMODULE_IGNORE_RESET","","",59,null],[13,"GIT_SUBMODULE_IGNORE_NONE","","",59,null],[13,"GIT_SUBMODULE_IGNORE_UNTRACKED","","",59,null],[13,"GIT_SUBMODULE_IGNORE_DIRTY","","",59,null],[13,"GIT_SUBMODULE_IGNORE_ALL","","",59,null],[13,"GIT_SUBMODULE_IGNORE_DEFAULT","","",59,null],[4,"git_credtype_t","","",null,null],[13,"GIT_CREDTYPE_USERPASS_PLAINTEXT","","",60,null],[13,"GIT_CREDTYPE_SSH_KEY","","",60,null],[13,"GIT_CREDTYPE_SSH_CUSTOM","","",60,null],[13,"GIT_CREDTYPE_DEFAULT","","",60,null],[13,"GIT_CREDTYPE_SSH_INTERACTIVE","","",60,null],[13,"GIT_CREDTYPE_USERNAME","","",60,null],[4,"LIBSSH2_SESSION","","",null,null],[4,"LIBSSH2_USERAUTH_KBDINT_PROMPT","","",null,null],[4,"LIBSSH2_USERAUTH_KBDINT_RESPONSE","","",null,null],[4,"git_index_add_option_t","","",null,null],[13,"GIT_INDEX_ADD_DEFAULT","","",61,null],[13,"GIT_INDEX_ADD_FORCE","","",61,null],[13,"GIT_INDEX_ADD_DISABLE_PATHSPEC_MATCH","","",61,null],[13,"GIT_INDEX_ADD_CHECK_PATHSPEC","","",61,null],[4,"git_repository_init_flag_t","","",null,null],[13,"GIT_REPOSITORY_INIT_BARE","","",62,null],[13,"GIT_REPOSITORY_INIT_NO_REINIT","","",62,null],[13,"GIT_REPOSITORY_INIT_NO_DOTGIT_DIR","","",62,null],[13,"GIT_REPOSITORY_INIT_MKDIR","","",62,null],[13,"GIT_REPOSITORY_INIT_MKPATH","","",62,null],[13,"GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE","","",62,null],[4,"git_repository_init_mode_t","","",null,null],[13,"GIT_REPOSITORY_INIT_SHARED_UMASK","","",63,null],[13,"GIT_REPOSITORY_INIT_SHARED_GROUP","","",63,null],[13,"GIT_REPOSITORY_INIT_SHARED_ALL","","",63,null],[4,"git_sort","","",null,null],[13,"GIT_SORT_NONE","","",64,null],[13,"GIT_SORT_TOPOLOGICAL","","",64,null],[13,"GIT_SORT_TIME","","",64,null],[13,"GIT_SORT_REVERSE","","",64,null],[4,"git_diff_format_t","","",null,null],[13,"GIT_DIFF_FORMAT_PATCH","","",65,null],[13,"GIT_DIFF_FORMAT_PATCH_HEADER","","",65,null],[13,"GIT_DIFF_FORMAT_RAW","","",65,null],[13,"GIT_DIFF_FORMAT_NAME_ONLY","","",65,null],[13,"GIT_DIFF_FORMAT_NAME_STATUS","","",65,null],[4,"git_diff_stats_format_t","","",null,null],[13,"GIT_DIFF_STATS_NONE","","",66,null],[13,"GIT_DIFF_STATS_FULL","","",66,null],[13,"GIT_DIFF_STATS_SHORT","","",66,null],[13,"GIT_DIFF_STATS_NUMBER","","",66,null],[13,"GIT_DIFF_STATS_INCLUDE_SUMMARY","","",66,null],[4,"git_smart_service_t","","",null,null],[13,"GIT_SERVICE_UPLOADPACK_LS","","",67,null],[13,"GIT_SERVICE_UPLOADPACK","","",67,null],[13,"GIT_SERVICE_RECEIVEPACK_LS","","",67,null],[13,"GIT_SERVICE_RECEIVEPACK","","",67,null],[5,"openssl_init","","Initialize openssl for the libgit2 library",null,{"inputs":[],"output":null}],[5,"issue_14344_workaround","","",null,{"inputs":[],"output":null}],[5,"git_libgit2_init","","",null,null],[5,"git_libgit2_shutdown","","",null,null],[5,"git_repository_free","","",null,null],[5,"git_repository_open","","",null,null],[5,"git_repository_init","","",null,null],[5,"git_repository_init_ext","","",null,null],[5,"git_repository_init_init_options","","",null,null],[5,"git_repository_get_namespace","","",null,null],[5,"git_repository_head","","",null,null],[5,"git_repository_set_head","","",null,null],[5,"git_repository_set_head_detached","","",null,null],[5,"git_repository_is_bare","","",null,null],[5,"git_repository_is_empty","","",null,null],[5,"git_repository_is_shallow","","",null,null],[5,"git_repository_path","","",null,null],[5,"git_repository_state","","",null,null],[5,"git_repository_workdir","","",null,null],[5,"git_repository_index","","",null,null],[5,"git_repository_config","","",null,null],[5,"git_repository_config_snapshot","","",null,null],[5,"git_repository_discover","","",null,null],[5,"git_revparse","","",null,null],[5,"git_revparse_single","","",null,null],[5,"git_revparse_ext","","",null,null],[5,"git_object_dup","","",null,null],[5,"git_object_id","","",null,null],[5,"git_object_free","","",null,null],[5,"git_object_lookup","","",null,null],[5,"git_object_type","","",null,null],[5,"git_object_peel","","",null,null],[5,"git_object_short_id","","",null,null],[5,"git_object_type2string","","",null,null],[5,"git_object_string2type","","",null,null],[5,"git_object_typeisloose","","",null,null],[5,"git_oid_fromraw","","",null,null],[5,"git_oid_fromstrn","","",null,null],[5,"git_oid_tostr","","",null,null],[5,"git_oid_cmp","","",null,null],[5,"git_oid_equal","","",null,null],[5,"git_oid_streq","","",null,null],[5,"git_oid_iszero","","",null,null],[5,"giterr_last","","",null,null],[5,"giterr_clear","","",null,null],[5,"giterr_detach","","",null,null],[5,"giterr_set_str","","",null,null],[5,"git_remote_create","","",null,null],[5,"git_remote_lookup","","",null,null],[5,"git_remote_create_anonymous","","",null,null],[5,"git_remote_delete","","",null,null],[5,"git_remote_free","","",null,null],[5,"git_remote_name","","",null,null],[5,"git_remote_pushurl","","",null,null],[5,"git_remote_refspec_count","","",null,null],[5,"git_remote_url","","",null,null],[5,"git_remote_connect","","",null,null],[5,"git_remote_connected","","",null,null],[5,"git_remote_disconnect","","",null,null],[5,"git_remote_save","","",null,null],[5,"git_remote_add_fetch","","",null,null],[5,"git_remote_add_push","","",null,null],[5,"git_remote_clear_refspecs","","",null,null],[5,"git_remote_download","","",null,null],[5,"git_remote_stop","","",null,null],[5,"git_remote_dup","","",null,null],[5,"git_remote_get_fetch_refspecs","","",null,null],[5,"git_remote_get_refspec","","",null,null],[5,"git_remote_is_valid_name","","",null,null],[5,"git_remote_list","","",null,null],[5,"git_remote_rename","","",null,null],[5,"git_remote_fetch","","",null,null],[5,"git_remote_update_tips","","",null,null],[5,"git_remote_update_fetchhead","","",null,null],[5,"git_remote_set_url","","",null,null],[5,"git_remote_set_pushurl","","",null,null],[5,"git_remote_set_update_fetchhead","","",null,null],[5,"git_remote_set_fetch_refspecs","","",null,null],[5,"git_remote_set_push_refspecs","","",null,null],[5,"git_remote_set_callbacks","","",null,null],[5,"git_remote_init_callbacks","","",null,null],[5,"git_remote_stats","","",null,null],[5,"git_remote_ls","","",null,null],[5,"git_refspec_direction","","",null,null],[5,"git_refspec_dst","","",null,null],[5,"git_refspec_dst_matches","","",null,null],[5,"git_refspec_src","","",null,null],[5,"git_refspec_src_matches","","",null,null],[5,"git_refspec_force","","",null,null],[5,"git_refspec_string","","",null,null],[5,"git_strarray_free","","",null,null],[5,"git_signature_default","","",null,null],[5,"git_signature_free","","",null,null],[5,"git_signature_new","","",null,null],[5,"git_signature_now","","",null,null],[5,"git_signature_dup","","",null,null],[5,"git_status_list_new","","",null,null],[5,"git_status_list_entrycount","","",null,null],[5,"git_status_byindex","","",null,null],[5,"git_status_list_free","","",null,null],[5,"git_status_init_options","","",null,null],[5,"git_status_file","","",null,null],[5,"git_status_should_ignore","","",null,null],[5,"git_clone","","",null,null],[5,"git_clone_init_options","","",null,null],[5,"git_reset","","",null,null],[5,"git_reset_default","","",null,null],[5,"git_reference_cmp","","",null,null],[5,"git_reference_delete","","",null,null],[5,"git_reference_free","","",null,null],[5,"git_reference_is_branch","","",null,null],[5,"git_reference_is_note","","",null,null],[5,"git_reference_is_remote","","",null,null],[5,"git_reference_is_tag","","",null,null],[5,"git_reference_is_valid_name","","",null,null],[5,"git_reference_lookup","","",null,null],[5,"git_reference_name","","",null,null],[5,"git_reference_name_to_id","","",null,null],[5,"git_reference_peel","","",null,null],[5,"git_reference_rename","","",null,null],[5,"git_reference_resolve","","",null,null],[5,"git_reference_shorthand","","",null,null],[5,"git_reference_symbolic_target","","",null,null],[5,"git_reference_target","","",null,null],[5,"git_reference_target_peel","","",null,null],[5,"git_reference_type","","",null,null],[5,"git_reference_iterator_new","","",null,null],[5,"git_reference_iterator_glob_new","","",null,null],[5,"git_reference_iterator_free","","",null,null],[5,"git_reference_next","","",null,null],[5,"git_reference_next_name","","",null,null],[5,"git_reference_create","","",null,null],[5,"git_reference_symbolic_create","","",null,null],[5,"git_submodule_add_finalize","","",null,null],[5,"git_submodule_add_setup","","",null,null],[5,"git_submodule_add_to_index","","",null,null],[5,"git_submodule_branch","","",null,null],[5,"git_submodule_foreach","","",null,null],[5,"git_submodule_free","","",null,null],[5,"git_submodule_head_id","","",null,null],[5,"git_submodule_index_id","","",null,null],[5,"git_submodule_init","","",null,null],[5,"git_submodule_location","","",null,null],[5,"git_submodule_lookup","","",null,null],[5,"git_submodule_name","","",null,null],[5,"git_submodule_open","","",null,null],[5,"git_submodule_path","","",null,null],[5,"git_submodule_reload","","",null,null],[5,"git_submodule_reload_all","","",null,null],[5,"git_submodule_save","","",null,null],[5,"git_submodule_set_ignore","","",null,null],[5,"git_submodule_set_update","","",null,null],[5,"git_submodule_set_url","","",null,null],[5,"git_submodule_sync","","",null,null],[5,"git_submodule_update_strategy","","",null,null],[5,"git_submodule_url","","",null,null],[5,"git_submodule_wd_id","","",null,null],[5,"git_submodule_status","","",null,null],[5,"git_blob_free","","",null,null],[5,"git_blob_id","","",null,null],[5,"git_blob_is_binary","","",null,null],[5,"git_blob_lookup","","",null,null],[5,"git_blob_lookup_prefix","","",null,null],[5,"git_blob_rawcontent","","",null,null],[5,"git_blob_rawsize","","",null,null],[5,"git_blob_create_frombuffer","","",null,null],[5,"git_blob_create_fromdisk","","",null,null],[5,"git_blob_create_fromworkdir","","",null,null],[5,"git_tree_entry_byid","","",null,null],[5,"git_tree_entry_byindex","","",null,null],[5,"git_tree_entry_byname","","",null,null],[5,"git_tree_entry_bypath","","",null,null],[5,"git_tree_entry_cmp","","",null,null],[5,"git_tree_entry_dup","","",null,null],[5,"git_tree_entry_filemode","","",null,null],[5,"git_tree_entry_filemode_raw","","",null,null],[5,"git_tree_entry_free","","",null,null],[5,"git_tree_entry_id","","",null,null],[5,"git_tree_entry_name","","",null,null],[5,"git_tree_entry_to_object","","",null,null],[5,"git_tree_entry_type","","",null,null],[5,"git_tree_entrycount","","",null,null],[5,"git_tree_free","","",null,null],[5,"git_tree_id","","",null,null],[5,"git_tree_lookup","","",null,null],[5,"git_tree_walk","","",null,null],[5,"git_buf_free","","",null,null],[5,"git_buf_grow","","",null,null],[5,"git_buf_set","","",null,null],[5,"git_commit_author","","",null,null],[5,"git_commit_committer","","",null,null],[5,"git_commit_free","","",null,null],[5,"git_commit_id","","",null,null],[5,"git_commit_lookup","","",null,null],[5,"git_commit_message","","",null,null],[5,"git_commit_message_encoding","","",null,null],[5,"git_commit_message_raw","","",null,null],[5,"git_commit_nth_gen_ancestor","","",null,null],[5,"git_commit_parent","","",null,null],[5,"git_commit_parent_id","","",null,null],[5,"git_commit_parentcount","","",null,null],[5,"git_commit_raw_header","","",null,null],[5,"git_commit_summary","","",null,null],[5,"git_commit_time","","",null,null],[5,"git_commit_time_offset","","",null,null],[5,"git_commit_tree","","",null,null],[5,"git_commit_tree_id","","",null,null],[5,"git_commit_amend","","",null,null],[5,"git_commit_create","","",null,null],[5,"git_branch_create","","",null,null],[5,"git_branch_delete","","",null,null],[5,"git_branch_is_head","","",null,null],[5,"git_branch_iterator_free","","",null,null],[5,"git_branch_iterator_new","","",null,null],[5,"git_branch_lookup","","",null,null],[5,"git_branch_move","","",null,null],[5,"git_branch_name","","",null,null],[5,"git_branch_next","","",null,null],[5,"git_branch_set_upstream","","",null,null],[5,"git_branch_upstream","","",null,null],[5,"git_index_add","","",null,null],[5,"git_index_add_all","","",null,null],[5,"git_index_add_bypath","","",null,null],[5,"git_index_clear","","",null,null],[5,"git_index_entry_stage","","",null,null],[5,"git_index_entrycount","","",null,null],[5,"git_index_find","","",null,null],[5,"git_index_free","","",null,null],[5,"git_index_get_byindex","","",null,null],[5,"git_index_get_bypath","","",null,null],[5,"git_index_new","","",null,null],[5,"git_index_open","","",null,null],[5,"git_index_path","","",null,null],[5,"git_index_read","","",null,null],[5,"git_index_read_tree","","",null,null],[5,"git_index_remove","","",null,null],[5,"git_index_remove_all","","",null,null],[5,"git_index_remove_bypath","","",null,null],[5,"git_index_remove_directory","","",null,null],[5,"git_index_update_all","","",null,null],[5,"git_index_write","","",null,null],[5,"git_index_write_tree","","",null,null],[5,"git_index_write_tree_to","","",null,null],[5,"git_config_add_file_ondisk","","",null,null],[5,"git_config_delete_entry","","",null,null],[5,"git_config_delete_multivar","","",null,null],[5,"git_config_find_global","","",null,null],[5,"git_config_find_system","","",null,null],[5,"git_config_find_xdg","","",null,null],[5,"git_config_free","","",null,null],[5,"git_config_get_bool","","",null,null],[5,"git_config_get_entry","","",null,null],[5,"git_config_get_int32","","",null,null],[5,"git_config_get_int64","","",null,null],[5,"git_config_get_string","","",null,null],[5,"git_config_get_string_buf","","",null,null],[5,"git_config_get_path","","",null,null],[5,"git_config_iterator_free","","",null,null],[5,"git_config_iterator_glob_new","","",null,null],[5,"git_config_iterator_new","","",null,null],[5,"git_config_new","","",null,null],[5,"git_config_next","","",null,null],[5,"git_config_open_default","","",null,null],[5,"git_config_open_global","","",null,null],[5,"git_config_open_level","","",null,null],[5,"git_config_open_ondisk","","",null,null],[5,"git_config_parse_bool","","",null,null],[5,"git_config_parse_int32","","",null,null],[5,"git_config_parse_int64","","",null,null],[5,"git_config_set_bool","","",null,null],[5,"git_config_set_int32","","",null,null],[5,"git_config_set_int64","","",null,null],[5,"git_config_set_string","","",null,null],[5,"git_config_snapshot","","",null,null],[5,"git_config_entry_free","","",null,null],[5,"git_cred_default_new","","",null,null],[5,"git_cred_has_username","","",null,null],[5,"git_cred_ssh_custom_new","","",null,null],[5,"git_cred_ssh_interactive_new","","",null,null],[5,"git_cred_ssh_key_from_agent","","",null,null],[5,"git_cred_ssh_key_new","","",null,null],[5,"git_cred_userpass","","",null,null],[5,"git_cred_userpass_plaintext_new","","",null,null],[5,"git_cred_username_new","","",null,null],[5,"git_push_add_refspec","","",null,null],[5,"git_push_finish","","",null,null],[5,"git_push_free","","",null,null],[5,"git_push_init_options","","",null,null],[5,"git_push_new","","",null,null],[5,"git_push_set_options","","",null,null],[5,"git_push_update_tips","","",null,null],[5,"git_push_status_foreach","","",null,null],[5,"git_tag_annotation_create","","",null,null],[5,"git_tag_create","","",null,null],[5,"git_tag_create_frombuffer","","",null,null],[5,"git_tag_create_lightweight","","",null,null],[5,"git_tag_delete","","",null,null],[5,"git_tag_foreach","","",null,null],[5,"git_tag_free","","",null,null],[5,"git_tag_id","","",null,null],[5,"git_tag_list","","",null,null],[5,"git_tag_list_match","","",null,null],[5,"git_tag_lookup","","",null,null],[5,"git_tag_lookup_prefix","","",null,null],[5,"git_tag_message","","",null,null],[5,"git_tag_name","","",null,null],[5,"git_tag_peel","","",null,null],[5,"git_tag_tagger","","",null,null],[5,"git_tag_target","","",null,null],[5,"git_tag_target_id","","",null,null],[5,"git_tag_target_type","","",null,null],[5,"git_checkout_head","","",null,null],[5,"git_checkout_index","","",null,null],[5,"git_checkout_tree","","",null,null],[5,"git_checkout_init_options","","",null,null],[5,"git_note_author","","",null,null],[5,"git_note_committer","","",null,null],[5,"git_note_create","","",null,null],[5,"git_note_default_ref","","",null,null],[5,"git_note_free","","",null,null],[5,"git_note_id","","",null,null],[5,"git_note_iterator_free","","",null,null],[5,"git_note_iterator_new","","",null,null],[5,"git_note_message","","",null,null],[5,"git_note_next","","",null,null],[5,"git_note_read","","",null,null],[5,"git_note_remove","","",null,null],[5,"git_blame_file","","",null,null],[5,"git_blame_free","","",null,null],[5,"git_blame_init_options","","",null,null],[5,"git_blame_get_hunk_count","","",null,null],[5,"git_blame_get_hunk_byline","","",null,null],[5,"git_blame_get_hunk_byindex","","",null,null],[5,"git_revwalk_new","","",null,null],[5,"git_revwalk_free","","",null,null],[5,"git_revwalk_reset","","",null,null],[5,"git_revwalk_sorting","","",null,null],[5,"git_revwalk_push_head","","",null,null],[5,"git_revwalk_push","","",null,null],[5,"git_revwalk_push_ref","","",null,null],[5,"git_revwalk_push_glob","","",null,null],[5,"git_revwalk_push_range","","",null,null],[5,"git_revwalk_simplify_first_parent","","",null,null],[5,"git_revwalk_hide_head","","",null,null],[5,"git_revwalk_hide","","",null,null],[5,"git_revwalk_hide_ref","","",null,null],[5,"git_revwalk_hide_glob","","",null,null],[5,"git_revwalk_next","","",null,null],[5,"git_merge_base","","",null,null],[5,"git_pathspec_free","","",null,null],[5,"git_pathspec_match_diff","","",null,null],[5,"git_pathspec_match_index","","",null,null],[5,"git_pathspec_match_list_diff_entry","","",null,null],[5,"git_pathspec_match_list_entry","","",null,null],[5,"git_pathspec_match_list_entrycount","","",null,null],[5,"git_pathspec_match_list_failed_entry","","",null,null],[5,"git_pathspec_match_list_failed_entrycount","","",null,null],[5,"git_pathspec_match_list_free","","",null,null],[5,"git_pathspec_match_tree","","",null,null],[5,"git_pathspec_match_workdir","","",null,null],[5,"git_pathspec_matches_path","","",null,null],[5,"git_pathspec_new","","",null,null],[5,"git_diff_blob_to_buffer","","",null,null],[5,"git_diff_blobs","","",null,null],[5,"git_diff_buffers","","",null,null],[5,"git_diff_find_similar","","",null,null],[5,"git_diff_find_init_options","","",null,null],[5,"git_diff_foreach","","",null,null],[5,"git_diff_free","","",null,null],[5,"git_diff_get_delta","","",null,null],[5,"git_diff_get_stats","","",null,null],[5,"git_diff_index_to_workdir","","",null,null],[5,"git_diff_init_options","","",null,null],[5,"git_diff_is_sorted_icase","","",null,null],[5,"git_diff_merge","","",null,null],[5,"git_diff_num_deltas","","",null,null],[5,"git_diff_num_deltas_of_type","","",null,null],[5,"git_diff_print","","",null,null],[5,"git_diff_stats_deletions","","",null,null],[5,"git_diff_stats_files_changed","","",null,null],[5,"git_diff_stats_free","","",null,null],[5,"git_diff_stats_insertions","","",null,null],[5,"git_diff_stats_to_buf","","",null,null],[5,"git_diff_status_char","","",null,null],[5,"git_diff_tree_to_index","","",null,null],[5,"git_diff_tree_to_tree","","",null,null],[5,"git_diff_tree_to_workdir","","",null,null],[5,"git_diff_tree_to_workdir_with_index","","",null,null],[5,"git_graph_ahead_behind","","",null,null],[5,"git_graph_descendant_of","","",null,null],[5,"git_reflog_append","","",null,null],[5,"git_reflog_delete","","",null,null],[5,"git_reflog_drop","","",null,null],[5,"git_reflog_entry_byindex","","",null,null],[5,"git_reflog_entry_committer","","",null,null],[5,"git_reflog_entry_id_new","","",null,null],[5,"git_reflog_entry_id_old","","",null,null],[5,"git_reflog_entry_message","","",null,null],[5,"git_reflog_entrycount","","",null,null],[5,"git_reflog_free","","",null,null],[5,"git_reflog_read","","",null,null],[5,"git_reflog_rename","","",null,null],[5,"git_reflog_write","","",null,null],[5,"git_transport_register","","",null,null],[5,"git_transport_unregister","","",null,null],[5,"git_transport_smart","","",null,null],[6,"git_off_t","","",null,null],[6,"git_time_t","","",null,null],[6,"git_revparse_mode_t","","",null,null],[6,"git_checkout_notify_cb","","",null,null],[6,"git_checkout_progress_cb","","",null,null],[6,"git_checkout_perfdata_cb","","",null,null],[6,"git_transport_message_cb","","",null,null],[6,"git_cred_acquire_cb","","",null,null],[6,"git_transfer_progress_cb","","",null,null],[6,"git_packbuilder_progress","","",null,null],[6,"git_push_transfer_progress","","",null,null],[6,"git_transport_certificate_check_cb","","",null,null],[6,"git_repository_create_cb","","",null,null],[6,"git_remote_create_cb","","",null,null],[6,"git_treewalk_cb","","",null,null],[6,"git_index_matched_path_cb","","",null,null],[6,"git_cred_ssh_interactive_callback","","",null,null],[6,"git_cred_sign_callback","","",null,null],[6,"git_tag_foreach_cb","","",null,null],[6,"git_submodule_status_t","","",null,null],[6,"git_pathspec_flag_t","","",null,null],[6,"git_diff_file_cb","","",null,null],[6,"git_diff_hunk_cb","","",null,null],[6,"git_diff_line_cb","","",null,null],[6,"git_diff_line_t","","",null,null],[6,"git_diff_notify_cb","","",null,null],[6,"git_diff_options_t","","",null,null],[6,"git_transport_cb","","",null,null],[6,"git_smart_subtransport_cb","","",null,null],[17,"GIT_OID_RAWSZ","","",null,null],[17,"GIT_OID_HEXSZ","","",null,null],[17,"GIT_CLONE_OPTIONS_VERSION","","",null,null],[17,"GIT_CHECKOUT_OPTIONS_VERSION","","",null,null],[17,"GIT_REMOTE_CALLBACKS_VERSION","","",null,null],[17,"GIT_STATUS_OPTIONS_VERSION","","",null,null],[17,"GIT_BLAME_OPTIONS_VERSION","","",null,null],[17,"GIT_REVPARSE_SINGLE","","",null,null],[17,"GIT_REVPARSE_RANGE","","",null,null],[17,"GIT_REVPARSE_MERGE_BASE","","",null,null],[17,"GIT_BLAME_NORMAL","","",null,null],[17,"GIT_BLAME_TRACK_COPIES_SAME_FILE","","",null,null],[17,"GIT_BLAME_TRACK_COPIES_SAME_COMMIT_MOVES","","",null,null],[17,"GIT_BLAME_TRACK_COPIES_SAME_COMMIT_COPIES","","",null,null],[17,"GIT_BLAME_TRACK_COPIES_ANY_COMMIT_COPIES","","",null,null],[17,"GIT_BLAME_FIRST_PARENT","","",null,null],[17,"GIT_REPOSITORY_INIT_OPTIONS_VERSION","","",null,null],[17,"GIT_SUBMODULE_STATUS_IN_HEAD","","",null,null],[17,"GIT_SUBMODULE_STATUS_IN_INDEX","","",null,null],[17,"GIT_SUBMODULE_STATUS_IN_CONFIG","","",null,null],[17,"GIT_SUBMODULE_STATUS_IN_WD","","",null,null],[17,"GIT_SUBMODULE_STATUS_INDEX_ADDED","","",null,null],[17,"GIT_SUBMODULE_STATUS_INDEX_DELETED","","",null,null],[17,"GIT_SUBMODULE_STATUS_INDEX_MODIFIED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_UNINITIALIZED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_ADDED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_DELETED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_MODIFIED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_WD_MODIFIED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_UNTRACKED","","",null,null],[17,"GIT_PATHSPEC_DEFAULT","","",null,null],[17,"GIT_PATHSPEC_IGNORE_CASE","","",null,null],[17,"GIT_PATHSPEC_USE_CASE","","",null,null],[17,"GIT_PATHSPEC_NO_GLOB","","",null,null],[17,"GIT_PATHSPEC_NO_MATCH_ERROR","","",null,null],[17,"GIT_PATHSPEC_FIND_FAILURES","","",null,null],[17,"GIT_PATHSPEC_FAILURES_ONLY","","",null,null],[17,"GIT_DIFF_LINE_CONTEXT","","",null,null],[17,"GIT_DIFF_LINE_ADDITION","","",null,null],[17,"GIT_DIFF_LINE_DELETION","","",null,null],[17,"GIT_DIFF_LINE_CONTEXT_EOFNL","","",null,null],[17,"GIT_DIFF_LINE_ADD_EOFNL","","",null,null],[17,"GIT_DIFF_LINE_DEL_EOFNL","","",null,null],[17,"GIT_DIFF_LINE_FILE_HDR","","",null,null],[17,"GIT_DIFF_LINE_HUNK_HDR","","",null,null],[17,"GIT_DIFF_LINE_LINE_BINARY","","",null,null],[17,"GIT_DIFF_NORMAL","","",null,null],[17,"GIT_DIFF_REVERSE","","",null,null],[17,"GIT_DIFF_INCLUDE_IGNORED","","",null,null],[17,"GIT_DIFF_RECURSE_IGNORED_DIRS","","",null,null],[17,"GIT_DIFF_INCLUDE_UNTRACKED","","",null,null],[17,"GIT_DIFF_RECURSE_UNTRACKED_DIRS","","",null,null],[17,"GIT_DIFF_INCLUDE_UNMODIFIED","","",null,null],[17,"GIT_DIFF_INCLUDE_TYPECHANGE","","",null,null],[17,"GIT_DIFF_INCLUDE_TYPECHANGE_TREES","","",null,null],[17,"GIT_DIFF_IGNORE_FILEMODE","","",null,null],[17,"GIT_DIFF_IGNORE_SUBMODULES","","",null,null],[17,"GIT_DIFF_IGNORE_CASE","","",null,null],[17,"GIT_DIFF_DISABLE_PATHSPEC_MATCH","","",null,null],[17,"GIT_DIFF_SKIP_BINARY_CHECK","","",null,null],[17,"GIT_DIFF_ENABLE_FAST_UNTRACKED_DIRS","","",null,null],[17,"GIT_DIFF_UPDATE_INDEX","","",null,null],[17,"GIT_DIFF_INCLUDE_UNREADABLE","","",null,null],[17,"GIT_DIFF_INCLUDE_UNREADABLE_AS_UNTRACKED","","",null,null],[17,"GIT_DIFF_FORCE_TEXT","","",null,null],[17,"GIT_DIFF_FORCE_BINARY","","",null,null],[17,"GIT_DIFF_IGNORE_WHITESPACE","","",null,null],[17,"GIT_DIFF_IGNORE_WHITESPACE_CHANGE","","",null,null],[17,"GIT_DIFF_IGNORE_WHITESPACE_EOL","","",null,null],[17,"GIT_DIFF_SHOW_UNTRACKED_CONTENT","","",null,null],[17,"GIT_DIFF_SHOW_UNMODIFIED","","",null,null],[17,"GIT_DIFF_PATIENCE","","",null,null],[17,"GIT_DIFF_MINIMAL","","",null,null],[17,"GIT_DIFF_SHOW_BINARY","","",null,null],[17,"GIT_DIFF_FIND_OPTIONS_VERSION","","",null,null],[17,"GIT_DIFF_FIND_BY_CONFIG","","",null,null],[17,"GIT_DIFF_FIND_RENAMES","","",null,null],[17,"GIT_DIFF_FIND_RENAMES_FROM_REWRITES","","",null,null],[17,"GIT_DIFF_FIND_COPIES","","",null,null],[17,"GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED","","",null,null],[17,"GIT_DIFF_FIND_REWRITES","","",null,null],[17,"GIT_DIFF_BREAK_REWRITES","","",null,null],[17,"GIT_DIFF_FIND_AND_BREAK_REWRITES","","",null,null],[17,"GIT_DIFF_FIND_FOR_UNTRACKED","","",null,null],[17,"GIT_DIFF_FIND_ALL","","",null,null],[17,"GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE","","",null,null],[17,"GIT_DIFF_FIND_IGNORE_WHITESPACE","","",null,null],[17,"GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE","","",null,null],[17,"GIT_DIFF_FIND_EXACT_MATCH_ONLY","","",null,null],[17,"GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY","","",null,null],[17,"GIT_DIFF_FIND_REMOVE_UNMODIFIED","","",null,null],[11,"clone","","",2,{"inputs":[{"name":"git_oid"}],"output":{"name":"git_oid"}}],[11,"clone","","",3,{"inputs":[{"name":"git_strarray"}],"output":{"name":"git_strarray"}}],[11,"eq","","",5,{"inputs":[{"name":"git_time"},{"name":"git_time"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"git_time"},{"name":"git_time"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"git_time"}],"output":{"name":"git_time"}}],[11,"clone","","",37,{"inputs":[{"name":"git_error_code"}],"output":{"name":"git_error_code"}}],[11,"eq","","",37,{"inputs":[{"name":"git_error_code"},{"name":"git_error_code"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"git_error_code"},{"name":"git_error_code"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"git_error_t"}],"output":{"name":"git_error_t"}}],[11,"clone","","",39,{"inputs":[{"name":"git_repository_state_t"}],"output":{"name":"git_repository_state_t"}}],[11,"clone","","",40,{"inputs":[{"name":"git_direction"}],"output":{"name":"git_direction"}}],[11,"clone","","",41,{"inputs":[{"name":"git_clone_local_t"}],"output":{"name":"git_clone_local_t"}}],[11,"clone","","",42,{"inputs":[{"name":"git_remote_completion_type"}],"output":{"name":"git_remote_completion_type"}}],[11,"eq","","",43,{"inputs":[{"name":"git_cert_t"},{"name":"git_cert_t"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"git_cert_t"},{"name":"git_cert_t"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"git_cert_t"}],"output":{"name":"git_cert_t"}}],[11,"clone","","",44,{"inputs":[{"name":"git_cert_ssh_t"}],"output":{"name":"git_cert_ssh_t"}}],[11,"clone","","",13,{"inputs":[{"name":"git_transfer_progress"}],"output":{"name":"git_transfer_progress"}}],[11,"clone","","",45,{"inputs":[{"name":"git_checkout_notify_t"}],"output":{"name":"git_checkout_notify_t"}}],[11,"clone","","",46,{"inputs":[{"name":"git_status_t"}],"output":{"name":"git_status_t"}}],[11,"clone","","",47,{"inputs":[{"name":"git_status_opt_t"}],"output":{"name":"git_status_opt_t"}}],[11,"clone","","",48,{"inputs":[{"name":"git_status_show_t"}],"output":{"name":"git_status_show_t"}}],[11,"clone","","",49,{"inputs":[{"name":"git_delta_t"}],"output":{"name":"git_delta_t"}}],[11,"clone","","",50,{"inputs":[{"name":"git_checkout_strategy_t"}],"output":{"name":"git_checkout_strategy_t"}}],[11,"clone","","",51,{"inputs":[{"name":"git_reset_t"}],"output":{"name":"git_reset_t"}}],[11,"clone","","",52,{"inputs":[{"name":"git_otype"}],"output":{"name":"git_otype"}}],[11,"clone","","",53,{"inputs":[{"name":"git_ref_t"}],"output":{"name":"git_ref_t"}}],[11,"clone","","",54,{"inputs":[{"name":"git_filemode_t"}],"output":{"name":"git_filemode_t"}}],[11,"clone","","",55,{"inputs":[{"name":"git_treewalk_mode"}],"output":{"name":"git_treewalk_mode"}}],[11,"clone","","",18,{"inputs":[{"name":"git_buf"}],"output":{"name":"git_buf"}}],[11,"clone","","",56,{"inputs":[{"name":"git_branch_t"}],"output":{"name":"git_branch_t"}}],[11,"clone","","",19,{"inputs":[{"name":"git_blame_options"}],"output":{"name":"git_blame_options"}}],[11,"clone","","",20,{"inputs":[{"name":"git_blame_hunk"}],"output":{"name":"git_blame_hunk"}}],[11,"clone","","",21,{"inputs":[{"name":"git_index_entry"}],"output":{"name":"git_index_entry"}}],[11,"eq","","",22,{"inputs":[{"name":"git_index_time"},{"name":"git_index_time"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"git_index_time"},{"name":"git_index_time"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"git_index_time"}],"output":{"name":"git_index_time"}}],[11,"clone","","",57,{"inputs":[{"name":"git_config_level_t"}],"output":{"name":"git_config_level_t"}}],[11,"clone","","",58,{"inputs":[{"name":"git_submodule_update_t"}],"output":{"name":"git_submodule_update_t"}}],[11,"clone","","",59,{"inputs":[{"name":"git_submodule_ignore_t"}],"output":{"name":"git_submodule_ignore_t"}}],[11,"clone","","",60,{"inputs":[{"name":"git_credtype_t"}],"output":{"name":"git_credtype_t"}}],[11,"clone","","",25,{"inputs":[{"name":"git_push_options"}],"output":{"name":"git_push_options"}}],[11,"clone","","",61,{"inputs":[{"name":"git_index_add_option_t"}],"output":{"name":"git_index_add_option_t"}}],[11,"clone","","",62,{"inputs":[{"name":"git_repository_init_flag_t"}],"output":{"name":"git_repository_init_flag_t"}}],[11,"clone","","",63,{"inputs":[{"name":"git_repository_init_mode_t"}],"output":{"name":"git_repository_init_mode_t"}}]],"paths":[[3,"git_revspec"],[3,"git_error"],[3,"git_oid"],[3,"git_strarray"],[3,"git_signature"],[3,"git_time"],[3,"git_clone_options"],[3,"git_checkout_options"],[3,"git_checkout_perfdata"],[3,"git_remote_callbacks"],[3,"git_cert"],[3,"git_cert_hostkey"],[3,"git_cert_x509"],[3,"git_transfer_progress"],[3,"git_diff_file"],[3,"git_status_options"],[3,"git_diff_delta"],[3,"git_status_entry"],[3,"git_buf"],[3,"git_blame_options"],[3,"git_blame_hunk"],[3,"git_index_entry"],[3,"git_index_time"],[3,"git_config_entry"],[3,"git_cred"],[3,"git_push_options"],[3,"git_repository_init_options"],[3,"git_remote_head"],[3,"git_diff_hunk"],[3,"git_diff_line"],[3,"git_diff_options"],[3,"git_diff_find_options"],[3,"git_diff_similarity_metric"],[3,"git_transport"],[3,"git_smart_subtransport_stream"],[3,"git_smart_subtransport"],[3,"git_smart_subtransport_definition"],[4,"git_error_code"],[4,"git_error_t"],[4,"git_repository_state_t"],[4,"git_direction"],[4,"git_clone_local_t"],[4,"git_remote_completion_type"],[4,"git_cert_t"],[4,"git_cert_ssh_t"],[4,"git_checkout_notify_t"],[4,"git_status_t"],[4,"git_status_opt_t"],[4,"git_status_show_t"],[4,"git_delta_t"],[4,"git_checkout_strategy_t"],[4,"git_reset_t"],[4,"git_otype"],[4,"git_ref_t"],[4,"git_filemode_t"],[4,"git_treewalk_mode"],[4,"git_branch_t"],[4,"git_config_level_t"],[4,"git_submodule_update_t"],[4,"git_submodule_ignore_t"],[4,"git_credtype_t"],[4,"git_index_add_option_t"],[4,"git_repository_init_flag_t"],[4,"git_repository_init_mode_t"],[4,"git_sort"],[4,"git_diff_format_t"],[4,"git_diff_stats_format_t"],[4,"git_smart_service_t"]]};
searchIndex['libssh2_sys'] = {"items":[[0,"","libssh2_sys","",null,null],[3,"libssh2_agent_publickey","","",null,null],[12,"magic","","",0,null],[12,"node","","",0,null],[12,"blob","","",0,null],[12,"blob_len","","",0,null],[12,"comment","","",0,null],[3,"libssh2_knownhost","","",null,null],[12,"magic","","",1,null],[12,"node","","",1,null],[12,"name","","",1,null],[12,"key","","",1,null],[12,"typemask","","",1,null],[3,"LIBSSH2_SFTP_ATTRIBUTES","","",null,null],[12,"flags","","",2,null],[12,"filesize","","",2,null],[12,"uid","","",2,null],[12,"gid","","",2,null],[12,"permissions","","",2,null],[12,"atime","","",2,null],[12,"mtime","","",2,null],[3,"LIBSSH2_SFTP_STATVFS","","",null,null],[12,"f_bsize","","",3,null],[12,"f_frsize","","",3,null],[12,"f_blocks","","",3,null],[12,"f_bfree","","",3,null],[12,"f_bavail","","",3,null],[12,"f_files","","",3,null],[12,"f_ffree","","",3,null],[12,"f_favail","","",3,null],[12,"f_fsid","","",3,null],[12,"f_flag","","",3,null],[12,"f_namemax","","",3,null],[4,"LIBSSH2_SESSION","","",null,null],[4,"LIBSSH2_AGENT","","",null,null],[4,"LIBSSH2_CHANNEL","","",null,null],[4,"LIBSSH2_LISTENER","","",null,null],[4,"LIBSSH2_KNOWNHOSTS","","",null,null],[4,"LIBSSH2_SFTP","","",null,null],[4,"LIBSSH2_SFTP_HANDLE","","",null,null],[5,"issue_14344_workaround","","",null,{"inputs":[],"output":null}],[5,"libssh2_init","","",null,null],[5,"libssh2_exit","","",null,null],[5,"libssh2_free","","",null,null],[5,"libssh2_hostkey_hash","","",null,null],[5,"libssh2_session_init_ex","","",null,null],[5,"libssh2_session_free","","",null,null],[5,"libssh2_session_banner_get","","",null,null],[5,"libssh2_session_banner_set","","",null,null],[5,"libssh2_session_disconnect_ex","","",null,null],[5,"libssh2_session_flag","","",null,null],[5,"libssh2_session_get_blocking","","",null,null],[5,"libssh2_session_get_timeout","","",null,null],[5,"libssh2_session_hostkey","","",null,null],[5,"libssh2_session_method_pref","","",null,null],[5,"libssh2_session_methods","","",null,null],[5,"libssh2_session_set_blocking","","",null,null],[5,"libssh2_session_set_timeout","","",null,null],[5,"libssh2_session_supported_algs","","",null,null],[5,"libssh2_session_last_error","","",null,null],[5,"libssh2_session_handshake","","",null,null],[5,"libssh2_keepalive_config","","",null,null],[5,"libssh2_keepalive_send","","",null,null],[5,"libssh2_agent_init","","",null,null],[5,"libssh2_agent_free","","",null,null],[5,"libssh2_agent_connect","","",null,null],[5,"libssh2_agent_disconnect","","",null,null],[5,"libssh2_agent_list_identities","","",null,null],[5,"libssh2_agent_get_identity","","",null,null],[5,"libssh2_agent_userauth","","",null,null],[5,"libssh2_channel_free","","",null,null],[5,"libssh2_channel_close","","",null,null],[5,"libssh2_channel_wait_closed","","",null,null],[5,"libssh2_channel_wait_eof","","",null,null],[5,"libssh2_channel_eof","","",null,null],[5,"libssh2_channel_process_startup","","",null,null],[5,"libssh2_channel_flush_ex","","",null,null],[5,"libssh2_channel_write_ex","","",null,null],[5,"libssh2_channel_get_exit_signal","","",null,null],[5,"libssh2_channel_get_exit_status","","",null,null],[5,"libssh2_channel_open_ex","","",null,null],[5,"libssh2_channel_read_ex","","",null,null],[5,"libssh2_channel_setenv_ex","","",null,null],[5,"libssh2_channel_send_eof","","",null,null],[5,"libssh2_channel_request_pty_ex","","",null,null],[5,"libssh2_channel_request_pty_size_ex","","",null,null],[5,"libssh2_channel_window_read_ex","","",null,null],[5,"libssh2_channel_window_write_ex","","",null,null],[5,"libssh2_channel_receive_window_adjust2","","",null,null],[5,"libssh2_channel_direct_tcpip_ex","","",null,null],[5,"libssh2_channel_forward_accept","","",null,null],[5,"libssh2_channel_forward_cancel","","",null,null],[5,"libssh2_channel_forward_listen_ex","","",null,null],[5,"libssh2_userauth_authenticated","","",null,null],[5,"libssh2_userauth_list","","",null,null],[5,"libssh2_userauth_hostbased_fromfile_ex","","",null,null],[5,"libssh2_userauth_publickey_fromfile_ex","","",null,null],[5,"libssh2_userauth_password_ex","","",null,null],[5,"libssh2_knownhost_free","","",null,null],[5,"libssh2_knownhost_addc","","",null,null],[5,"libssh2_knownhost_check","","",null,null],[5,"libssh2_knownhost_checkp","","",null,null],[5,"libssh2_knownhost_del","","",null,null],[5,"libssh2_knownhost_get","","",null,null],[5,"libssh2_knownhost_readfile","","",null,null],[5,"libssh2_knownhost_readline","","",null,null],[5,"libssh2_knownhost_writefile","","",null,null],[5,"libssh2_knownhost_writeline","","",null,null],[5,"libssh2_knownhost_init","","",null,null],[5,"libssh2_scp_recv","","",null,null],[5,"libssh2_scp_send64","","",null,null],[5,"libssh2_sftp_init","","",null,null],[5,"libssh2_sftp_shutdown","","",null,null],[5,"libssh2_sftp_last_error","","",null,null],[5,"libssh2_sftp_open_ex","","",null,null],[5,"libssh2_sftp_close_handle","","",null,null],[5,"libssh2_sftp_mkdir_ex","","",null,null],[5,"libssh2_sftp_fsync","","",null,null],[5,"libssh2_sftp_fstat_ex","","",null,null],[5,"libssh2_sftp_fstatvfs","","",null,null],[5,"libssh2_sftp_stat_ex","","",null,null],[5,"libssh2_sftp_read","","",null,null],[5,"libssh2_sftp_symlink_ex","","",null,null],[5,"libssh2_sftp_rename_ex","","",null,null],[5,"libssh2_sftp_rmdir_ex","","",null,null],[5,"libssh2_sftp_write","","",null,null],[5,"libssh2_sftp_tell64","","",null,null],[5,"libssh2_sftp_seek64","","",null,null],[5,"libssh2_sftp_readdir_ex","","",null,null],[5,"libssh2_sftp_unlink_ex","","",null,null],[6,"LIBSSH2_ALLOC_FUNC","","",null,null],[6,"LIBSSH2_FREE_FUNC","","",null,null],[6,"LIBSSH2_REALLOC_FUNC","","",null,null],[6,"LIBSSH2_PASSWD_CHANGEREQ_FUNC","","",null,null],[6,"libssh2_socket_t","","",null,null],[17,"SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT","","",null,null],[17,"SSH_DISCONNECT_PROTOCOL_ERROR","","",null,null],[17,"SSH_DISCONNECT_KEY_EXCHANGE_FAILED","","",null,null],[17,"SSH_DISCONNECT_RESERVED","","",null,null],[17,"SSH_DISCONNECT_MAC_ERROR","","",null,null],[17,"SSH_DISCONNECT_COMPRESSION_ERROR","","",null,null],[17,"SSH_DISCONNECT_SERVICE_NOT_AVAILABLE","","",null,null],[17,"SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED","","",null,null],[17,"SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE","","",null,null],[17,"SSH_DISCONNECT_CONNECTION_LOST","","",null,null],[17,"SSH_DISCONNECT_BY_APPLICATION","","",null,null],[17,"SSH_DISCONNECT_TOO_MANY_CONNECTIONS","","",null,null],[17,"SSH_DISCONNECT_AUTH_CANCELLED_BY_USER","","",null,null],[17,"SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE","","",null,null],[17,"SSH_DISCONNECT_ILLEGAL_USER_NAME","","",null,null],[17,"LIBSSH2_FLAG_SIGPIPE","","",null,null],[17,"LIBSSH2_FLAG_COMPRESS","","",null,null],[17,"LIBSSH2_HOSTKEY_TYPE_UNKNOWN","","",null,null],[17,"LIBSSH2_HOSTKEY_TYPE_RSA","","",null,null],[17,"LIBSSH2_HOSTKEY_TYPE_DSS","","",null,null],[17,"LIBSSH2_METHOD_KEX","","",null,null],[17,"LIBSSH2_METHOD_HOSTKEY","","",null,null],[17,"LIBSSH2_METHOD_CRYPT_CS","","",null,null],[17,"LIBSSH2_METHOD_CRYPT_SC","","",null,null],[17,"LIBSSH2_METHOD_MAC_CS","","",null,null],[17,"LIBSSH2_METHOD_MAC_SC","","",null,null],[17,"LIBSSH2_METHOD_COMP_CS","","",null,null],[17,"LIBSSH2_METHOD_COMP_SC","","",null,null],[17,"LIBSSH2_METHOD_LANG_CS","","",null,null],[17,"LIBSSH2_METHOD_LANG_SC","","",null,null],[17,"LIBSSH2_CHANNEL_PACKET_DEFAULT","","",null,null],[17,"LIBSSH2_CHANNEL_WINDOW_DEFAULT","","",null,null],[17,"LIBSSH2_ERROR_BANNER_RECV","","",null,null],[17,"LIBSSH2_ERROR_BANNER_SEND","","",null,null],[17,"LIBSSH2_ERROR_INVALID_MAC","","",null,null],[17,"LIBSSH2_ERROR_KEX_FAILURE","","",null,null],[17,"LIBSSH2_ERROR_ALLOC","","",null,null],[17,"LIBSSH2_ERROR_SOCKET_SEND","","",null,null],[17,"LIBSSH2_ERROR_KEY_EXCHANGE_FAILURE","","",null,null],[17,"LIBSSH2_ERROR_TIMEOUT","","",null,null],[17,"LIBSSH2_ERROR_HOSTKEY_INIT","","",null,null],[17,"LIBSSH2_ERROR_HOSTKEY_SIGN","","",null,null],[17,"LIBSSH2_ERROR_DECRYPT","","",null,null],[17,"LIBSSH2_ERROR_SOCKET_DISCONNECT","","",null,null],[17,"LIBSSH2_ERROR_PROTO","","",null,null],[17,"LIBSSH2_ERROR_PASSWORD_EXPIRED","","",null,null],[17,"LIBSSH2_ERROR_FILE","","",null,null],[17,"LIBSSH2_ERROR_METHOD_NONE","","",null,null],[17,"LIBSSH2_ERROR_AUTHENTICATION_FAILED","","",null,null],[17,"LIBSSH2_ERROR_PUBLICKEY_UNRECOGNIZED","","",null,null],[17,"LIBSSH2_ERROR_PUBLICKEY_UNVERIFIED","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_OUTOFORDER","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_FAILURE","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_REQUEST_DENIED","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_UNKNOWN","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_WINDOW_EXCEEDED","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_PACKET_EXCEEDED","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_CLOSED","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_EOF_SENT","","",null,null],[17,"LIBSSH2_ERROR_SCP_PROTOCOL","","",null,null],[17,"LIBSSH2_ERROR_ZLIB","","",null,null],[17,"LIBSSH2_ERROR_SOCKET_TIMEOUT","","",null,null],[17,"LIBSSH2_ERROR_SFTP_PROTOCOL","","",null,null],[17,"LIBSSH2_ERROR_REQUEST_DENIED","","",null,null],[17,"LIBSSH2_ERROR_METHOD_NOT_SUPPORTED","","",null,null],[17,"LIBSSH2_ERROR_INVAL","","",null,null],[17,"LIBSSH2_ERROR_INVALID_POLL_TYPE","","",null,null],[17,"LIBSSH2_ERROR_PUBLICKEY_PROTOCOL","","",null,null],[17,"LIBSSH2_ERROR_EAGAIN","","",null,null],[17,"LIBSSH2_ERROR_BUFFER_TOO_SMALL","","",null,null],[17,"LIBSSH2_ERROR_BAD_USE","","",null,null],[17,"LIBSSH2_ERROR_COMPRESS","","",null,null],[17,"LIBSSH2_ERROR_OUT_OF_BOUNDARY","","",null,null],[17,"LIBSSH2_ERROR_AGENT_PROTOCOL","","",null,null],[17,"LIBSSH2_ERROR_SOCKET_RECV","","",null,null],[17,"LIBSSH2_ERROR_ENCRYPT","","",null,null],[17,"LIBSSH2_ERROR_BAD_SOCKET","","",null,null],[17,"LIBSSH2_ERROR_KNOWN_HOSTS","","",null,null],[17,"LIBSSH2_HOSTKEY_HASH_MD5","","",null,null],[17,"LIBSSH2_HOSTKEY_HASH_SHA1","","",null,null],[17,"LIBSSH2_KNOWNHOST_FILE_OPENSSH","","",null,null],[17,"LIBSSH2_KNOWNHOST_CHECK_MATCH","","",null,null],[17,"LIBSSH2_KNOWNHOST_CHECK_MISMATCH","","",null,null],[17,"LIBSSH2_KNOWNHOST_CHECK_NOTFOUND","","",null,null],[17,"LIBSSH2_KNOWNHOST_CHECK_FAILURE","","",null,null],[17,"LIBSSH2_KNOWNHOST_TYPE_PLAIN","","",null,null],[17,"LIBSSH2_KNOWNHOST_TYPE_SHA1","","",null,null],[17,"LIBSSH2_KNOWNHOST_TYPE_CUSTOM","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEYENC_RAW","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEYENC_BASE64","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_RSA1","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_SSHRSA","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_SSHDSS","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_UNKNOWN","","",null,null],[17,"LIBSSH2_FXF_READ","","",null,null],[17,"LIBSSH2_FXF_WRITE","","",null,null],[17,"LIBSSH2_FXF_APPEND","","",null,null],[17,"LIBSSH2_FXF_CREAT","","",null,null],[17,"LIBSSH2_FXF_TRUNC","","",null,null],[17,"LIBSSH2_FXF_EXCL","","",null,null],[17,"LIBSSH2_SFTP_OPENFILE","","",null,null],[17,"LIBSSH2_SFTP_OPENDIR","","",null,null],[17,"LIBSSH2_SFTP_ATTR_SIZE","","",null,null],[17,"LIBSSH2_SFTP_ATTR_UIDGID","","",null,null],[17,"LIBSSH2_SFTP_ATTR_PERMISSIONS","","",null,null],[17,"LIBSSH2_SFTP_ATTR_ACMODTIME","","",null,null],[17,"LIBSSH2_SFTP_ATTR_EXTENDED","","",null,null],[17,"LIBSSH2_SFTP_STAT","","",null,null],[17,"LIBSSH2_SFTP_LSTAT","","",null,null],[17,"LIBSSH2_SFTP_SETSTAT","","",null,null],[17,"LIBSSH2_SFTP_SYMLINK","","",null,null],[17,"LIBSSH2_SFTP_READLINK","","",null,null],[17,"LIBSSH2_SFTP_REALPATH","","",null,null],[17,"LIBSSH2_SFTP_RENAME_OVERWRITE","","",null,null],[17,"LIBSSH2_SFTP_RENAME_ATOMIC","","",null,null],[17,"LIBSSH2_SFTP_RENAME_NATIVE","","",null,null],[11,"clone","","",2,{"inputs":[{"name":"libssh2_sftp_attributes"}],"output":{"name":"libssh2_sftp_attributes"}}],[11,"clone","","",3,{"inputs":[{"name":"libssh2_sftp_statvfs"}],"output":{"name":"libssh2_sftp_statvfs"}}]],"paths":[[3,"libssh2_agent_publickey"],[3,"libssh2_knownhost"],[3,"LIBSSH2_SFTP_ATTRIBUTES"],[3,"LIBSSH2_SFTP_STATVFS"]]};
searchIndex['curl_sys'] = {"items":[[0,"","curl_sys","",null,null],[3,"curl_version_info_data","","",null,null],[12,"age","","",0,null],[12,"version","","",0,null],[12,"version_num","","",0,null],[12,"host","","",0,null],[12,"features","","",0,null],[12,"ssl_version","","",0,null],[12,"ssl_version_num","","",0,null],[12,"libz_version","","",0,null],[12,"protocols","","",0,null],[12,"ares","","",0,null],[12,"ares_num","","",0,null],[12,"libidn","","",0,null],[12,"iconv_ver_num","","",0,null],[12,"libssh_version","","",0,null],[4,"CURLversion","","",null,null],[13,"CURL_VERSION_FIRST","","",1,null],[13,"CURL_VERSION_SECOND","","",1,null],[13,"CURL_VERSION_THIRD","","",1,null],[13,"CURL_VERSION_FOURTH","","",1,null],[13,"CURL_VERSION_LAST","","",1,null],[4,"CURLcode","","",null,null],[13,"CURLE_OK","","",2,null],[13,"CURLE_UNSUPPORTED_PROTOCOL","","",2,null],[13,"CURLE_FAILED_INIT","","",2,null],[13,"CURLE_URL_MALFORMAT","","",2,null],[13,"CURLE_NOT_BUILT_IN","","",2,null],[13,"CURLE_COULDNT_RESOLVE_PROXY","","",2,null],[13,"CURLE_COULDNT_RESOLVE_HOST","","",2,null],[13,"CURLE_COULDNT_CONNECT","","",2,null],[13,"CURLE_FTP_WEIRD_SERVER_REPLY","","",2,null],[13,"CURLE_REMOTE_ACCESS_DENIED","","",2,null],[13,"CURLE_FTP_ACCEPT_FAILED","","",2,null],[13,"CURLE_FTP_WEIRD_PASS_REPLY","","",2,null],[13,"CURLE_FTP_ACCEPT_TIMEOUT","","",2,null],[13,"CURLE_FTP_WEIRD_PASV_REPLY","","",2,null],[13,"CURLE_FTP_WEIRD_227_FORMAT","","",2,null],[13,"CURLE_FTP_CANT_GET_HOST","","",2,null],[13,"CURLE_OBSOLETE16","","",2,null],[13,"CURLE_FTP_COULDNT_SET_TYPE","","",2,null],[13,"CURLE_PARTIAL_FILE","","",2,null],[13,"CURLE_FTP_COULDNT_RETR_FILE","","",2,null],[13,"CURLE_OBSOLETE20","","",2,null],[13,"CURLE_QUOTE_ERROR","","",2,null],[13,"CURLE_HTTP_RETURNED_ERROR","","",2,null],[13,"CURLE_WRITE_ERROR","","",2,null],[13,"CURLE_OBSOLETE24","","",2,null],[13,"CURLE_UPLOAD_FAILED","","",2,null],[13,"CURLE_READ_ERROR","","",2,null],[13,"CURLE_OUT_OF_MEMORY","","",2,null],[13,"CURLE_OPERATION_TIMEDOUT","","",2,null],[13,"CURLE_OBSOLETE29","","",2,null],[13,"CURLE_FTP_PORT_FAILED","","",2,null],[13,"CURLE_FTP_COULDNT_USE_REST","","",2,null],[13,"CURLE_OBSOLETE32","","",2,null],[13,"CURLE_RANGE_ERROR","","",2,null],[13,"CURLE_HTTP_POST_ERROR","","",2,null],[13,"CURLE_SSL_CONNECT_ERROR","","",2,null],[13,"CURLE_BAD_DOWNLOAD_RESUME","","",2,null],[13,"CURLE_FILE_COULDNT_READ_FILE","","",2,null],[13,"CURLE_LDAP_CANNOT_BIND","","",2,null],[13,"CURLE_LDAP_SEARCH_FAILED","","",2,null],[13,"CURLE_OBSOLETE40","","",2,null],[13,"CURLE_FUNCTION_NOT_FOUND","","",2,null],[13,"CURLE_ABORTED_BY_CALLBACK","","",2,null],[13,"CURLE_BAD_FUNCTION_ARGUMENT","","",2,null],[13,"CURLE_OBSOLETE44","","",2,null],[13,"CURLE_INTERFACE_FAILED","","",2,null],[13,"CURLE_OBSOLETE46","","",2,null],[13,"CURLE_TOO_MANY_REDIRECTS","","",2,null],[13,"CURLE_UNKNOWN_OPTION","","",2,null],[13,"CURLE_TELNET_OPTION_SYNTAX","","",2,null],[13,"CURLE_OBSOLETE50","","",2,null],[13,"CURLE_PEER_FAILED_VERIFICATION","","",2,null],[13,"CURLE_GOT_NOTHING","","",2,null],[13,"CURLE_SSL_ENGINE_NOTFOUND","","",2,null],[13,"CURLE_SSL_ENGINE_SETFAILED","","",2,null],[13,"CURLE_SEND_ERROR","","",2,null],[13,"CURLE_RECV_ERROR","","",2,null],[13,"CURLE_OBSOLETE57","","",2,null],[13,"CURLE_SSL_CERTPROBLEM","","",2,null],[13,"CURLE_SSL_CIPHER","","",2,null],[13,"CURLE_SSL_CACERT","","",2,null],[13,"CURLE_BAD_CONTENT_ENCODING","","",2,null],[13,"CURLE_LDAP_INVALID_URL","","",2,null],[13,"CURLE_FILESIZE_EXCEEDED","","",2,null],[13,"CURLE_USE_SSL_FAILED","","",2,null],[13,"CURLE_SEND_FAIL_REWIND","","",2,null],[13,"CURLE_SSL_ENGINE_INITFAILED","","",2,null],[13,"CURLE_LOGIN_DENIED","","",2,null],[13,"CURLE_TFTP_NOTFOUND","","",2,null],[13,"CURLE_TFTP_PERM","","",2,null],[13,"CURLE_REMOTE_DISK_FULL","","",2,null],[13,"CURLE_TFTP_ILLEGAL","","",2,null],[13,"CURLE_TFTP_UNKNOWNID","","",2,null],[13,"CURLE_REMOTE_FILE_EXISTS","","",2,null],[13,"CURLE_TFTP_NOSUCHUSER","","",2,null],[13,"CURLE_CONV_FAILED","","",2,null],[13,"CURLE_CONV_REQD","","",2,null],[13,"CURLE_SSL_CACERT_BADFILE","","",2,null],[13,"CURLE_REMOTE_FILE_NOT_FOUND","","",2,null],[13,"CURLE_SSH","","",2,null],[13,"CURLE_SSL_SHUTDOWN_FAILED","","",2,null],[13,"CURLE_AGAIN","","",2,null],[13,"CURLE_SSL_CRL_BADFILE","","",2,null],[13,"CURLE_SSL_ISSUER_ERROR","","",2,null],[13,"CURLE_FTP_PRET_FAILED","","",2,null],[13,"CURLE_RTSP_CSEQ_ERROR","","",2,null],[13,"CURLE_RTSP_SESSION_ERROR","","",2,null],[13,"CURLE_FTP_BAD_FILE_LIST","","",2,null],[13,"CURLE_CHUNK_FAILED","","",2,null],[13,"CURLE_NO_CONNECTION_AVAILABLE","","",2,null],[13,"CURLE_LAST","","",2,null],[5,"curl_easy_strerror","","",null,null],[5,"curl_easy_init","","",null,null],[5,"curl_easy_setopt","","",null,null],[5,"curl_easy_perform","","",null,null],[5,"curl_easy_cleanup","","",null,null],[5,"curl_easy_getinfo","","",null,null],[5,"curl_global_cleanup","","",null,null],[5,"curl_slist_append","","",null,null],[5,"curl_slist_free_all","","",null,null],[5,"curl_version","","",null,null],[5,"curl_version_info","","",null,null],[6,"CURLINFO","","",null,null],[6,"CURL","","",null,null],[6,"curl_slist","","",null,null],[6,"CURLoption","","",null,null],[17,"CURL_READFUNC_ABORT","","",null,null],[17,"CURLINFO_STRING","","",null,null],[17,"CURLINFO_LONG","","",null,null],[17,"CURLINFO_DOUBLE","","",null,null],[17,"CURLINFO_SLIST","","",null,null],[17,"CURLINFO_MASK","","",null,null],[17,"CURLINFO_TYPEMASK","","",null,null],[17,"CURLINFO_EFFECTIVE_URL","","",null,null],[17,"CURLINFO_RESPONSE_CODE","","",null,null],[17,"CURLINFO_TOTAL_TIME","","",null,null],[17,"CURLOPTTYPE_LONG","","",null,null],[17,"CURLOPTTYPE_OBJECTPOINT","","",null,null],[17,"CURLOPTTYPE_FUNCTIONPOINT","","",null,null],[17,"CURLOPTTYPE_OFF_T","","",null,null],[17,"CURL_VERSION_NOW","","",null,null],[17,"CURL_VERSION_IPV6","","",null,null],[17,"CURL_VERSION_KERBEROS4","","",null,null],[17,"CURL_VERSION_SSL","","",null,null],[17,"CURL_VERSION_LIBZ","","",null,null],[17,"CURL_VERSION_NTLM","","",null,null],[17,"CURL_VERSION_GSSNEGOTIATE","","",null,null],[17,"CURL_VERSION_DEBUG","","",null,null],[17,"CURL_VERSION_ASYNCHDNS","","",null,null],[17,"CURL_VERSION_SPNEGO","","",null,null],[17,"CURL_VERSION_LARGEFILE","","",null,null],[17,"CURL_VERSION_IDN","","",null,null],[17,"CURL_VERSION_SSPI","","",null,null],[17,"CURL_VERSION_CONV","","",null,null],[17,"CURL_VERSION_CURLDEBUG","","",null,null],[17,"CURL_VERSION_TLSAUTH_SRP","","",null,null],[17,"CURL_VERSION_NTLM_WB","","",null,null],[17,"CURL_VERSION_HTTP2","","",null,null],[17,"CURLOPT_FILE","","",null,null],[17,"CURLOPT_URL","","",null,null],[17,"CURLOPT_PORT","","",null,null],[17,"CURLOPT_PROXY","","",null,null],[17,"CURLOPT_USERPWD","","",null,null],[17,"CURLOPT_PROXYUSERPWD","","",null,null],[17,"CURLOPT_RANGE","","",null,null],[17,"CURLOPT_INFILE","","",null,null],[17,"CURLOPT_ERRORBUFFER","","",null,null],[17,"CURLOPT_WRITEFUNCTION","","",null,null],[17,"CURLOPT_READFUNCTION","","",null,null],[17,"CURLOPT_TIMEOUT","","",null,null],[17,"CURLOPT_INFILESIZE","","",null,null],[17,"CURLOPT_POSTFIELDS","","",null,null],[17,"CURLOPT_REFERER","","",null,null],[17,"CURLOPT_FTPPORT","","",null,null],[17,"CURLOPT_USERAGENT","","",null,null],[17,"CURLOPT_LOW_SPEED_LIMIT","","",null,null],[17,"CURLOPT_LOW_SPEED_TIME","","",null,null],[17,"CURLOPT_RESUME_FROM","","",null,null],[17,"CURLOPT_COOKIE","","",null,null],[17,"CURLOPT_HTTPHEADER","","",null,null],[17,"CURLOPT_HTTPPOST","","",null,null],[17,"CURLOPT_SSLCERT","","",null,null],[17,"CURLOPT_KEYPASSWD","","",null,null],[17,"CURLOPT_CRLF","","",null,null],[17,"CURLOPT_QUOTE","","",null,null],[17,"CURLOPT_WRITEHEADER","","",null,null],[17,"CURLOPT_COOKIEFILE","","",null,null],[17,"CURLOPT_SSLVERSION","","",null,null],[17,"CURLOPT_TIMECONDITION","","",null,null],[17,"CURLOPT_TIMEVALUE","","",null,null],[17,"CURLOPT_CUSTOMREQUEST","","",null,null],[17,"CURLOPT_STDERR","","",null,null],[17,"CURLOPT_POSTQUOTE","","",null,null],[17,"CURLOPT_WRITEINFO","","",null,null],[17,"CURLOPT_VERBOSE","","",null,null],[17,"CURLOPT_HEADER","","",null,null],[17,"CURLOPT_NOPROGRESS","","",null,null],[17,"CURLOPT_NOBODY","","",null,null],[17,"CURLOPT_FAILONERROR","","",null,null],[17,"CURLOPT_UPLOAD","","",null,null],[17,"CURLOPT_POST","","",null,null],[17,"CURLOPT_DIRLISTONLY","","",null,null],[17,"CURLOPT_APPEND","","",null,null],[17,"CURLOPT_NETRC","","",null,null],[17,"CURLOPT_FOLLOWLOCATION","","",null,null],[17,"CURLOPT_TRANSFERTEXT","","",null,null],[17,"CURLOPT_PUT","","",null,null],[17,"CURLOPT_PROGRESSFUNCTION","","",null,null],[17,"CURLOPT_PROGRESSDATA","","",null,null],[17,"CURLOPT_AUTOREFERER","","",null,null],[17,"CURLOPT_PROXYPORT","","",null,null],[17,"CURLOPT_POSTFIELDSIZE","","",null,null],[17,"CURLOPT_HTTPPROXYTUNNEL","","",null,null],[17,"CURLOPT_INTERFACE","","",null,null],[17,"CURLOPT_KRBLEVEL","","",null,null],[17,"CURLOPT_SSL_VERIFYPEER","","",null,null],[17,"CURLOPT_CAINFO","","",null,null],[17,"CURLOPT_MAXREDIRS","","",null,null],[17,"CURLOPT_FILETIME","","",null,null],[17,"CURLOPT_TELNETOPTIONS","","",null,null],[17,"CURLOPT_MAXCONNECTS","","",null,null],[17,"CURLOPT_CLOSEPOLICY","","",null,null],[17,"CURLOPT_FRESH_CONNECT","","",null,null],[17,"CURLOPT_FORBID_REUSE","","",null,null],[17,"CURLOPT_RANDOM_FILE","","",null,null],[17,"CURLOPT_EGDSOCKET","","",null,null],[17,"CURLOPT_CONNECTTIMEOUT","","",null,null],[17,"CURLOPT_HEADERFUNCTION","","",null,null],[17,"CURLOPT_HTTPGET","","",null,null],[17,"CURLOPT_SSL_VERIFYHOST","","",null,null],[17,"CURLOPT_COOKIEJAR","","",null,null],[17,"CURLOPT_SSL_CIPHER_LIST","","",null,null],[17,"CURLOPT_HTTP_VERSION","","",null,null],[17,"CURLOPT_FTP_USE_EPSV","","",null,null],[17,"CURLOPT_SSLCERTTYPE","","",null,null],[17,"CURLOPT_SSLKEY","","",null,null],[17,"CURLOPT_SSLKEYTYPE","","",null,null],[17,"CURLOPT_SSLENGINE","","",null,null],[17,"CURLOPT_SSLENGINE_DEFAULT","","",null,null],[17,"CURLOPT_DNS_USE_GLOBAL_CACHE","","",null,null],[17,"CURLOPT_DNS_CACHE_TIMEOUT","","",null,null],[17,"CURLOPT_PREQUOTE","","",null,null],[17,"CURLOPT_DEBUGFUNCTION","","",null,null],[17,"CURLOPT_DEBUGDATA","","",null,null],[17,"CURLOPT_COOKIESESSION","","",null,null],[17,"CURLOPT_CAPATH","","",null,null],[17,"CURLOPT_BUFFERSIZE","","",null,null],[17,"CURLOPT_NOSIGNAL","","",null,null],[17,"CURLOPT_SHARE","","",null,null],[17,"CURLOPT_PROXYTYPE","","",null,null],[17,"CURLOPT_ACCEPT_ENCODING","","",null,null],[17,"CURLOPT_PRIVATE","","",null,null],[17,"CURLOPT_HTTP200ALIASES","","",null,null],[17,"CURLOPT_UNRESTRICTED_AUTH","","",null,null],[17,"CURLOPT_FTP_USE_EPRT","","",null,null],[17,"CURLOPT_HTTPAUTH","","",null,null],[17,"CURLOPT_SSL_CTX_FUNCTION","","",null,null],[17,"CURLOPT_SSL_CTX_DATA","","",null,null],[17,"CURLOPT_FTP_CREATE_MISSING_DIRS","","",null,null],[17,"CURLOPT_PROXYAUTH","","",null,null],[17,"CURLOPT_FTP_RESPONSE_TIMEOUT","","",null,null],[17,"CURLOPT_IPRESOLVE","","",null,null],[17,"CURLOPT_MAXFILESIZE","","",null,null],[17,"CURLOPT_INFILESIZE_LARGE","","",null,null],[17,"CURLOPT_RESUME_FROM_LARGE","","",null,null],[17,"CURLOPT_MAXFILESIZE_LARGE","","",null,null],[17,"CURLOPT_NETRC_FILE","","",null,null],[17,"CURLOPT_USE_SSL","","",null,null],[17,"CURLOPT_POSTFIELDSIZE_LARGE","","",null,null],[17,"CURLOPT_TCP_NODELAY","","",null,null],[17,"CURLOPT_FTPSSLAUTH","","",null,null],[17,"CURLOPT_IOCTLFUNCTION","","",null,null],[17,"CURLOPT_IOCTLDATA","","",null,null],[17,"CURLOPT_FTP_ACCOUNT","","",null,null],[17,"CURLOPT_COOKIELIST","","",null,null],[17,"CURLOPT_IGNORE_CONTENT_LENGTH","","",null,null],[17,"CURLOPT_FTP_SKIP_PASV_IP","","",null,null],[17,"CURLOPT_FTP_FILEMETHOD","","",null,null],[17,"CURLOPT_LOCALPORT","","",null,null],[17,"CURLOPT_LOCALPORTRANGE","","",null,null],[17,"CURLOPT_CONNECT_ONLY","","",null,null],[17,"CURLOPT_CONV_FROM_NETWORK_FUNCTION","","",null,null],[17,"CURLOPT_CONV_TO_NETWORK_FUNCTION","","",null,null],[17,"CURLOPT_CONV_FROM_UTF8_FUNCTION","","",null,null],[17,"CURLOPT_MAX_SEND_SPEED_LARGE","","",null,null],[17,"CURLOPT_MAX_RECV_SPEED_LARGE","","",null,null],[17,"CURLOPT_FTP_ALTERNATIVE_TO_USER","","",null,null],[17,"CURLOPT_SOCKOPTFUNCTION","","",null,null],[17,"CURLOPT_SOCKOPTDATA","","",null,null],[17,"CURLOPT_SSL_SESSIONID_CACHE","","",null,null],[17,"CURLOPT_SSH_AUTH_TYPES","","",null,null],[17,"CURLOPT_SSH_PUBLIC_KEYFILE","","",null,null],[17,"CURLOPT_SSH_PRIVATE_KEYFILE","","",null,null],[17,"CURLOPT_FTP_SSL_CCC","","",null,null],[17,"CURLOPT_TIMEOUT_MS","","",null,null],[17,"CURLOPT_CONNECTTIMEOUT_MS","","",null,null],[17,"CURLOPT_HTTP_TRANSFER_DECODING","","",null,null],[17,"CURLOPT_HTTP_CONTENT_DECODING","","",null,null],[17,"CURLOPT_NEW_FILE_PERMS","","",null,null],[17,"CURLOPT_NEW_DIRECTORY_PERMS","","",null,null],[17,"CURLOPT_POSTREDIR","","",null,null],[17,"CURLOPT_SSH_HOST_PUBLIC_KEY_MD5","","",null,null],[17,"CURLOPT_OPENSOCKETFUNCTION","","",null,null],[17,"CURLOPT_OPENSOCKETDATA","","",null,null],[17,"CURLOPT_COPYPOSTFIELDS","","",null,null],[17,"CURLOPT_PROXY_TRANSFER_MODE","","",null,null],[17,"CURLOPT_SEEKFUNCTION","","",null,null],[17,"CURLOPT_SEEKDATA","","",null,null],[17,"CURLOPT_CRLFILE","","",null,null],[17,"CURLOPT_ISSUERCERT","","",null,null],[17,"CURLOPT_ADDRESS_SCOPE","","",null,null],[17,"CURLOPT_CERTINFO","","",null,null],[17,"CURLOPT_USERNAME","","",null,null],[17,"CURLOPT_PASSWORD","","",null,null],[17,"CURLOPT_PROXYUSERNAME","","",null,null],[17,"CURLOPT_PROXYPASSWORD","","",null,null],[17,"CURLOPT_NOPROXY","","",null,null],[17,"CURLOPT_TFTP_BLKSIZE","","",null,null],[17,"CURLOPT_SOCKS5_GSSAPI_SERVICE","","",null,null],[17,"CURLOPT_SOCKS5_GSSAPI_NEC","","",null,null],[17,"CURLOPT_PROTOCOLS","","",null,null],[17,"CURLOPT_REDIR_PROTOCOLS","","",null,null],[17,"CURLOPT_SSH_KNOWNHOSTS","","",null,null],[17,"CURLOPT_SSH_KEYFUNCTION","","",null,null],[17,"CURLOPT_SSH_KEYDATA","","",null,null],[17,"CURLOPT_MAIL_FROM","","",null,null],[17,"CURLOPT_MAIL_RCPT","","",null,null],[17,"CURLOPT_FTP_USE_PRET","","",null,null],[17,"CURLOPT_RTSP_REQUEST","","",null,null],[17,"CURLOPT_RTSP_SESSION_ID","","",null,null],[17,"CURLOPT_RTSP_STREAM_URI","","",null,null],[17,"CURLOPT_RTSP_TRANSPORT","","",null,null],[17,"CURLOPT_RTSP_CLIENT_CSEQ","","",null,null],[17,"CURLOPT_RTSP_SERVER_CSEQ","","",null,null],[17,"CURLOPT_INTERLEAVEDATA","","",null,null],[17,"CURLOPT_INTERLEAVEFUNCTION","","",null,null],[17,"CURLOPT_WILDCARDMATCH","","",null,null],[17,"CURLOPT_CHUNK_BGN_FUNCTION","","",null,null],[17,"CURLOPT_CHUNK_END_FUNCTION","","",null,null],[17,"CURLOPT_FNMATCH_FUNCTION","","",null,null],[17,"CURLOPT_CHUNK_DATA","","",null,null],[17,"CURLOPT_FNMATCH_DATA","","",null,null],[17,"CURLOPT_RESOLVE","","",null,null],[17,"CURLOPT_TLSAUTH_USERNAME","","",null,null],[17,"CURLOPT_TLSAUTH_PASSWORD","","",null,null],[17,"CURLOPT_TLSAUTH_TYPE","","",null,null],[17,"CURLOPT_TRANSFER_ENCODING","","",null,null],[17,"CURLOPT_CLOSESOCKETFUNCTION","","",null,null],[17,"CURLOPT_CLOSESOCKETDATA","","",null,null],[17,"CURLOPT_GSSAPI_DELEGATION","","",null,null],[17,"CURLOPT_DNS_SERVERS","","",null,null],[17,"CURLOPT_ACCEPTTIMEOUT_MS","","",null,null],[17,"CURLOPT_TCP_KEEPALIVE","","",null,null],[17,"CURLOPT_TCP_KEEPIDLE","","",null,null],[17,"CURLOPT_TCP_KEEPINTVL","","",null,null],[17,"CURLOPT_SSL_OPTIONS","","",null,null],[17,"CURLOPT_MAIL_AUTH","","",null,null],[17,"CURLOPT_SASL_IR","","",null,null],[17,"CURLOPT_XFERINFOFUNCTION","","",null,null],[17,"CURLOPT_XOAUTH2_BEARER","","",null,null],[17,"CURLOPT_DNS_INTERFACE","","",null,null],[17,"CURLOPT_DNS_LOCAL_IP4","","",null,null],[17,"CURLOPT_DNS_LOCAL_IP6","","",null,null],[17,"CURLOPT_LOGIN_OPTIONS","","",null,null],[17,"CURLOPT_SSL_ENABLE_NPN","","",null,null],[17,"CURLOPT_SSL_ENABLE_ALPN","","",null,null],[17,"CURLOPT_EXPECT_100_TIMEOUT_MS","","",null,null],[17,"CURLOPT_PROXYHEADER","","",null,null],[17,"CURLOPT_HEADEROPT","","",null,null],[17,"CURLOPT_POST301","","",null,null],[17,"CURLOPT_SSLKEYPASSWD","","",null,null],[17,"CURLOPT_FTPAPPEND","","",null,null],[17,"CURLOPT_FTPLISTONLY","","",null,null],[17,"CURLOPT_FTP_SSL","","",null,null],[17,"CURLOPT_SSLCERTPASSWD","","",null,null],[17,"CURLOPT_KRB4LEVEL","","",null,null],[17,"CURLOPT_READDATA","","",null,null],[17,"CURLOPT_WRITEDATA","","",null,null],[17,"CURLOPT_HEADERDATA","","",null,null],[17,"CURLOPT_XFERINFODATA","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"curlversion"}],"output":{"name":"curlversion"}}],[11,"clone","","",0,{"inputs":[{"name":"curl_version_info_data"}],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"curlcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"curlcode"}],"output":{"name":"curlcode"}}]],"paths":[[3,"curl_version_info_data"],[4,"CURLversion"],[4,"CURLcode"]]};
searchIndex['openssl_sys'] = {"items":[[0,"","openssl_sys","",null,null],[3,"EVP_MD_CTX","","",null,null],[3,"HMAC_CTX","","",null,null],[3,"X509V3_CTX","","",null,null],[3,"BIGNUM","","",null,null],[12,"d","","",0,null],[12,"top","","",0,null],[12,"dmax","","",0,null],[12,"neg","","",0,null],[12,"flags","","",0,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"BIO_eof","","",null,null],[5,"SSL_CTX_set_options","","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"HMAC_Init_ex_shim","","",null,null],[5,"HMAC_Final_shim","","",null,null],[5,"HMAC_Update_shim","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509V3_EXT_conf_nid","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[0,"probe","","",null,null],[3,"ProbeResult","openssl_sys::probe","",null,null],[12,"cert_file","","",1,null],[12,"cert_dir","","",1,null],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound.",null,{"inputs":[],"output":{"name":"vec"}}],[5,"init_ssl_cert_env_vars","","",null,{"inputs":[],"output":null}],[5,"probe","","",null,{"inputs":[],"output":{"name":"proberesult"}}],[6,"ASN1_INTEGER","openssl_sys","",null,null],[6,"ASN1_STRING","","",null,null],[6,"ASN1_TIME","","",null,null],[6,"BIO","","",null,null],[6,"BIO_METHOD","","",null,null],[6,"BN_CTX","","",null,null],[6,"COMP_METHOD","","",null,null],[6,"CRYPTO_EX_DATA","","",null,null],[6,"ENGINE","","",null,null],[6,"EVP_CIPHER","","",null,null],[6,"EVP_CIPHER_CTX","","",null,null],[6,"EVP_MD","","",null,null],[6,"EVP_PKEY","","",null,null],[6,"EVP_PKEY_CTX","","",null,null],[6,"RSA","","",null,null],[6,"SSL","","",null,null],[6,"SSL_CTX","","",null,null],[6,"SSL_METHOD","","",null,null],[6,"X509","","",null,null],[6,"X509_CRL","","",null,null],[6,"X509_EXTENSION","","",null,null],[6,"X509_NAME","","",null,null],[6,"X509_NAME_ENTRY","","",null,null],[6,"X509_REQ","","",null,null],[6,"X509_STORE_CTX","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_key_usage","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_OK","","",null,null],[11,"clone","","",2,{"inputs":[{"name":"evp_md_ctx"}],"output":{"name":"evp_md_ctx"}}],[11,"clone","","",3,{"inputs":[{"name":"hmac_ctx"}],"output":{"name":"hmac_ctx"}}],[11,"clone","","",4,{"inputs":[{"name":"x509v3_ctx"}],"output":{"name":"x509v3_ctx"}}],[11,"clone","","",0,{"inputs":[{"name":"bignum"}],"output":{"name":"bignum"}}]],"paths":[[3,"BIGNUM"],[3,"ProbeResult"],[3,"EVP_MD_CTX"],[3,"HMAC_CTX"],[3,"X509V3_CTX"]]};
searchIndex['libz_sys'] = {"items":[[0,"","libz_sys","",null,null],[3,"gz_header","","",null,null],[12,"text","","",0,null],[12,"time","","",0,null],[12,"xflags","","",0,null],[12,"os","","",0,null],[12,"extra","","",0,null],[12,"extra_len","","",0,null],[12,"extra_max","","",0,null],[12,"name","","",0,null],[12,"name_max","","",0,null],[12,"comment","","",0,null],[12,"comm_max","","",0,null],[12,"hcrc","","",0,null],[12,"done","","",0,null],[3,"z_stream","","",null,null],[12,"next_in","","",1,null],[12,"avail_in","","",1,null],[12,"total_in","","",1,null],[12,"next_out","","",1,null],[12,"avail_out","","",1,null],[12,"total_out","","",1,null],[12,"msg","","",1,null],[12,"state","","",1,null],[12,"zalloc","","",1,null],[12,"zfree","","",1,null],[12,"opaque","","",1,null],[12,"data_type","","",1,null],[12,"adler","","",1,null],[12,"reserved","","",1,null],[4,"gzFile_s","","",null,null],[4,"internal_state","","",null,null],[5,"adler32","","",null,null],[5,"adler32_combine","","",null,null],[5,"compress","","",null,null],[5,"compress2","","",null,null],[5,"compressBound","","",null,null],[5,"crc32","","",null,null],[5,"crc32_combine","","",null,null],[5,"deflate","","",null,null],[5,"deflateBound","","",null,null],[5,"deflateCopy","","",null,null],[5,"deflateEnd","","",null,null],[5,"deflateInit","","",null,null],[5,"deflateInit2","","",null,null],[5,"deflateParams","","",null,null],[5,"deflatePending","","",null,null],[5,"deflatePrime","","",null,null],[5,"deflateReset","","",null,null],[5,"deflateSetDictionary","","",null,null],[5,"deflateSetHeader","","",null,null],[5,"deflateTune","","",null,null],[5,"gzbuffer","","",null,null],[5,"gzdirect","","",null,null],[5,"gzdopen","","",null,null],[5,"gzclearerr","","",null,null],[5,"gzclose","","",null,null],[5,"gzclose_r","","",null,null],[5,"gzclose_w","","",null,null],[5,"gzeof","","",null,null],[5,"gzerror","","",null,null],[5,"gzflush","","",null,null],[5,"gzgetc","","",null,null],[5,"gzgets","","",null,null],[5,"gzoffset","","",null,null],[5,"gzopen","","",null,null],[5,"gzputc","","",null,null],[5,"gzputs","","",null,null],[5,"gzread","","",null,null],[5,"gzrewind","","",null,null],[5,"gzseek","","",null,null],[5,"gzsetparams","","",null,null],[5,"gztell","","",null,null],[5,"gzungetc","","",null,null],[5,"gzwrite","","",null,null],[5,"inflate","","",null,null],[5,"inflateBack","","",null,null],[5,"inflateBackEnd","","",null,null],[5,"inflateBackInit","","",null,null],[5,"inflateCopy","","",null,null],[5,"inflateEnd","","",null,null],[5,"inflateGetDictionary","","",null,null],[5,"inflateGetHeader","","",null,null],[5,"inflateInit","","",null,null],[5,"inflateInit2","","",null,null],[5,"inflateMark","","",null,null],[5,"inflatePrime","","",null,null],[5,"inflateReset","","",null,null],[5,"inflateReset2","","",null,null],[5,"inflateSetDictionary","","",null,null],[5,"inflateSync","","",null,null],[5,"uncompress","","",null,null],[5,"zlibCompileFlags","","",null,null],[5,"zlibVersion","","",null,null],[6,"alloc_func","","",null,null],[6,"Bytef","","",null,null],[6,"free_func","","",null,null],[6,"gzFile","","",null,null],[6,"in_func","","",null,null],[6,"out_func","","",null,null],[6,"uInt","","",null,null],[6,"uLong","","",null,null],[6,"uLongf","","",null,null],[6,"voidp","","",null,null],[6,"voidpc","","",null,null],[6,"voidpf","","",null,null],[6,"z_off_t","","",null,null],[6,"gz_headerp","","",null,null],[6,"z_streamp","","",null,null],[17,"Z_NO_FLUSH","","",null,null],[17,"Z_PARTIAL_FLUSH","","",null,null],[17,"Z_SYNC_FLUSH","","",null,null],[17,"Z_FULL_FLUSH","","",null,null],[17,"Z_FINISH","","",null,null],[17,"Z_BLOCK","","",null,null],[17,"Z_TREES","","",null,null],[17,"Z_OK","","",null,null],[17,"Z_STREAM_END","","",null,null],[17,"Z_NEED_DICT","","",null,null],[17,"Z_ERRNO","","",null,null],[17,"Z_STREAM_ERROR","","",null,null],[17,"Z_DATA_ERROR","","",null,null],[17,"Z_MEM_ERROR","","",null,null],[17,"Z_BUF_ERROR","","",null,null],[17,"Z_VERSION_ERROR","","",null,null],[17,"Z_NO_COMPRESSION","","",null,null],[17,"Z_BEST_SPEED","","",null,null],[17,"Z_BEST_COMPRESSION","","",null,null],[17,"Z_DEFAULT_COMPRESSION","","",null,null],[17,"Z_FILTERED","","",null,null],[17,"Z_HUFFMAN_ONLY","","",null,null],[17,"Z_RLE","","",null,null],[17,"Z_FIXED","","",null,null],[17,"Z_DEFAULT_STRATEGY","","",null,null],[17,"Z_BINARY","","",null,null],[17,"Z_TEXT","","",null,null],[17,"Z_ASCII","","",null,null],[17,"Z_UNKNOWN","","",null,null],[17,"Z_DEFLATED","","",null,null]],"paths":[[3,"gz_header"],[3,"z_stream"]]};
searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade.",null,null],[3,"LogRecord","","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Trace` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,{"inputs":[{"name":"log"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"loglevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",8,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",8,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",8,null],[11,"eq","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",8,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",8,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",8,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"next_back","","",8,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",8,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",8,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"fmt","alloc::arc","",9,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Arc<T>`.",10,{"inputs":[{"name":"arc"},{"name":"t"}],"output":{"name":"arc"}}],[11,"downgrade","","Downgrades the `Arc<T>` to a `Weak<T>` reference.",10,{"inputs":[{"name":"arc"}],"output":{"name":"weak"}}],[11,"clone","","Makes a clone of the `Arc<T>`.",10,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"deref","","",10,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"as_ref","","",10,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"make_unique","","Make a mutable reference from the given `Arc<T>`.",10,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Arc<T>`.",10,null],[11,"upgrade","","Upgrades a weak reference to a strong reference.",9,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"clone","","Makes a clone of the `Weak<T>`.",9,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"drop","","Drops the `Weak<T>`.",9,null],[11,"eq","","Equality for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"cmp","","",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"ordering"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",10,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"hash","","",10,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",11,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",11,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"make_unique","","Make a mutable reference from the given `Rc<T>`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",11,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",11,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",11,null],[11,"clone","","Makes a clone of the `Rc<T>`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",12,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",12,null],[11,"clone","","Makes a clone of the `Weak<T>`.",12,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",12,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"log!","log","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"Box"],[3,"Weak"],[3,"Arc"],[3,"Rc"],[3,"Weak"]]};
searchIndex['gcc'] = {"items":[[0,"","gcc","A library for build scripts to compile custom C code",null,null],[3,"Config","","Extra configuration to pass to gcc.",null,null],[5,"compile_library","","Compile a library from the given set of input C files.",null,null],[11,"new","","Construct a new instance of a blank set of configuration.",0,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"include","","Add a directory to the `-I` or include path for headers",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"define","","Specify a `-D` variable with an optional value.",0,{"inputs":[{"name":"config"},{"name":"str"},{"name":"option"}],"output":{"name":"config"}}],[11,"object","","Add an arbitrary object file to link in",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"flag","","Add an arbitrary flag to the invocation of the compiler",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"file","","Add a file which will be compiled",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"cpp","","Set C++ support.",0,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"cpp_link_stdlib","","Set the standard library to link against when compiling with C++\nsupport.",0,{"inputs":[{"name":"config"},{"name":"option"}],"output":{"name":"config"}}],[11,"cpp_set_stdlib","","Force the C++ compiler to use the specified standard library.",0,{"inputs":[{"name":"config"},{"name":"option"}],"output":{"name":"config"}}],[11,"compile","","Run the compiler, generating the file `output`",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":null}]],"paths":[[3,"Config"]]};
searchIndex['pkg_config'] = {"items":[[0,"","pkg_config","A build dependency for Cargo libraries to find system artifacts through the\n`pkg-config` utility.",null,null],[3,"Config","","",null,null],[3,"Library","","",null,null],[12,"libs","","",0,null],[12,"link_paths","","",0,null],[12,"frameworks","","",0,null],[12,"framework_paths","","",0,null],[12,"include_paths","","",0,null],[5,"target_supported","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"find_library","","Simple shortcut for using all default options for finding a library.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"fmt","","",0,{"inputs":[{"name":"library"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new set of configuration options which are all initially set\nto \"blank\".",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"statik","","Indicate whether the `--static` flag should be passed.",1,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"atleast_version","","Indicate that the library must be at least version `vers`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"arg","","Add an argument to pass to pkg-config.",1,{"inputs":[{"name":"config"},{"name":"s"}],"output":{"name":"config"}}],[11,"find","","Run `pkg-config` to find the library `name`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Library"],[3,"Config"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"gl_pathv","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused1","","",1,null],[12,"__unused2","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_ifu","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_ino","","",17,null],[12,"st_nlink","","",17,null],[12,"st_mode","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"__pad0","","",17,null],[12,"st_rdev","","",17,null],[12,"st_size","","",17,null],[12,"st_blksize","","",17,null],[12,"st_blocks","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"__unused","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"sockaddr_ll","libc::types::os::arch::extra","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EDOTDOT","","",null,null],[17,"EBADMSG","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"ERFKILL","","",null,null],[17,"EHWPOISON","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"AF_PACKET","libc::consts::os::extra","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"fdatasync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"getdtablesize","libc::funcs::bsd44","",null,null],[5,"ioctl","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};
searchIndex['matches'] = {"items":[[0,"","matches","",null,null],[14,"matches!","","",null,null],[14,"_tt_as_expr_hack!","","Work around \"error: unexpected token: `an interpolated tt`\", whatever that means.",null,null]],"paths":[]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
